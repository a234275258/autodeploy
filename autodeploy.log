[ 2016-12-02 00:36:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hu064b1s3xwp0badpwynib0dzx0hw4mx'  AND `django_session`.`expire_date` > '2016-12-02 00:36:28' ); args=('hu064b1s3xwp0badpwynib0dzx0hw4mx', u'2016-12-02 00:36:28')
[ 2016-12-02 00:36:28 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin` WHERE `admin`.`username` LIKE '%xx%' ; args=(u'%xx%',)
[ 2016-12-02 00:36:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` LIKE '%xx%'  ORDER BY `admin`.`username` ASC LIMIT 10 OFFSET 80; args=(u'%xx%',)
[ 2016-12-02 00:36:34 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hu064b1s3xwp0badpwynib0dzx0hw4mx'  AND `django_session`.`expire_date` > '2016-12-02 00:36:34' ); args=('hu064b1s3xwp0badpwynib0dzx0hw4mx', u'2016-12-02 00:36:34')
[ 2016-12-02 00:36:34 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'xx2000267' ; args=(u'xx2000267',)
[ 2016-12-02 00:36:34 ] util.py[line:79] execute DEBUG (0.000) DELETE FROM `admin` WHERE `id` IN (267); args=(267,)
[ 2016-12-02 00:36:56 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'xx2000268' ; args=(u'xx2000268',)
[ 2016-12-02 00:36:56 ] util.py[line:79] execute DEBUG (0.001) DELETE FROM `admin` WHERE `id` IN (268); args=(268,)
[ 2016-12-02 00:38:08 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hu064b1s3xwp0badpwynib0dzx0hw4mx'  AND `django_session`.`expire_date` > '2016-12-02 00:38:08' ); args=('hu064b1s3xwp0badpwynib0dzx0hw4mx', u'2016-12-02 00:38:08')
[ 2016-12-02 00:38:08 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin` WHERE `admin`.`username` LIKE '%xx%' ; args=(u'%xx%',)
[ 2016-12-02 00:38:08 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` LIKE '%xx%'  ORDER BY `admin`.`username` ASC LIMIT 10 OFFSET 80; args=(u'%xx%',)
[ 2016-12-02 00:38:12 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hu064b1s3xwp0badpwynib0dzx0hw4mx'  AND `django_session`.`expire_date` > '2016-12-02 00:38:11' ); args=('hu064b1s3xwp0badpwynib0dzx0hw4mx', u'2016-12-02 00:38:11')
[ 2016-12-02 00:38:12 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'xx2000269' ; args=(u'xx2000269',)
[ 2016-12-02 00:38:12 ] util.py[line:79] execute DEBUG (0.000) DELETE FROM `admin` WHERE `id` IN (269); args=(269,)
[ 2016-12-02 00:38:22 ] prodution   : WARNING  删除ldap用户xx2000269失败
[ 2016-12-02 00:38:26 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'xx2000270' ; args=(u'xx2000270',)
[ 2016-12-02 00:38:26 ] util.py[line:79] execute DEBUG (0.002) DELETE FROM `admin` WHERE `id` IN (270); args=(270,)
[ 2016-12-02 00:38:49 ] prodution   : WARNING  删除ldap用户xx2000270失败
[ 2016-12-02 00:44:46 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 00:48:12 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 00:49:06 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 00:49:12 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 00:53:44 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 00:53:49 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 00:53:49 ] prodution   : ERROR    数据库172.19.20.116连接失败
[ 2016-12-02 00:54:03 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 00:54:03 ] prodution   : ERROR    数据库172.19.20.116连接失败
[ 2016-12-02 00:55:49 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 00:55:54 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 00:55:54 ] prodution   : ERROR    数据库172.19.20.116连接失败
[ 2016-12-02 00:59:45 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 00:59:56 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 00:59:56 ] prodution   : ERROR    数据库172.19.20.116连接失败
[ 2016-12-02 01:00:41 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '602t0t4qywqmyd1sxoay8lnkjcfpg1n8'  AND `django_session`.`expire_date` > '2016-12-02 01:00:41' ); args=('602t0t4qywqmyd1sxoay8lnkjcfpg1n8', u'2016-12-02 01:00:41')
[ 2016-12-02 01:00:41 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '602t0t4qywqmyd1sxoay8lnkjcfpg1n8'  AND `django_session`.`expire_date` > '2016-12-02 01:00:41' ); args=('602t0t4qywqmyd1sxoay8lnkjcfpg1n8', u'2016-12-02 01:00:41')
[ 2016-12-02 01:00:47 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '602t0t4qywqmyd1sxoay8lnkjcfpg1n8'  AND `django_session`.`expire_date` > '2016-12-02 01:00:47' ); args=('602t0t4qywqmyd1sxoay8lnkjcfpg1n8', u'2016-12-02 01:00:47')
[ 2016-12-02 01:00:47 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', `expire_date` = '2016-12-02 02:00:47' WHERE `django_session`.`session_key` = '602t0t4qywqmyd1sxoay8lnkjcfpg1n8' ; args=(u'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', u'2016-12-02 02:00:47', '602t0t4qywqmyd1sxoay8lnkjcfpg1n8')
[ 2016-12-02 01:00:47 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '602t0t4qywqmyd1sxoay8lnkjcfpg1n8'  AND `django_session`.`expire_date` > '2016-12-02 01:00:47' ); args=('602t0t4qywqmyd1sxoay8lnkjcfpg1n8', u'2016-12-02 01:00:47')
[ 2016-12-02 01:00:52 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 01:00:52 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 01:00:52 ] util.py[line:79] execute DEBUG (0.001) UPDATE `admin` SET `username` = 'chenyh', `password` = 'e10adc3949ba59abbe56e057f20f883e', `email` = 'fdgffdg@qq.com', `vaild` = 1, `isadmin` = 1, `logincount` = 59, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'e10adc3949ba59abbe56e057f20f883e', u'fdgffdg@qq.com', 1, 1, 59, u'2016-11-25 20:26:56', 8)
[ 2016-12-02 01:00:52 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 01:00:52 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '602t0t4qywqmyd1sxoay8lnkjcfpg1n8'  AND `django_session`.`expire_date` > '2016-12-02 01:00:52' ); args=('602t0t4qywqmyd1sxoay8lnkjcfpg1n8', u'2016-12-02 01:00:52')
[ 2016-12-02 01:00:52 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-02 02:00:52' WHERE `django_session`.`session_key` = '602t0t4qywqmyd1sxoay8lnkjcfpg1n8' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-02 02:00:52', '602t0t4qywqmyd1sxoay8lnkjcfpg1n8')
[ 2016-12-02 01:00:52 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '602t0t4qywqmyd1sxoay8lnkjcfpg1n8'  AND `django_session`.`expire_date` > '2016-12-02 01:00:52' ); args=('602t0t4qywqmyd1sxoay8lnkjcfpg1n8', u'2016-12-02 01:00:52')
[ 2016-12-02 01:00:56 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '602t0t4qywqmyd1sxoay8lnkjcfpg1n8'  AND `django_session`.`expire_date` > '2016-12-02 01:00:56' ); args=('602t0t4qywqmyd1sxoay8lnkjcfpg1n8', u'2016-12-02 01:00:56')
[ 2016-12-02 01:00:56 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', `expire_date` = '2016-12-02 02:00:56' WHERE `django_session`.`session_key` = '602t0t4qywqmyd1sxoay8lnkjcfpg1n8' ; args=(u'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', u'2016-12-02 02:00:56', '602t0t4qywqmyd1sxoay8lnkjcfpg1n8')
[ 2016-12-02 01:00:56 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '602t0t4qywqmyd1sxoay8lnkjcfpg1n8'  AND `django_session`.`expire_date` > '2016-12-02 01:00:56' ); args=('602t0t4qywqmyd1sxoay8lnkjcfpg1n8', u'2016-12-02 01:00:56')
[ 2016-12-02 15:28:34 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 15:28:34 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 15:28:34 ] util.py[line:79] execute DEBUG (0.001) UPDATE `admin` SET `username` = 'chenyh', `password` = 'e10adc3949ba59abbe56e057f20f883e', `email` = 'fdgffdg@qq.com', `vaild` = 1, `isadmin` = 1, `logincount` = 60, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'e10adc3949ba59abbe56e057f20f883e', u'fdgffdg@qq.com', 1, 1, 60, u'2016-11-25 20:26:56', 8)
[ 2016-12-02 15:28:34 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 15:28:34 ] util.py[line:79] execute DEBUG (0.001) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl'  LIMIT 1; args=(u'il0r73dyj4gjrahus70gl21t6sw24pdl',)
[ 2016-12-02 15:28:34 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-02 16:28:34' WHERE `django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-02 16:28:34', u'il0r73dyj4gjrahus70gl21t6sw24pdl')
[ 2016-12-02 15:28:34 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('il0r73dyj4gjrahus70gl21t6sw24pdl', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-02 16:28:34'); args=(u'il0r73dyj4gjrahus70gl21t6sw24pdl', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-02 16:28:34')
[ 2016-12-02 15:28:34 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl'  AND `django_session`.`expire_date` > '2016-12-02 15:28:34' ); args=('il0r73dyj4gjrahus70gl21t6sw24pdl', u'2016-12-02 15:28:34')
[ 2016-12-02 15:28:40 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl'  AND `django_session`.`expire_date` > '2016-12-02 15:28:40' ); args=('il0r73dyj4gjrahus70gl21t6sw24pdl', u'2016-12-02 15:28:40')
[ 2016-12-02 15:28:40 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', `expire_date` = '2016-12-02 16:28:40' WHERE `django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl' ; args=(u'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', u'2016-12-02 16:28:40', 'il0r73dyj4gjrahus70gl21t6sw24pdl')
[ 2016-12-02 15:28:40 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl'  AND `django_session`.`expire_date` > '2016-12-02 15:28:40' ); args=('il0r73dyj4gjrahus70gl21t6sw24pdl', u'2016-12-02 15:28:40')
[ 2016-12-02 16:02:45 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl'  AND `django_session`.`expire_date` > '2016-12-02 16:02:45' ); args=('il0r73dyj4gjrahus70gl21t6sw24pdl', u'2016-12-02 16:02:45')
[ 2016-12-02 16:02:49 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 16:02:49 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 16:02:49 ] util.py[line:79] execute DEBUG (0.001) UPDATE `admin` SET `username` = 'chenyh', `password` = 'e10adc3949ba59abbe56e057f20f883e', `email` = 'fdgffdg@qq.com', `vaild` = 1, `isadmin` = 1, `logincount` = 61, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'e10adc3949ba59abbe56e057f20f883e', u'fdgffdg@qq.com', 1, 1, 61, u'2016-11-25 20:26:56', 8)
[ 2016-12-02 16:02:49 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 16:02:49 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl'  AND `django_session`.`expire_date` > '2016-12-02 16:02:49' ); args=('il0r73dyj4gjrahus70gl21t6sw24pdl', u'2016-12-02 16:02:49')
[ 2016-12-02 16:02:49 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-02 17:02:49' WHERE `django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-02 17:02:49', 'il0r73dyj4gjrahus70gl21t6sw24pdl')
[ 2016-12-02 16:02:49 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl'  AND `django_session`.`expire_date` > '2016-12-02 16:02:49' ); args=('il0r73dyj4gjrahus70gl21t6sw24pdl', u'2016-12-02 16:02:49')
[ 2016-12-02 16:02:53 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl'  AND `django_session`.`expire_date` > '2016-12-02 16:02:53' ); args=('il0r73dyj4gjrahus70gl21t6sw24pdl', u'2016-12-02 16:02:53')
[ 2016-12-02 16:02:53 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', `expire_date` = '2016-12-02 17:02:53' WHERE `django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl' ; args=(u'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', u'2016-12-02 17:02:53', 'il0r73dyj4gjrahus70gl21t6sw24pdl')
[ 2016-12-02 16:02:53 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl'  AND `django_session`.`expire_date` > '2016-12-02 16:02:53' ); args=('il0r73dyj4gjrahus70gl21t6sw24pdl', u'2016-12-02 16:02:53')
[ 2016-12-02 16:03:04 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 16:03:04 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 16:03:04 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = 'e10adc3949ba59abbe56e057f20f883e', `email` = 'fdgffdg@qq.com', `vaild` = 1, `isadmin` = 1, `logincount` = 62, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'e10adc3949ba59abbe56e057f20f883e', u'fdgffdg@qq.com', 1, 1, 62, u'2016-11-25 20:26:56', 8)
[ 2016-12-02 16:03:04 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 16:03:04 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl'  AND `django_session`.`expire_date` > '2016-12-02 16:03:04' ); args=('il0r73dyj4gjrahus70gl21t6sw24pdl', u'2016-12-02 16:03:04')
[ 2016-12-02 16:03:04 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-02 17:03:04' WHERE `django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-02 17:03:04', 'il0r73dyj4gjrahus70gl21t6sw24pdl')
[ 2016-12-02 16:03:04 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl'  AND `django_session`.`expire_date` > '2016-12-02 16:03:04' ); args=('il0r73dyj4gjrahus70gl21t6sw24pdl', u'2016-12-02 16:03:04')
[ 2016-12-02 16:03:05 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl'  AND `django_session`.`expire_date` > '2016-12-02 16:03:05' ); args=('il0r73dyj4gjrahus70gl21t6sw24pdl', u'2016-12-02 16:03:05')
[ 2016-12-02 16:03:16 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl'  AND `django_session`.`expire_date` > '2016-12-02 16:03:16' ); args=('il0r73dyj4gjrahus70gl21t6sw24pdl', u'2016-12-02 16:03:16')
[ 2016-12-02 16:03:16 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'u0010' ; args=('u0010',)
[ 2016-12-02 16:03:16 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `admin` (`username`, `password`, `email`, `vaild`, `isadmin`, `logincount`, `lastlogin`) VALUES ('u0010', 'e10adc3949ba59abbe56e057f20f883e', 'sdfs@11.com', 1, 0, 0, '2016-12-02 16:03:16'); args=['u0010', 'e10adc3949ba59abbe56e057f20f883e', 'sdfs@11.com', 1, 0, 0, u'2016-12-02 16:03:16']
[ 2016-12-02 16:03:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl'  AND `django_session`.`expire_date` > '2016-12-02 16:03:18' ); args=('il0r73dyj4gjrahus70gl21t6sw24pdl', u'2016-12-02 16:03:18')
[ 2016-12-02 16:03:18 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', `expire_date` = '2016-12-02 17:03:18' WHERE `django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl' ; args=(u'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', u'2016-12-02 17:03:18', 'il0r73dyj4gjrahus70gl21t6sw24pdl')
[ 2016-12-02 16:03:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl'  AND `django_session`.`expire_date` > '2016-12-02 16:03:19' ); args=('il0r73dyj4gjrahus70gl21t6sw24pdl', u'2016-12-02 16:03:19')
[ 2016-12-02 16:03:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'u0010' ; args=('u0010',)
[ 2016-12-02 16:03:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'u0010' ; args=('u0010',)
[ 2016-12-02 16:03:28 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'u0010', `password` = 'e10adc3949ba59abbe56e057f20f883e', `email` = 'sdfs@11.com', `vaild` = 1, `isadmin` = 0, `logincount` = 1, `lastlogin` = '2016-12-02 16:03:16' WHERE `admin`.`id` = 503 ; args=(u'u0010', u'e10adc3949ba59abbe56e057f20f883e', u'sdfs@11.com', 1, 0, 1, u'2016-12-02 16:03:16', 503)
[ 2016-12-02 16:03:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'u0010' ; args=('u0010',)
[ 2016-12-02 16:03:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl'  AND `django_session`.`expire_date` > '2016-12-02 16:03:28' ); args=('il0r73dyj4gjrahus70gl21t6sw24pdl', u'2016-12-02 16:03:28')
[ 2016-12-02 16:03:28 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'Mzg4NTExZDdjMzcyNzYyNjY2MmM0NjdhYzZkMmExN2I4YTUxN2U4Mzp7InVzZXJuYW1lIjoidTAwMTAiLCJpc2FkbWluIjowLCJfc2Vzc2lvbl9leHBpcnkiOjM2MDB9', `expire_date` = '2016-12-02 17:03:28' WHERE `django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl' ; args=(u'Mzg4NTExZDdjMzcyNzYyNjY2MmM0NjdhYzZkMmExN2I4YTUxN2U4Mzp7InVzZXJuYW1lIjoidTAwMTAiLCJpc2FkbWluIjowLCJfc2Vzc2lvbl9leHBpcnkiOjM2MDB9', u'2016-12-02 17:03:28', 'il0r73dyj4gjrahus70gl21t6sw24pdl')
[ 2016-12-02 16:03:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl'  AND `django_session`.`expire_date` > '2016-12-02 16:03:28' ); args=('il0r73dyj4gjrahus70gl21t6sw24pdl', u'2016-12-02 16:03:28')
[ 2016-12-02 16:03:30 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl'  AND `django_session`.`expire_date` > '2016-12-02 16:03:30' ); args=('il0r73dyj4gjrahus70gl21t6sw24pdl', u'2016-12-02 16:03:30')
[ 2016-12-02 16:03:30 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'u0010' ; args=(u'u0010',)
[ 2016-12-02 16:03:35 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl'  AND `django_session`.`expire_date` > '2016-12-02 16:03:35' ); args=('il0r73dyj4gjrahus70gl21t6sw24pdl', u'2016-12-02 16:03:35')
[ 2016-12-02 16:03:35 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'u0010' ; args=(u'u0010',)
[ 2016-12-02 16:03:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl'  AND `django_session`.`expire_date` > '2016-12-02 16:03:37' ); args=('il0r73dyj4gjrahus70gl21t6sw24pdl', u'2016-12-02 16:03:37')
[ 2016-12-02 16:03:41 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl'  AND `django_session`.`expire_date` > '2016-12-02 16:03:41' ); args=('il0r73dyj4gjrahus70gl21t6sw24pdl', u'2016-12-02 16:03:41')
[ 2016-12-02 16:03:41 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', `expire_date` = '2016-12-02 17:03:41' WHERE `django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl' ; args=(u'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', u'2016-12-02 17:03:41', 'il0r73dyj4gjrahus70gl21t6sw24pdl')
[ 2016-12-02 16:03:41 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'il0r73dyj4gjrahus70gl21t6sw24pdl'  AND `django_session`.`expire_date` > '2016-12-02 16:03:41' ); args=('il0r73dyj4gjrahus70gl21t6sw24pdl', u'2016-12-02 16:03:41')
[ 2016-12-02 16:04:18 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 16:07:20 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 16:08:55 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 16:11:10 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 16:11:29 ] prodution   : ERROR    连接lldap://10.200.201.23服务器连接失败
[ 2016-12-02 16:11:32 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 16:11:40 ] prodution   : ERROR    数据库172.19.20.116连接失败
[ 2016-12-02 16:11:50 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 16:14:39 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 16:16:48 ] pydevd_resolver.py[line:196] _getPyDictionary WARNING E:\Program Files\JetBrains\PyCharm 2016.1.2\helpers\pydev\_pydevd_bundle\pydevd_resolver.py:196: DeprecationWarning: BaseException.message has been deprecated as of Python 2.6
  attr = getattr(var, n)

[ 2016-12-02 16:16:59 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 16:21:08 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 16:21:10 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 16:21:29 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 16:22:21 ] pydevd_resolver.py[line:196] _getPyDictionary WARNING E:\Program Files\JetBrains\PyCharm 2016.1.2\helpers\pydev\_pydevd_bundle\pydevd_resolver.py:196: DeprecationWarning: BaseException.message has been deprecated as of Python 2.6
  attr = getattr(var, n)

[ 2016-12-02 16:26:46 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 16:26:49 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 16:26:53 ] prodution   : ERROR    连接lldap://10.200.201.23服务器连接失败
[ 2016-12-02 16:26:55 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 16:26:55 ] prodution   : ERROR    数据库172.19.20.116连接失败
[ 2016-12-02 16:28:02 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 16:28:05 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 16:28:07 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 16:29:51 ] pydevd_resolver.py[line:196] _getPyDictionary WARNING E:\Program Files\JetBrains\PyCharm 2016.1.2\helpers\pydev\_pydevd_bundle\pydevd_resolver.py:196: DeprecationWarning: BaseException.message has been deprecated as of Python 2.6
  attr = getattr(var, n)

[ 2016-12-02 16:57:56 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 16:58:02 ] prodution   : ERROR    连接lldap://10.200.201.23服务器连接失败
[ 2016-12-02 16:58:04 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 16:58:04 ] prodution   : ERROR    数据库172.19.20.116连接失败
[ 2016-12-02 16:58:09 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 16:58:52 ] prodution   : ERROR    连接ldap://10.200.201.23服务器连接失败
[ 2016-12-02 16:58:55 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 16:58:55 ] prodution   : ERROR    数据库172.19.20.116连接失败
[ 2016-12-02 16:59:01 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 17:00:50 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 17:01:36 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 17:01:52 ] pydevd_resolver.py[line:196] _getPyDictionary WARNING E:\Program Files\JetBrains\PyCharm 2016.1.2\helpers\pydev\_pydevd_bundle\pydevd_resolver.py:196: DeprecationWarning: BaseException.message has been deprecated as of Python 2.6
  attr = getattr(var, n)

[ 2016-12-02 17:02:46 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 17:13:21 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-02 17:13:21 ] prodution   : ERROR    数据库172.19.20.116连接失败
[ 2016-12-02 17:14:34 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 17:14:34 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 17:14:34 ] util.py[line:79] execute DEBUG (0.001) UPDATE `admin` SET `username` = 'chenyh', `password` = 'e10adc3949ba59abbe56e057f20f883e', `email` = 'fdgffdg@qq.com', `vaild` = 1, `isadmin` = 1, `logincount` = 63, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'e10adc3949ba59abbe56e057f20f883e', u'fdgffdg@qq.com', 1, 1, 63, u'2016-11-25 20:26:56', 8)
[ 2016-12-02 17:14:34 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 17:14:34 ] util.py[line:79] execute DEBUG (0.001) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = '173d828hihs0dg6vbb5rtodot4w6ze86'  LIMIT 1; args=(u'173d828hihs0dg6vbb5rtodot4w6ze86',)
[ 2016-12-02 17:14:34 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-02 18:14:34' WHERE `django_session`.`session_key` = '173d828hihs0dg6vbb5rtodot4w6ze86' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-02 18:14:34', u'173d828hihs0dg6vbb5rtodot4w6ze86')
[ 2016-12-02 17:14:34 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('173d828hihs0dg6vbb5rtodot4w6ze86', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-02 18:14:34'); args=(u'173d828hihs0dg6vbb5rtodot4w6ze86', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-02 18:14:34')
[ 2016-12-02 17:14:34 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '173d828hihs0dg6vbb5rtodot4w6ze86'  AND `django_session`.`expire_date` > '2016-12-02 17:14:34' ); args=('173d828hihs0dg6vbb5rtodot4w6ze86', u'2016-12-02 17:14:34')
[ 2016-12-02 17:14:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '173d828hihs0dg6vbb5rtodot4w6ze86'  AND `django_session`.`expire_date` > '2016-12-02 17:14:38' ); args=('173d828hihs0dg6vbb5rtodot4w6ze86', u'2016-12-02 17:14:38')
[ 2016-12-02 17:14:38 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', `expire_date` = '2016-12-02 18:14:38' WHERE `django_session`.`session_key` = '173d828hihs0dg6vbb5rtodot4w6ze86' ; args=(u'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', u'2016-12-02 18:14:38', '173d828hihs0dg6vbb5rtodot4w6ze86')
[ 2016-12-02 17:14:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '173d828hihs0dg6vbb5rtodot4w6ze86'  AND `django_session`.`expire_date` > '2016-12-02 17:14:38' ); args=('173d828hihs0dg6vbb5rtodot4w6ze86', u'2016-12-02 17:14:38')
[ 2016-12-02 17:14:49 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'u0010' ; args=('u0010',)
[ 2016-12-02 17:14:49 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'u0010' ; args=('u0010',)
[ 2016-12-02 17:14:49 ] util.py[line:79] execute DEBUG (0.001) UPDATE `admin` SET `username` = 'u0010', `password` = 'e10adc3949ba59abbe56e057f20f883e', `email` = 'sdfs@11.com', `vaild` = 1, `isadmin` = 0, `logincount` = 2, `lastlogin` = '2016-12-02 16:03:16' WHERE `admin`.`id` = 503 ; args=(u'u0010', u'e10adc3949ba59abbe56e057f20f883e', u'sdfs@11.com', 1, 0, 2, u'2016-12-02 16:03:16', 503)
[ 2016-12-02 17:14:49 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'u0010' ; args=('u0010',)
[ 2016-12-02 17:14:49 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '173d828hihs0dg6vbb5rtodot4w6ze86'  AND `django_session`.`expire_date` > '2016-12-02 17:14:49' ); args=('173d828hihs0dg6vbb5rtodot4w6ze86', u'2016-12-02 17:14:49')
[ 2016-12-02 17:14:49 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'Mzg4NTExZDdjMzcyNzYyNjY2MmM0NjdhYzZkMmExN2I4YTUxN2U4Mzp7InVzZXJuYW1lIjoidTAwMTAiLCJpc2FkbWluIjowLCJfc2Vzc2lvbl9leHBpcnkiOjM2MDB9', `expire_date` = '2016-12-02 18:14:49' WHERE `django_session`.`session_key` = '173d828hihs0dg6vbb5rtodot4w6ze86' ; args=(u'Mzg4NTExZDdjMzcyNzYyNjY2MmM0NjdhYzZkMmExN2I4YTUxN2U4Mzp7InVzZXJuYW1lIjoidTAwMTAiLCJpc2FkbWluIjowLCJfc2Vzc2lvbl9leHBpcnkiOjM2MDB9', u'2016-12-02 18:14:49', '173d828hihs0dg6vbb5rtodot4w6ze86')
[ 2016-12-02 17:14:49 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '173d828hihs0dg6vbb5rtodot4w6ze86'  AND `django_session`.`expire_date` > '2016-12-02 17:14:49' ); args=('173d828hihs0dg6vbb5rtodot4w6ze86', u'2016-12-02 17:14:49')
[ 2016-12-02 17:14:52 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '173d828hihs0dg6vbb5rtodot4w6ze86'  AND `django_session`.`expire_date` > '2016-12-02 17:14:52' ); args=('173d828hihs0dg6vbb5rtodot4w6ze86', u'2016-12-02 17:14:52')
[ 2016-12-02 17:14:52 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', `expire_date` = '2016-12-02 18:14:52' WHERE `django_session`.`session_key` = '173d828hihs0dg6vbb5rtodot4w6ze86' ; args=(u'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', u'2016-12-02 18:14:52', '173d828hihs0dg6vbb5rtodot4w6ze86')
[ 2016-12-02 17:14:53 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '173d828hihs0dg6vbb5rtodot4w6ze86'  AND `django_session`.`expire_date` > '2016-12-02 17:14:53' ); args=('173d828hihs0dg6vbb5rtodot4w6ze86', u'2016-12-02 17:14:53')
[ 2016-12-02 19:37:57 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 19:37:57 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 19:37:57 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 19:37:57 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 19:37:57 ] util.py[line:79] execute DEBUG (0.001) UPDATE `admin` SET `username` = 'chenyh', `password` = 'e10adc3949ba59abbe56e057f20f883e', `email` = 'fdgffdg@qq.com', `vaild` = 1, `isadmin` = 1, `logincount` = 64, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'e10adc3949ba59abbe56e057f20f883e', u'fdgffdg@qq.com', 1, 1, 64, u'2016-11-25 20:26:56', 8)
[ 2016-12-02 19:37:57 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = 'e10adc3949ba59abbe56e057f20f883e', `email` = 'fdgffdg@qq.com', `vaild` = 1, `isadmin` = 1, `logincount` = 64, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'e10adc3949ba59abbe56e057f20f883e', u'fdgffdg@qq.com', 1, 1, 64, u'2016-11-25 20:26:56', 8)
[ 2016-12-02 19:37:57 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 19:37:57 ] util.py[line:79] execute DEBUG (0.000) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = 'v2q1a4zj6ct105tmjoiujjbjlgjfogzx'  LIMIT 1; args=(u'v2q1a4zj6ct105tmjoiujjbjlgjfogzx',)
[ 2016-12-02 19:37:57 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-02 20:37:57' WHERE `django_session`.`session_key` = 'v2q1a4zj6ct105tmjoiujjbjlgjfogzx' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-02 20:37:57', u'v2q1a4zj6ct105tmjoiujjbjlgjfogzx')
[ 2016-12-02 19:37:57 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('v2q1a4zj6ct105tmjoiujjbjlgjfogzx', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-02 20:37:57'); args=(u'v2q1a4zj6ct105tmjoiujjbjlgjfogzx', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-02 20:37:57')
[ 2016-12-02 19:37:57 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 19:37:57 ] util.py[line:79] execute DEBUG (0.000) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = 'ly48p2omzbbq66p0w2oy9czs5ic2g3bu'  LIMIT 1; args=(u'ly48p2omzbbq66p0w2oy9czs5ic2g3bu',)
[ 2016-12-02 19:37:57 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-02 20:37:57' WHERE `django_session`.`session_key` = 'ly48p2omzbbq66p0w2oy9czs5ic2g3bu' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-02 20:37:57', u'ly48p2omzbbq66p0w2oy9czs5ic2g3bu')
[ 2016-12-02 19:37:57 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('ly48p2omzbbq66p0w2oy9czs5ic2g3bu', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-02 20:37:57'); args=(u'ly48p2omzbbq66p0w2oy9czs5ic2g3bu', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-02 20:37:57')
[ 2016-12-02 19:37:57 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'ly48p2omzbbq66p0w2oy9czs5ic2g3bu'  AND `django_session`.`expire_date` > '2016-12-02 19:37:57' ); args=('ly48p2omzbbq66p0w2oy9czs5ic2g3bu', u'2016-12-02 19:37:57')
[ 2016-12-02 19:38:00 ] util.py[line:79] execute DEBUG (0.002) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'ly48p2omzbbq66p0w2oy9czs5ic2g3bu'  AND `django_session`.`expire_date` > '2016-12-02 19:38:00' ); args=('ly48p2omzbbq66p0w2oy9czs5ic2g3bu', u'2016-12-02 19:38:00')
[ 2016-12-02 19:38:00 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-02 19:38:05 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'ly48p2omzbbq66p0w2oy9czs5ic2g3bu'  AND `django_session`.`expire_date` > '2016-12-02 19:38:05' ); args=('ly48p2omzbbq66p0w2oy9czs5ic2g3bu', u'2016-12-02 19:38:05')
[ 2016-12-02 19:39:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'ly48p2omzbbq66p0w2oy9czs5ic2g3bu'  AND `django_session`.`expire_date` > '2016-12-02 19:39:32' ); args=('ly48p2omzbbq66p0w2oy9czs5ic2g3bu', u'2016-12-02 19:39:32')
[ 2016-12-02 19:39:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'ly48p2omzbbq66p0w2oy9czs5ic2g3bu'  AND `django_session`.`expire_date` > '2016-12-02 19:39:32' ); args=('ly48p2omzbbq66p0w2oy9czs5ic2g3bu', u'2016-12-02 19:39:32')
[ 2016-12-02 19:39:34 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'ly48p2omzbbq66p0w2oy9czs5ic2g3bu'  AND `django_session`.`expire_date` > '2016-12-02 19:39:34' ); args=('ly48p2omzbbq66p0w2oy9czs5ic2g3bu', u'2016-12-02 19:39:34')
[ 2016-12-02 19:39:34 ] util.py[line:79] execute DEBUG (0.002) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'ly48p2omzbbq66p0w2oy9czs5ic2g3bu'  AND `django_session`.`expire_date` > '2016-12-02 19:39:34' ); args=('ly48p2omzbbq66p0w2oy9czs5ic2g3bu', u'2016-12-02 19:39:34')
[ 2016-12-02 19:39:35 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'ly48p2omzbbq66p0w2oy9czs5ic2g3bu'  AND `django_session`.`expire_date` > '2016-12-02 19:39:35' ); args=('ly48p2omzbbq66p0w2oy9czs5ic2g3bu', u'2016-12-02 19:39:35')
[ 2016-12-02 19:39:35 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'ly48p2omzbbq66p0w2oy9czs5ic2g3bu'  AND `django_session`.`expire_date` > '2016-12-02 19:39:35' ); args=('ly48p2omzbbq66p0w2oy9czs5ic2g3bu', u'2016-12-02 19:39:35')
[ 2016-12-02 19:39:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'ly48p2omzbbq66p0w2oy9czs5ic2g3bu'  AND `django_session`.`expire_date` > '2016-12-02 19:39:38' ); args=('ly48p2omzbbq66p0w2oy9czs5ic2g3bu', u'2016-12-02 19:39:38')
[ 2016-12-02 19:39:40 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'ly48p2omzbbq66p0w2oy9czs5ic2g3bu'  AND `django_session`.`expire_date` > '2016-12-02 19:39:40' ); args=('ly48p2omzbbq66p0w2oy9czs5ic2g3bu', u'2016-12-02 19:39:40')
[ 2016-12-02 19:39:40 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'ly48p2omzbbq66p0w2oy9czs5ic2g3bu'  AND `django_session`.`expire_date` > '2016-12-02 19:39:40' ); args=('ly48p2omzbbq66p0w2oy9czs5ic2g3bu', u'2016-12-02 19:39:40')
[ 2016-12-02 19:39:42 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'ly48p2omzbbq66p0w2oy9czs5ic2g3bu'  AND `django_session`.`expire_date` > '2016-12-02 19:39:42' ); args=('ly48p2omzbbq66p0w2oy9czs5ic2g3bu', u'2016-12-02 19:39:42')
[ 2016-12-02 19:39:45 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'ly48p2omzbbq66p0w2oy9czs5ic2g3bu'  AND `django_session`.`expire_date` > '2016-12-02 19:39:45' ); args=('ly48p2omzbbq66p0w2oy9czs5ic2g3bu', u'2016-12-02 19:39:45')
[ 2016-12-02 19:39:46 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'ly48p2omzbbq66p0w2oy9czs5ic2g3bu'  AND `django_session`.`expire_date` > '2016-12-02 19:39:46' ); args=('ly48p2omzbbq66p0w2oy9czs5ic2g3bu', u'2016-12-02 19:39:46')
[ 2016-12-02 19:39:46 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'ly48p2omzbbq66p0w2oy9czs5ic2g3bu'  AND `django_session`.`expire_date` > '2016-12-02 19:39:46' ); args=('ly48p2omzbbq66p0w2oy9czs5ic2g3bu', u'2016-12-02 19:39:46')
[ 2016-12-02 19:39:47 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'ly48p2omzbbq66p0w2oy9czs5ic2g3bu'  AND `django_session`.`expire_date` > '2016-12-02 19:39:47' ); args=('ly48p2omzbbq66p0w2oy9czs5ic2g3bu', u'2016-12-02 19:39:47')
[ 2016-12-02 19:39:47 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'ly48p2omzbbq66p0w2oy9czs5ic2g3bu'  AND `django_session`.`expire_date` > '2016-12-02 19:39:47' ); args=('ly48p2omzbbq66p0w2oy9czs5ic2g3bu', u'2016-12-02 19:39:47')
[ 2016-12-02 19:40:09 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'ly48p2omzbbq66p0w2oy9czs5ic2g3bu'  AND `django_session`.`expire_date` > '2016-12-02 19:40:09' ); args=('ly48p2omzbbq66p0w2oy9czs5ic2g3bu', u'2016-12-02 19:40:09')
[ 2016-12-02 19:40:09 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-02 19:40:09 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-02 19:40:14 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'ly48p2omzbbq66p0w2oy9czs5ic2g3bu'  AND `django_session`.`expire_date` > '2016-12-02 19:40:14' ); args=('ly48p2omzbbq66p0w2oy9czs5ic2g3bu', u'2016-12-02 19:40:14')
[ 2016-12-02 19:40:14 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-02 19:40:14 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 50; args=()
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.001) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.001) SHOW TABLES; args=None
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.029) CREATE TABLE `user_per` (
    `id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `Per_user` varchar(50) NOT NULL,
    `Per_code` smallint UNSIGNED NOT NULL
)
;; args=None
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.014) CREATE TABLE `per_code` (
    `id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `Per_code_id` integer NOT NULL,
    `Per_name` varchar(50) NOT NULL
)
;; args=None
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.026) ALTER TABLE `per_code` ADD CONSTRAINT `Per_code_id_refs_id_811d57d6` FOREIGN KEY (`Per_code_id`) REFERENCES `user_per` (`id`);; args=None
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.007) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'logentry'  AND `django_content_type`.`app_label` = 'admin' ); args=('logentry', u'admin')
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.005) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (1) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(1,)
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'admin'  ORDER BY `django_content_type`.`name` ASC; args=(u'admin',)
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'permission'  AND `django_content_type`.`app_label` = 'auth' ); args=('permission', u'auth')
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'group'  AND `django_content_type`.`app_label` = 'auth' ); args=('group', u'auth')
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user'  AND `django_content_type`.`app_label` = 'auth' ); args=('user', u'auth')
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (2, 3, 4) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(2, 3, 4)
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'auth'  ORDER BY `django_content_type`.`name` ASC; args=(u'auth',)
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'contenttype'  AND `django_content_type`.`app_label` = 'contenttypes' ); args=('contenttype', u'contenttypes')
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (5) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(5,)
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'contenttypes'  ORDER BY `django_content_type`.`name` ASC; args=(u'contenttypes',)
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'session'  AND `django_content_type`.`app_label` = 'sessions' ); args=('session', u'sessions')
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (6) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(6,)
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'sessions'  ORDER BY `django_content_type`.`name` ASC; args=(u'sessions',)
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'admin'  AND `django_content_type`.`app_label` = 'user' ); args=('admin', u'user')
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_per'  AND `django_content_type`.`app_label` = 'user' ); args=('user_per', u'user')
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `django_content_type` (`name`, `app_label`, `model`) VALUES ('用户权限表', 'user', 'user_per'); args=[u'\u7528\u6237\u6743\u9650\u8868', u'user', 'user_per']
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'per_code'  AND `django_content_type`.`app_label` = 'user' ); args=('per_code', u'user')
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `django_content_type` (`name`, `app_label`, `model`) VALUES ('权限代码表', 'user', 'per_code'); args=[u'\u6743\u9650\u4ee3\u7801\u8868', u'user', 'per_code']
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (8, 12, 13) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(8, 12, 13)
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `auth_permission` (`name`, `content_type_id`, `codename`) VALUES ('Can add 用户权限表', 12, 'add_user_per'), ('Can change 用户权限表', 12, 'change_user_per'), ('Can delete 用户权限表', 12, 'delete_user_per'), ('Can add 权限代码表', 13, 'add_per_code'), ('Can change 权限代码表', 13, 'change_per_code'), ('Can delete 权限代码表', 13, 'delete_per_code'); args=(u'Can add \u7528\u6237\u6743\u9650\u8868', 12, u'add_user_per', u'Can change \u7528\u6237\u6743\u9650\u8868', 12, u'change_user_per', u'Can delete \u7528\u6237\u6743\u9650\u8868', 12, u'delete_user_per', u'Can add \u6743\u9650\u4ee3\u7801\u8868', 13, u'add_per_code', u'Can change \u6743\u9650\u4ee3\u7801\u8868', 13, u'change_per_code', u'Can delete \u6743\u9650\u4ee3\u7801\u8868', 13, u'delete_per_code')
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'user'  ORDER BY `django_content_type`.`name` ASC; args=(u'user',)
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'migrationhistory'  AND `django_content_type`.`app_label` = 'south' ); args=('migrationhistory', u'south')
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (9) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(9,)
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'south'  ORDER BY `django_content_type`.`name` ASC; args=(u'south',)
[ 2016-12-02 21:00:19 ] util.py[line:79] execute DEBUG (0.011) CREATE INDEX `per_code_6b00ca7a` ON `per_code` (`Per_code_id`);; args=None
[ 2016-12-02 21:00:20 ] util.py[line:79] execute DEBUG (0.001) SET foreign_key_checks=0; args=None
[ 2016-12-02 21:00:20 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.001) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.000) SHOW TABLES; args=None
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.027) CREATE TABLE `user_per` (
    `id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `Per_user` varchar(50) NOT NULL,
    `Per_code` smallint UNSIGNED NOT NULL
)
;; args=None
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.003) CREATE TABLE `per_code` (
    `id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `Per_code` smallint UNSIGNED NOT NULL,
    `Per_name` varchar(50) NOT NULL
)
;; args=None
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'logentry'  AND `django_content_type`.`app_label` = 'admin' ); args=('logentry', u'admin')
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (1) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(1,)
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'admin'  ORDER BY `django_content_type`.`name` ASC; args=(u'admin',)
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'permission'  AND `django_content_type`.`app_label` = 'auth' ); args=('permission', u'auth')
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'group'  AND `django_content_type`.`app_label` = 'auth' ); args=('group', u'auth')
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user'  AND `django_content_type`.`app_label` = 'auth' ); args=('user', u'auth')
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (2, 3, 4) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(2, 3, 4)
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'auth'  ORDER BY `django_content_type`.`name` ASC; args=(u'auth',)
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'contenttype'  AND `django_content_type`.`app_label` = 'contenttypes' ); args=('contenttype', u'contenttypes')
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (5) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(5,)
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'contenttypes'  ORDER BY `django_content_type`.`name` ASC; args=(u'contenttypes',)
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'session'  AND `django_content_type`.`app_label` = 'sessions' ); args=('session', u'sessions')
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (6) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(6,)
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'sessions'  ORDER BY `django_content_type`.`name` ASC; args=(u'sessions',)
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'admin'  AND `django_content_type`.`app_label` = 'user' ); args=('admin', u'user')
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_per'  AND `django_content_type`.`app_label` = 'user' ); args=('user_per', u'user')
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'per_code'  AND `django_content_type`.`app_label` = 'user' ); args=('per_code', u'user')
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (8, 12, 13) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(8, 12, 13)
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'user'  ORDER BY `django_content_type`.`name` ASC; args=(u'user',)
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'migrationhistory'  AND `django_content_type`.`app_label` = 'south' ); args=('migrationhistory', u'south')
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (9) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(9,)
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'south'  ORDER BY `django_content_type`.`name` ASC; args=(u'south',)
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.001) SET foreign_key_checks=0; args=None
[ 2016-12-02 21:06:26 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.000) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.000) SHOW TABLES; args=None
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.016) CREATE TABLE `user_per` (
    `id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `Per_user` varchar(50) NOT NULL,
    `Per_code` varchar(5) NOT NULL
)
;; args=None
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.003) CREATE TABLE `per_code` (
    `id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `Per_code` varchar(5) NOT NULL,
    `Per_name` varchar(50) NOT NULL
)
;; args=None
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'logentry'  AND `django_content_type`.`app_label` = 'admin' ); args=('logentry', u'admin')
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (1) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(1,)
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'admin'  ORDER BY `django_content_type`.`name` ASC; args=(u'admin',)
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'permission'  AND `django_content_type`.`app_label` = 'auth' ); args=('permission', u'auth')
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'group'  AND `django_content_type`.`app_label` = 'auth' ); args=('group', u'auth')
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user'  AND `django_content_type`.`app_label` = 'auth' ); args=('user', u'auth')
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (2, 3, 4) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(2, 3, 4)
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'auth'  ORDER BY `django_content_type`.`name` ASC; args=(u'auth',)
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'contenttype'  AND `django_content_type`.`app_label` = 'contenttypes' ); args=('contenttype', u'contenttypes')
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (5) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(5,)
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'contenttypes'  ORDER BY `django_content_type`.`name` ASC; args=(u'contenttypes',)
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'session'  AND `django_content_type`.`app_label` = 'sessions' ); args=('session', u'sessions')
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (6) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(6,)
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'sessions'  ORDER BY `django_content_type`.`name` ASC; args=(u'sessions',)
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'admin'  AND `django_content_type`.`app_label` = 'user' ); args=('admin', u'user')
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_per'  AND `django_content_type`.`app_label` = 'user' ); args=('user_per', u'user')
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'per_code'  AND `django_content_type`.`app_label` = 'user' ); args=('per_code', u'user')
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (8, 12, 13) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(8, 12, 13)
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'user'  ORDER BY `django_content_type`.`name` ASC; args=(u'user',)
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'migrationhistory'  AND `django_content_type`.`app_label` = 'south' ); args=('migrationhistory', u'south')
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (9) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(9,)
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'south'  ORDER BY `django_content_type`.`name` ASC; args=(u'south',)
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-02 21:09:59 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:52: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  `profile` option.""",

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:118: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:128: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The IPython profile to use."""

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:142: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Whether to overwrite existing config files when copying""")

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:162: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Whether to create profile dir if it doesn't exist""")

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:173: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:178: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  usual traceback""")

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magic.py:307: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  "Automatically call line magics without requiring explicit % prefix")

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:132: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  multi_line_specials = CBool(True, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:362: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:367: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:392: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:395: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:414: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:415: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(False, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:427: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(250, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:439: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(300, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:453: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(600, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:471: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(700, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:495: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(900, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:510: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(1000, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:513: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="RegExp to identify potential function names.")

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:515: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="RegExp to exclude strings with this start from autocalling.")

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\alias.py:195: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_aliases = List(default_aliases(), config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\alias.py:196: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  user_aliases = List(default_value=[], config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:61: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  plain_text_only = Bool(False, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:313: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:319: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  singleton_printers = Dict(config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:323: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  type_printers = Dict(config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:327: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  deferred_printers = Dict(config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:594: DeprecationWarning: metadata {'config': False} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=False)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:600: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:607: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  pprint = Bool(True, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:610: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  verbose = Bool(False, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:613: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  max_width = Integer(79, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:616: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  newline = Unicode('\n', config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:621: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  float_precision = CUnicode('', config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:143: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:152: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:475: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Should the history database include output? (default: no)"

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:478: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Write to database every x commands (higher values save disk access & power).\n"

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:259: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  color_scheme = Unicode('Linux', config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:275: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Input prompt.  '\\#' will be transformed to the prompt number")

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:277: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Continuation prompt.")

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:279: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Output prompt. '\\#' will be transformed to the prompt number")

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:284: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:179: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:190: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:197: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:202: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:206: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The part of the banner to be printed before the profile"""

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:209: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The part of the banner to be printed after the profile"""

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:220: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:227: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:231: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Set the color scheme (NoColor, Linux, or LightBG)."

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:242: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  debug = CBool(False, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:256: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:259: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Don't call post-execute functions that have failed in the past."

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:273: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  ipython_dir= Unicode('', config=True) # Set to get_ipython_dir() in __init__

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:289: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:294: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:300: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:303: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:307: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:310: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Save multi-line entries as one entry in readline history"

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:314: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  will be displayed as regular output instead."""

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:320: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.in_template")

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:322: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.in2_template")

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:324: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.out_template")

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:326: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.justify")

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:349: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Show rewritten input, e.g. for autocall."

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:352: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  quiet = CBool(False, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:354: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  history_length = Integer(10000, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:360: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:365: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  readline_use = CBool(True, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:366: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  readline_remove_delims = Unicode('-/~', config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:383: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  ], config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:396: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  run interactively (displaying output from expressions).""")

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:400: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_in = SeparateUnicode('\n', config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:401: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_out = SeparateUnicode('', config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:402: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_out2 = SeparateUnicode('', config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:403: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  wildcards_case_sensitive = CBool(True, config=True)

[ 2016-12-02 21:17:39 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:405: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_value='Context', config=True)

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:290: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="auto editing of files with syntax errors.")

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:295: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  you can force a direct exit without any confirmation.""",

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:305: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Set the editor used by IPython (default to $EDITOR/vi/notepad)."

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:308: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="The shell program to be used for paging.")

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:320: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default.""",

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:323: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Enable auto setting the terminal title."

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:276: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:556: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:568: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:578: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:89: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """,

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:116: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:139: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="A list of dotted module names of IPython extensions to load."

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:142: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="dotted module name of an IPython extension to load."

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:148: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Reraise exceptions encountered loading IPython extensions?",

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:152: DeprecationWarning: metadata {'config': False} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_extensions = List(Unicode(), [u'storemagic'], config=False)

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:156: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  be hidden from tools like %who?"""

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""List of files to run at IPython startup."""

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:164: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  variable at IPython startup."""

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:167: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""A file to be run""")

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:170: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""lines of code to run at IPython startup."""

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:173: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Execute the given command string."

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:176: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Run the module as a script."

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:179: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Enable GUI event loop integration with any of {0}.".format(gui_keys)

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:184: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  the default matplotlib backend."""

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:190: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:197: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\extensions\storemagic.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:245: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Start IPython quickly by skipping the loading of config files."""

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:252: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Whether to display a banner upon starting IPython."

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:260: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  file or command."""

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:186: DeprecationWarning: TerminalIPythonApp._classes_default is deprecated: use @default decorator instead.
  def _classes_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:99: DeprecationWarning: BaseIPythonApplication._config_file_name_default is deprecated: use @default decorator instead.
  def _config_file_name_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:111: DeprecationWarning: BaseIPythonApplication._config_file_paths_default is deprecated: use @default decorator instead.
  def _config_file_paths_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:165: DeprecationWarning: BaseIPythonApplication._config_files_default is deprecated: use @default decorator instead.
  def _config_files_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:144: DeprecationWarning: BaseIPythonApplication._ipython_dir_default is deprecated: use @default decorator instead.
  def _ipython_dir_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:151: DeprecationWarning: BaseIPythonApplication._profile_dir_default is deprecated: use @default decorator instead.
  def _profile_dir_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:186: DeprecationWarning: TerminalIPythonApp._classes_default is deprecated: use @default decorator instead.
  def _classes_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:151: DeprecationWarning: BaseIPythonApplication._profile_dir_default is deprecated: use @default decorator instead.
  def _profile_dir_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:144: DeprecationWarning: BaseIPythonApplication._ipython_dir_default is deprecated: use @default decorator instead.
  def _ipython_dir_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:57: DeprecationWarning: ProfileDir._location_changed is deprecated: use @observe and @unobserve instead.
  def _location_changed(self, name, old, new):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:126: DeprecationWarning: ProfileDir._security_dir_changed is deprecated: use @observe and @unobserve instead.
  def _security_dir_changed(self, name, old, new):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:71: DeprecationWarning: ProfileDir._log_dir_changed is deprecated: use @observe and @unobserve instead.
  def _log_dir_changed(self, name, old, new):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:111: DeprecationWarning: ProfileDir._startup_dir_changed is deprecated: use @observe and @unobserve instead.
  def _startup_dir_changed(self, name, old, new):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:132: DeprecationWarning: ProfileDir._pid_dir_changed is deprecated: use @observe and @unobserve instead.
  def _pid_dir_changed(self, name, old, new):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:138: DeprecationWarning: ProfileDir._static_dir_changed is deprecated: use @observe and @unobserve instead.
  def _static_dir_changed(self, name, old, new):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:111: DeprecationWarning: BaseIPythonApplication._config_file_paths_default is deprecated: use @default decorator instead.
  def _config_file_paths_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:165: DeprecationWarning: BaseIPythonApplication._config_files_default is deprecated: use @default decorator instead.
  def _config_files_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:99: DeprecationWarning: BaseIPythonApplication._config_file_name_default is deprecated: use @default decorator instead.
  def _config_file_name_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:268: DeprecationWarning: InteractiveShell._exiter_default is deprecated: use @default decorator instead.
  def _exiter_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:525: DeprecationWarning: TerminalInteractiveShell._ipython_dir_changed is deprecated: use @observe and @unobserve instead.
  def _ipython_dir_changed(self, name, new):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:459: DeprecationWarning: HistoryManager._dir_hist_default is deprecated: use @default decorator instead.
  def _dir_hist_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:165: DeprecationWarning: HistoryManager._db_changed is deprecated: use @observe and @unobserve instead.
  def _db_changed(self, name, old, new):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:459: DeprecationWarning: HistoryManager._dir_hist_default is deprecated: use @default decorator instead.
  def _dir_hist_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:268: DeprecationWarning: InteractiveShell._exiter_default is deprecated: use @default decorator instead.
  def _exiter_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:296: DeprecationWarning: PromptManager._invisible_chars_default is deprecated: use @default decorator instead.
  def _invisible_chars_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:272: DeprecationWarning: PromptManager._lazy_evaluate_fields_default is deprecated: use @default decorator instead.
  def _lazy_evaluate_fields_default(self): return lazily_evaluate.copy()

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:272: DeprecationWarning: PromptManager._lazy_evaluate_fields_default is deprecated: use @default decorator instead.
  def _lazy_evaluate_fields_default(self): return lazily_evaluate.copy()

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:296: DeprecationWarning: PromptManager._invisible_chars_default is deprecated: use @default decorator instead.
  def _invisible_chars_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:1180] on_trait_change WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:313: DeprecationWarning: on_trait_change is deprecated: use observe instead
  'in2_template', 'out_template'])

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:81: DeprecationWarning: DisplayFormatter._active_types_default is deprecated: use @default decorator instead.
  def _active_types_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:98: DeprecationWarning: DisplayFormatter._formatters_default is deprecated: use @default decorator instead.
  def _formatters_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:92: DeprecationWarning: DisplayFormatter._ipython_display_formatter_default is deprecated: use @default decorator instead.
  def _ipython_display_formatter_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:84: DeprecationWarning: DisplayFormatter._active_types_changed is deprecated: use @observe and @unobserve instead.
  def _active_types_changed(self, name, old, new):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:98: DeprecationWarning: DisplayFormatter._formatters_default is deprecated: use @default decorator instead.
  def _formatters_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:677: DeprecationWarning: PlainTextFormatter._deferred_printers_default is deprecated: use @default decorator instead.
  def _deferred_printers_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:669: DeprecationWarning: PlainTextFormatter._singleton_printers_default is deprecated: use @default decorator instead.
  def _singleton_printers_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:672: DeprecationWarning: PlainTextFormatter._type_printers_default is deprecated: use @default decorator instead.
  def _type_printers_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:91: DeprecationWarning: ScriptMagics._script_magics_default is deprecated: use @default decorator instead.
  def _script_magics_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:91: DeprecationWarning: ScriptMagics._script_magics_default is deprecated: use @default decorator instead.
  def _script_magics_default(self):

[ 2016-12-02 21:17:40 ] traitlets.py[line:1180] on_trait_change WARNING E:\Python27\lib\site-packages\IPython\core\extensions.py:58: DeprecationWarning: on_trait_change is deprecated: use observe instead
  self._on_ipython_dir_changed, 'ipython_dir'

[ 2016-12-02 21:17:40 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\extensions\storemagic.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:25:54 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:92: DeprecationWarning: DisplayFormatter._ipython_display_formatter_default is deprecated: use @default decorator instead.
  def _ipython_display_formatter_default(self):

[ 2016-12-02 21:25:54 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:669: DeprecationWarning: PlainTextFormatter._singleton_printers_default is deprecated: use @default decorator instead.
  def _singleton_printers_default(self):

[ 2016-12-02 21:25:54 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:672: DeprecationWarning: PlainTextFormatter._type_printers_default is deprecated: use @default decorator instead.
  def _type_printers_default(self):

[ 2016-12-02 21:25:54 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:677: DeprecationWarning: PlainTextFormatter._deferred_printers_default is deprecated: use @default decorator instead.
  def _deferred_printers_default(self):

[ 2016-12-02 21:25:55 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code` FROM `user_per` LIMIT 21; args=()
[ 2016-12-02 21:27:08 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`Per_user` FROM `user_per`; args=()
[ 2016-12-02 21:27:48 ] util.py[line:79] execute DEBUG (0.002) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code` FROM `user_per` WHERE `user_per`.`Per_user` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.000) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.000) SHOW TABLES; args=None
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'logentry'  AND `django_content_type`.`app_label` = 'admin' ); args=('logentry', u'admin')
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (1) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(1,)
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'admin'  ORDER BY `django_content_type`.`name` ASC; args=(u'admin',)
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'permission'  AND `django_content_type`.`app_label` = 'auth' ); args=('permission', u'auth')
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'group'  AND `django_content_type`.`app_label` = 'auth' ); args=('group', u'auth')
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user'  AND `django_content_type`.`app_label` = 'auth' ); args=('user', u'auth')
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (2, 3, 4) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(2, 3, 4)
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'auth'  ORDER BY `django_content_type`.`name` ASC; args=(u'auth',)
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'contenttype'  AND `django_content_type`.`app_label` = 'contenttypes' ); args=('contenttype', u'contenttypes')
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (5) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(5,)
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'contenttypes'  ORDER BY `django_content_type`.`name` ASC; args=(u'contenttypes',)
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'session'  AND `django_content_type`.`app_label` = 'sessions' ); args=('session', u'sessions')
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (6) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(6,)
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'sessions'  ORDER BY `django_content_type`.`name` ASC; args=(u'sessions',)
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'admin'  AND `django_content_type`.`app_label` = 'user' ); args=('admin', u'user')
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_per'  AND `django_content_type`.`app_label` = 'user' ); args=('user_per', u'user')
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'per_code'  AND `django_content_type`.`app_label` = 'user' ); args=('per_code', u'user')
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (8, 12, 13) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(8, 12, 13)
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'user'  ORDER BY `django_content_type`.`name` ASC; args=(u'user',)
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'migrationhistory'  AND `django_content_type`.`app_label` = 'south' ); args=('migrationhistory', u'south')
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (9) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(9,)
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'south'  ORDER BY `django_content_type`.`name` ASC; args=(u'south',)
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-02 21:29:42 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:52: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  `profile` option.""",

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:118: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:128: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The IPython profile to use."""

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:142: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Whether to overwrite existing config files when copying""")

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:162: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Whether to create profile dir if it doesn't exist""")

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:173: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:178: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  usual traceback""")

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magic.py:307: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  "Automatically call line magics without requiring explicit % prefix")

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:132: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  multi_line_specials = CBool(True, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:362: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:367: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:392: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:395: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:414: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:415: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(False, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:427: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(250, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:439: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(300, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:453: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(600, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:471: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(700, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:495: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(900, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:510: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(1000, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:513: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="RegExp to identify potential function names.")

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:515: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="RegExp to exclude strings with this start from autocalling.")

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\alias.py:195: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_aliases = List(default_aliases(), config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\alias.py:196: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  user_aliases = List(default_value=[], config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:61: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  plain_text_only = Bool(False, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:313: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:319: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  singleton_printers = Dict(config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:323: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  type_printers = Dict(config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:327: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  deferred_printers = Dict(config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:594: DeprecationWarning: metadata {'config': False} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=False)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:600: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:607: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  pprint = Bool(True, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:610: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  verbose = Bool(False, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:613: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  max_width = Integer(79, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:616: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  newline = Unicode('\n', config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:621: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  float_precision = CUnicode('', config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:143: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:152: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:475: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Should the history database include output? (default: no)"

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:478: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Write to database every x commands (higher values save disk access & power).\n"

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:259: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  color_scheme = Unicode('Linux', config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:275: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Input prompt.  '\\#' will be transformed to the prompt number")

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:277: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Continuation prompt.")

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:279: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Output prompt. '\\#' will be transformed to the prompt number")

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:284: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:179: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:190: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:197: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:202: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:206: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The part of the banner to be printed before the profile"""

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:209: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The part of the banner to be printed after the profile"""

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:220: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:227: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:231: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Set the color scheme (NoColor, Linux, or LightBG)."

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:242: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  debug = CBool(False, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:256: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:259: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Don't call post-execute functions that have failed in the past."

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:273: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  ipython_dir= Unicode('', config=True) # Set to get_ipython_dir() in __init__

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:289: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:294: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:300: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:303: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:307: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:310: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Save multi-line entries as one entry in readline history"

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:314: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  will be displayed as regular output instead."""

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:320: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.in_template")

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:322: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.in2_template")

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:324: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.out_template")

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:326: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.justify")

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:349: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Show rewritten input, e.g. for autocall."

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:352: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  quiet = CBool(False, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:354: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  history_length = Integer(10000, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:360: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:365: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  readline_use = CBool(True, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:366: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  readline_remove_delims = Unicode('-/~', config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:383: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  ], config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:396: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  run interactively (displaying output from expressions).""")

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:400: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_in = SeparateUnicode('\n', config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:401: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_out = SeparateUnicode('', config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:402: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_out2 = SeparateUnicode('', config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:403: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  wildcards_case_sensitive = CBool(True, config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:405: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_value='Context', config=True)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:290: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="auto editing of files with syntax errors.")

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:295: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  you can force a direct exit without any confirmation.""",

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:305: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Set the editor used by IPython (default to $EDITOR/vi/notepad)."

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:308: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="The shell program to be used for paging.")

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:320: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default.""",

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:323: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Enable auto setting the terminal title."

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:276: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:556: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:568: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:578: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:89: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """,

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:116: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:139: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="A list of dotted module names of IPython extensions to load."

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:142: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="dotted module name of an IPython extension to load."

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:148: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Reraise exceptions encountered loading IPython extensions?",

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:152: DeprecationWarning: metadata {'config': False} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_extensions = List(Unicode(), [u'storemagic'], config=False)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:156: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  be hidden from tools like %who?"""

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""List of files to run at IPython startup."""

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:164: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  variable at IPython startup."""

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:167: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""A file to be run""")

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:170: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""lines of code to run at IPython startup."""

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:173: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Execute the given command string."

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:176: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Run the module as a script."

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:179: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Enable GUI event loop integration with any of {0}.".format(gui_keys)

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:184: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  the default matplotlib backend."""

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:190: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:197: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\extensions\storemagic.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:245: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Start IPython quickly by skipping the loading of config files."""

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:252: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Whether to display a banner upon starting IPython."

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:260: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  file or command."""

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:186: DeprecationWarning: TerminalIPythonApp._classes_default is deprecated: use @default decorator instead.
  def _classes_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:99: DeprecationWarning: BaseIPythonApplication._config_file_name_default is deprecated: use @default decorator instead.
  def _config_file_name_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:111: DeprecationWarning: BaseIPythonApplication._config_file_paths_default is deprecated: use @default decorator instead.
  def _config_file_paths_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:165: DeprecationWarning: BaseIPythonApplication._config_files_default is deprecated: use @default decorator instead.
  def _config_files_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:144: DeprecationWarning: BaseIPythonApplication._ipython_dir_default is deprecated: use @default decorator instead.
  def _ipython_dir_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:151: DeprecationWarning: BaseIPythonApplication._profile_dir_default is deprecated: use @default decorator instead.
  def _profile_dir_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:186: DeprecationWarning: TerminalIPythonApp._classes_default is deprecated: use @default decorator instead.
  def _classes_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:151: DeprecationWarning: BaseIPythonApplication._profile_dir_default is deprecated: use @default decorator instead.
  def _profile_dir_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:144: DeprecationWarning: BaseIPythonApplication._ipython_dir_default is deprecated: use @default decorator instead.
  def _ipython_dir_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:57: DeprecationWarning: ProfileDir._location_changed is deprecated: use @observe and @unobserve instead.
  def _location_changed(self, name, old, new):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:126: DeprecationWarning: ProfileDir._security_dir_changed is deprecated: use @observe and @unobserve instead.
  def _security_dir_changed(self, name, old, new):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:71: DeprecationWarning: ProfileDir._log_dir_changed is deprecated: use @observe and @unobserve instead.
  def _log_dir_changed(self, name, old, new):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:111: DeprecationWarning: ProfileDir._startup_dir_changed is deprecated: use @observe and @unobserve instead.
  def _startup_dir_changed(self, name, old, new):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:132: DeprecationWarning: ProfileDir._pid_dir_changed is deprecated: use @observe and @unobserve instead.
  def _pid_dir_changed(self, name, old, new):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:138: DeprecationWarning: ProfileDir._static_dir_changed is deprecated: use @observe and @unobserve instead.
  def _static_dir_changed(self, name, old, new):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:111: DeprecationWarning: BaseIPythonApplication._config_file_paths_default is deprecated: use @default decorator instead.
  def _config_file_paths_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:165: DeprecationWarning: BaseIPythonApplication._config_files_default is deprecated: use @default decorator instead.
  def _config_files_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:99: DeprecationWarning: BaseIPythonApplication._config_file_name_default is deprecated: use @default decorator instead.
  def _config_file_name_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:268: DeprecationWarning: InteractiveShell._exiter_default is deprecated: use @default decorator instead.
  def _exiter_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:525: DeprecationWarning: TerminalInteractiveShell._ipython_dir_changed is deprecated: use @observe and @unobserve instead.
  def _ipython_dir_changed(self, name, new):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:459: DeprecationWarning: HistoryManager._dir_hist_default is deprecated: use @default decorator instead.
  def _dir_hist_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:165: DeprecationWarning: HistoryManager._db_changed is deprecated: use @observe and @unobserve instead.
  def _db_changed(self, name, old, new):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:459: DeprecationWarning: HistoryManager._dir_hist_default is deprecated: use @default decorator instead.
  def _dir_hist_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:268: DeprecationWarning: InteractiveShell._exiter_default is deprecated: use @default decorator instead.
  def _exiter_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:296: DeprecationWarning: PromptManager._invisible_chars_default is deprecated: use @default decorator instead.
  def _invisible_chars_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:272: DeprecationWarning: PromptManager._lazy_evaluate_fields_default is deprecated: use @default decorator instead.
  def _lazy_evaluate_fields_default(self): return lazily_evaluate.copy()

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:272: DeprecationWarning: PromptManager._lazy_evaluate_fields_default is deprecated: use @default decorator instead.
  def _lazy_evaluate_fields_default(self): return lazily_evaluate.copy()

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:296: DeprecationWarning: PromptManager._invisible_chars_default is deprecated: use @default decorator instead.
  def _invisible_chars_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:1180] on_trait_change WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:313: DeprecationWarning: on_trait_change is deprecated: use observe instead
  'in2_template', 'out_template'])

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:81: DeprecationWarning: DisplayFormatter._active_types_default is deprecated: use @default decorator instead.
  def _active_types_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:98: DeprecationWarning: DisplayFormatter._formatters_default is deprecated: use @default decorator instead.
  def _formatters_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:92: DeprecationWarning: DisplayFormatter._ipython_display_formatter_default is deprecated: use @default decorator instead.
  def _ipython_display_formatter_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:84: DeprecationWarning: DisplayFormatter._active_types_changed is deprecated: use @observe and @unobserve instead.
  def _active_types_changed(self, name, old, new):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:98: DeprecationWarning: DisplayFormatter._formatters_default is deprecated: use @default decorator instead.
  def _formatters_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:677: DeprecationWarning: PlainTextFormatter._deferred_printers_default is deprecated: use @default decorator instead.
  def _deferred_printers_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:669: DeprecationWarning: PlainTextFormatter._singleton_printers_default is deprecated: use @default decorator instead.
  def _singleton_printers_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:672: DeprecationWarning: PlainTextFormatter._type_printers_default is deprecated: use @default decorator instead.
  def _type_printers_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:91: DeprecationWarning: ScriptMagics._script_magics_default is deprecated: use @default decorator instead.
  def _script_magics_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:91: DeprecationWarning: ScriptMagics._script_magics_default is deprecated: use @default decorator instead.
  def _script_magics_default(self):

[ 2016-12-02 21:29:51 ] traitlets.py[line:1180] on_trait_change WARNING E:\Python27\lib\site-packages\IPython\core\extensions.py:58: DeprecationWarning: on_trait_change is deprecated: use observe instead
  self._on_ipython_dir_changed, 'ipython_dir'

[ 2016-12-02 21:29:51 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\extensions\storemagic.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:52: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  `profile` option.""",

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:118: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:128: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The IPython profile to use."""

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:142: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Whether to overwrite existing config files when copying""")

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:162: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Whether to create profile dir if it doesn't exist""")

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:173: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:178: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  usual traceback""")

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magic.py:307: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  "Automatically call line magics without requiring explicit % prefix")

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:132: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  multi_line_specials = CBool(True, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:362: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:367: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:392: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:395: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:414: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:415: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(False, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:427: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(250, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:439: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(300, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:453: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(600, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:471: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(700, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:495: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(900, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:510: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(1000, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:513: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="RegExp to identify potential function names.")

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:515: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="RegExp to exclude strings with this start from autocalling.")

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\alias.py:195: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_aliases = List(default_aliases(), config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\alias.py:196: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  user_aliases = List(default_value=[], config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:61: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  plain_text_only = Bool(False, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:313: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:319: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  singleton_printers = Dict(config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:323: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  type_printers = Dict(config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:327: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  deferred_printers = Dict(config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:594: DeprecationWarning: metadata {'config': False} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=False)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:600: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:607: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  pprint = Bool(True, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:610: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  verbose = Bool(False, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:613: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  max_width = Integer(79, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:616: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  newline = Unicode('\n', config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:621: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  float_precision = CUnicode('', config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:143: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:152: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:475: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Should the history database include output? (default: no)"

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:478: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Write to database every x commands (higher values save disk access & power).\n"

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:259: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  color_scheme = Unicode('Linux', config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:275: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Input prompt.  '\\#' will be transformed to the prompt number")

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:277: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Continuation prompt.")

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:279: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Output prompt. '\\#' will be transformed to the prompt number")

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:284: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:179: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:190: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:197: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:202: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:206: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The part of the banner to be printed before the profile"""

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:209: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The part of the banner to be printed after the profile"""

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:220: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:227: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:231: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Set the color scheme (NoColor, Linux, or LightBG)."

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:242: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  debug = CBool(False, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:256: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:259: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Don't call post-execute functions that have failed in the past."

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:273: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  ipython_dir= Unicode('', config=True) # Set to get_ipython_dir() in __init__

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:289: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:294: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:300: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:303: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:307: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:310: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Save multi-line entries as one entry in readline history"

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:314: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  will be displayed as regular output instead."""

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:320: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.in_template")

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:322: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.in2_template")

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:324: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.out_template")

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:326: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.justify")

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:349: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Show rewritten input, e.g. for autocall."

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:352: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  quiet = CBool(False, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:354: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  history_length = Integer(10000, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:360: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:365: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  readline_use = CBool(True, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:366: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  readline_remove_delims = Unicode('-/~', config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:383: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  ], config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:396: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  run interactively (displaying output from expressions).""")

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:400: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_in = SeparateUnicode('\n', config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:401: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_out = SeparateUnicode('', config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:402: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_out2 = SeparateUnicode('', config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:403: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  wildcards_case_sensitive = CBool(True, config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:405: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_value='Context', config=True)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:290: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="auto editing of files with syntax errors.")

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:295: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  you can force a direct exit without any confirmation.""",

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:305: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Set the editor used by IPython (default to $EDITOR/vi/notepad)."

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:308: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="The shell program to be used for paging.")

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:320: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default.""",

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:323: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Enable auto setting the terminal title."

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:276: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:556: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:568: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:578: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:89: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """,

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:116: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:139: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="A list of dotted module names of IPython extensions to load."

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:142: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="dotted module name of an IPython extension to load."

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:148: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Reraise exceptions encountered loading IPython extensions?",

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:152: DeprecationWarning: metadata {'config': False} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_extensions = List(Unicode(), [u'storemagic'], config=False)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:156: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  be hidden from tools like %who?"""

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""List of files to run at IPython startup."""

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:164: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  variable at IPython startup."""

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:167: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""A file to be run""")

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:170: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""lines of code to run at IPython startup."""

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:173: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Execute the given command string."

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:176: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Run the module as a script."

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:179: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Enable GUI event loop integration with any of {0}.".format(gui_keys)

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:184: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  the default matplotlib backend."""

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:190: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:197: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\extensions\storemagic.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:245: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Start IPython quickly by skipping the loading of config files."""

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:252: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Whether to display a banner upon starting IPython."

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:260: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  file or command."""

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:186: DeprecationWarning: TerminalIPythonApp._classes_default is deprecated: use @default decorator instead.
  def _classes_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:99: DeprecationWarning: BaseIPythonApplication._config_file_name_default is deprecated: use @default decorator instead.
  def _config_file_name_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:111: DeprecationWarning: BaseIPythonApplication._config_file_paths_default is deprecated: use @default decorator instead.
  def _config_file_paths_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:165: DeprecationWarning: BaseIPythonApplication._config_files_default is deprecated: use @default decorator instead.
  def _config_files_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:144: DeprecationWarning: BaseIPythonApplication._ipython_dir_default is deprecated: use @default decorator instead.
  def _ipython_dir_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:151: DeprecationWarning: BaseIPythonApplication._profile_dir_default is deprecated: use @default decorator instead.
  def _profile_dir_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:186: DeprecationWarning: TerminalIPythonApp._classes_default is deprecated: use @default decorator instead.
  def _classes_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:151: DeprecationWarning: BaseIPythonApplication._profile_dir_default is deprecated: use @default decorator instead.
  def _profile_dir_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:144: DeprecationWarning: BaseIPythonApplication._ipython_dir_default is deprecated: use @default decorator instead.
  def _ipython_dir_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:57: DeprecationWarning: ProfileDir._location_changed is deprecated: use @observe and @unobserve instead.
  def _location_changed(self, name, old, new):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:126: DeprecationWarning: ProfileDir._security_dir_changed is deprecated: use @observe and @unobserve instead.
  def _security_dir_changed(self, name, old, new):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:71: DeprecationWarning: ProfileDir._log_dir_changed is deprecated: use @observe and @unobserve instead.
  def _log_dir_changed(self, name, old, new):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:111: DeprecationWarning: ProfileDir._startup_dir_changed is deprecated: use @observe and @unobserve instead.
  def _startup_dir_changed(self, name, old, new):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:132: DeprecationWarning: ProfileDir._pid_dir_changed is deprecated: use @observe and @unobserve instead.
  def _pid_dir_changed(self, name, old, new):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:138: DeprecationWarning: ProfileDir._static_dir_changed is deprecated: use @observe and @unobserve instead.
  def _static_dir_changed(self, name, old, new):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:111: DeprecationWarning: BaseIPythonApplication._config_file_paths_default is deprecated: use @default decorator instead.
  def _config_file_paths_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:165: DeprecationWarning: BaseIPythonApplication._config_files_default is deprecated: use @default decorator instead.
  def _config_files_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:99: DeprecationWarning: BaseIPythonApplication._config_file_name_default is deprecated: use @default decorator instead.
  def _config_file_name_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:268: DeprecationWarning: InteractiveShell._exiter_default is deprecated: use @default decorator instead.
  def _exiter_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:525: DeprecationWarning: TerminalInteractiveShell._ipython_dir_changed is deprecated: use @observe and @unobserve instead.
  def _ipython_dir_changed(self, name, new):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:459: DeprecationWarning: HistoryManager._dir_hist_default is deprecated: use @default decorator instead.
  def _dir_hist_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:165: DeprecationWarning: HistoryManager._db_changed is deprecated: use @observe and @unobserve instead.
  def _db_changed(self, name, old, new):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:459: DeprecationWarning: HistoryManager._dir_hist_default is deprecated: use @default decorator instead.
  def _dir_hist_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:268: DeprecationWarning: InteractiveShell._exiter_default is deprecated: use @default decorator instead.
  def _exiter_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:296: DeprecationWarning: PromptManager._invisible_chars_default is deprecated: use @default decorator instead.
  def _invisible_chars_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:272: DeprecationWarning: PromptManager._lazy_evaluate_fields_default is deprecated: use @default decorator instead.
  def _lazy_evaluate_fields_default(self): return lazily_evaluate.copy()

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:272: DeprecationWarning: PromptManager._lazy_evaluate_fields_default is deprecated: use @default decorator instead.
  def _lazy_evaluate_fields_default(self): return lazily_evaluate.copy()

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:296: DeprecationWarning: PromptManager._invisible_chars_default is deprecated: use @default decorator instead.
  def _invisible_chars_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:1180] on_trait_change WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:313: DeprecationWarning: on_trait_change is deprecated: use observe instead
  'in2_template', 'out_template'])

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:81: DeprecationWarning: DisplayFormatter._active_types_default is deprecated: use @default decorator instead.
  def _active_types_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:98: DeprecationWarning: DisplayFormatter._formatters_default is deprecated: use @default decorator instead.
  def _formatters_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:92: DeprecationWarning: DisplayFormatter._ipython_display_formatter_default is deprecated: use @default decorator instead.
  def _ipython_display_formatter_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:84: DeprecationWarning: DisplayFormatter._active_types_changed is deprecated: use @observe and @unobserve instead.
  def _active_types_changed(self, name, old, new):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:98: DeprecationWarning: DisplayFormatter._formatters_default is deprecated: use @default decorator instead.
  def _formatters_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:677: DeprecationWarning: PlainTextFormatter._deferred_printers_default is deprecated: use @default decorator instead.
  def _deferred_printers_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:669: DeprecationWarning: PlainTextFormatter._singleton_printers_default is deprecated: use @default decorator instead.
  def _singleton_printers_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:672: DeprecationWarning: PlainTextFormatter._type_printers_default is deprecated: use @default decorator instead.
  def _type_printers_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:91: DeprecationWarning: ScriptMagics._script_magics_default is deprecated: use @default decorator instead.
  def _script_magics_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:91: DeprecationWarning: ScriptMagics._script_magics_default is deprecated: use @default decorator instead.
  def _script_magics_default(self):

[ 2016-12-02 21:35:16 ] traitlets.py[line:1180] on_trait_change WARNING E:\Python27\lib\site-packages\IPython\core\extensions.py:58: DeprecationWarning: on_trait_change is deprecated: use observe instead
  self._on_ipython_dir_changed, 'ipython_dir'

[ 2016-12-02 21:35:16 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\extensions\storemagic.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:37:49 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:92: DeprecationWarning: DisplayFormatter._ipython_display_formatter_default is deprecated: use @default decorator instead.
  def _ipython_display_formatter_default(self):

[ 2016-12-02 21:37:49 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:669: DeprecationWarning: PlainTextFormatter._singleton_printers_default is deprecated: use @default decorator instead.
  def _singleton_printers_default(self):

[ 2016-12-02 21:37:49 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:672: DeprecationWarning: PlainTextFormatter._type_printers_default is deprecated: use @default decorator instead.
  def _type_printers_default(self):

[ 2016-12-02 21:37:49 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:677: DeprecationWarning: PlainTextFormatter._deferred_printers_default is deprecated: use @default decorator instead.
  def _deferred_printers_default(self):

[ 2016-12-02 21:37:49 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code` FROM `user_per` WHERE `user_per`.`Per_user` = 'chenyh'  LIMIT 21; args=('chenyh',)
[ 2016-12-02 21:37:56 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `user_per` WHERE `user_per`.`Per_user` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 21:38:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code` FROM `user_per` WHERE `user_per`.`Per_user` = 'chenyh'  LIMIT 21; args=('chenyh',)
[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:52: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  `profile` option.""",

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:118: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:128: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The IPython profile to use."""

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:142: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Whether to overwrite existing config files when copying""")

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:162: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Whether to create profile dir if it doesn't exist""")

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:173: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:178: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  usual traceback""")

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magic.py:307: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  "Automatically call line magics without requiring explicit % prefix")

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:132: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  multi_line_specials = CBool(True, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:362: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:367: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:392: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:395: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:414: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:415: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(False, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:427: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(250, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:439: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(300, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:453: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(600, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:471: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(700, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:495: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(900, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:510: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(1000, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:513: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="RegExp to identify potential function names.")

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:515: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="RegExp to exclude strings with this start from autocalling.")

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\alias.py:195: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_aliases = List(default_aliases(), config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\alias.py:196: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  user_aliases = List(default_value=[], config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:61: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  plain_text_only = Bool(False, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:313: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:319: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  singleton_printers = Dict(config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:323: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  type_printers = Dict(config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:327: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  deferred_printers = Dict(config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:594: DeprecationWarning: metadata {'config': False} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=False)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:600: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:607: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  pprint = Bool(True, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:610: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  verbose = Bool(False, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:613: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  max_width = Integer(79, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:616: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  newline = Unicode('\n', config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:621: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  float_precision = CUnicode('', config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:143: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:152: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:475: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Should the history database include output? (default: no)"

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:478: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Write to database every x commands (higher values save disk access & power).\n"

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:259: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  color_scheme = Unicode('Linux', config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:275: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Input prompt.  '\\#' will be transformed to the prompt number")

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:277: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Continuation prompt.")

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:279: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Output prompt. '\\#' will be transformed to the prompt number")

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:284: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:179: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:190: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:197: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:202: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:206: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The part of the banner to be printed before the profile"""

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:209: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The part of the banner to be printed after the profile"""

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:220: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:227: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:231: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Set the color scheme (NoColor, Linux, or LightBG)."

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:242: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  debug = CBool(False, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:256: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:259: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Don't call post-execute functions that have failed in the past."

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:273: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  ipython_dir= Unicode('', config=True) # Set to get_ipython_dir() in __init__

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:289: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:294: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:300: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:303: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:307: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:310: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Save multi-line entries as one entry in readline history"

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:314: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  will be displayed as regular output instead."""

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:320: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.in_template")

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:322: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.in2_template")

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:324: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.out_template")

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:326: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.justify")

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:349: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Show rewritten input, e.g. for autocall."

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:352: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  quiet = CBool(False, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:354: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  history_length = Integer(10000, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:360: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:365: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  readline_use = CBool(True, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:366: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  readline_remove_delims = Unicode('-/~', config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:383: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  ], config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:396: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  run interactively (displaying output from expressions).""")

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:400: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_in = SeparateUnicode('\n', config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:401: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_out = SeparateUnicode('', config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:402: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_out2 = SeparateUnicode('', config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:403: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  wildcards_case_sensitive = CBool(True, config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:405: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_value='Context', config=True)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:290: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="auto editing of files with syntax errors.")

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:295: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  you can force a direct exit without any confirmation.""",

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:305: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Set the editor used by IPython (default to $EDITOR/vi/notepad)."

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:308: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="The shell program to be used for paging.")

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:320: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default.""",

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:323: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Enable auto setting the terminal title."

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:276: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:556: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:568: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:578: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:89: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """,

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:116: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:139: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="A list of dotted module names of IPython extensions to load."

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:142: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="dotted module name of an IPython extension to load."

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:148: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Reraise exceptions encountered loading IPython extensions?",

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:152: DeprecationWarning: metadata {'config': False} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_extensions = List(Unicode(), [u'storemagic'], config=False)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:156: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  be hidden from tools like %who?"""

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""List of files to run at IPython startup."""

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:164: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  variable at IPython startup."""

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:167: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""A file to be run""")

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:170: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""lines of code to run at IPython startup."""

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:173: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Execute the given command string."

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:176: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Run the module as a script."

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:179: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Enable GUI event loop integration with any of {0}.".format(gui_keys)

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:184: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  the default matplotlib backend."""

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:190: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:197: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\extensions\storemagic.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:245: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Start IPython quickly by skipping the loading of config files."""

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:252: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Whether to display a banner upon starting IPython."

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:260: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  file or command."""

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:186: DeprecationWarning: TerminalIPythonApp._classes_default is deprecated: use @default decorator instead.
  def _classes_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:99: DeprecationWarning: BaseIPythonApplication._config_file_name_default is deprecated: use @default decorator instead.
  def _config_file_name_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:111: DeprecationWarning: BaseIPythonApplication._config_file_paths_default is deprecated: use @default decorator instead.
  def _config_file_paths_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:165: DeprecationWarning: BaseIPythonApplication._config_files_default is deprecated: use @default decorator instead.
  def _config_files_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:144: DeprecationWarning: BaseIPythonApplication._ipython_dir_default is deprecated: use @default decorator instead.
  def _ipython_dir_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:151: DeprecationWarning: BaseIPythonApplication._profile_dir_default is deprecated: use @default decorator instead.
  def _profile_dir_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:186: DeprecationWarning: TerminalIPythonApp._classes_default is deprecated: use @default decorator instead.
  def _classes_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:151: DeprecationWarning: BaseIPythonApplication._profile_dir_default is deprecated: use @default decorator instead.
  def _profile_dir_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:144: DeprecationWarning: BaseIPythonApplication._ipython_dir_default is deprecated: use @default decorator instead.
  def _ipython_dir_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:57: DeprecationWarning: ProfileDir._location_changed is deprecated: use @observe and @unobserve instead.
  def _location_changed(self, name, old, new):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:126: DeprecationWarning: ProfileDir._security_dir_changed is deprecated: use @observe and @unobserve instead.
  def _security_dir_changed(self, name, old, new):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:71: DeprecationWarning: ProfileDir._log_dir_changed is deprecated: use @observe and @unobserve instead.
  def _log_dir_changed(self, name, old, new):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:111: DeprecationWarning: ProfileDir._startup_dir_changed is deprecated: use @observe and @unobserve instead.
  def _startup_dir_changed(self, name, old, new):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:132: DeprecationWarning: ProfileDir._pid_dir_changed is deprecated: use @observe and @unobserve instead.
  def _pid_dir_changed(self, name, old, new):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:138: DeprecationWarning: ProfileDir._static_dir_changed is deprecated: use @observe and @unobserve instead.
  def _static_dir_changed(self, name, old, new):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:111: DeprecationWarning: BaseIPythonApplication._config_file_paths_default is deprecated: use @default decorator instead.
  def _config_file_paths_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:165: DeprecationWarning: BaseIPythonApplication._config_files_default is deprecated: use @default decorator instead.
  def _config_files_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:99: DeprecationWarning: BaseIPythonApplication._config_file_name_default is deprecated: use @default decorator instead.
  def _config_file_name_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:268: DeprecationWarning: InteractiveShell._exiter_default is deprecated: use @default decorator instead.
  def _exiter_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:525: DeprecationWarning: TerminalInteractiveShell._ipython_dir_changed is deprecated: use @observe and @unobserve instead.
  def _ipython_dir_changed(self, name, new):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:459: DeprecationWarning: HistoryManager._dir_hist_default is deprecated: use @default decorator instead.
  def _dir_hist_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:165: DeprecationWarning: HistoryManager._db_changed is deprecated: use @observe and @unobserve instead.
  def _db_changed(self, name, old, new):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:459: DeprecationWarning: HistoryManager._dir_hist_default is deprecated: use @default decorator instead.
  def _dir_hist_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:268: DeprecationWarning: InteractiveShell._exiter_default is deprecated: use @default decorator instead.
  def _exiter_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:296: DeprecationWarning: PromptManager._invisible_chars_default is deprecated: use @default decorator instead.
  def _invisible_chars_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:272: DeprecationWarning: PromptManager._lazy_evaluate_fields_default is deprecated: use @default decorator instead.
  def _lazy_evaluate_fields_default(self): return lazily_evaluate.copy()

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:272: DeprecationWarning: PromptManager._lazy_evaluate_fields_default is deprecated: use @default decorator instead.
  def _lazy_evaluate_fields_default(self): return lazily_evaluate.copy()

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:296: DeprecationWarning: PromptManager._invisible_chars_default is deprecated: use @default decorator instead.
  def _invisible_chars_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:1180] on_trait_change WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:313: DeprecationWarning: on_trait_change is deprecated: use observe instead
  'in2_template', 'out_template'])

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:81: DeprecationWarning: DisplayFormatter._active_types_default is deprecated: use @default decorator instead.
  def _active_types_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:98: DeprecationWarning: DisplayFormatter._formatters_default is deprecated: use @default decorator instead.
  def _formatters_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:92: DeprecationWarning: DisplayFormatter._ipython_display_formatter_default is deprecated: use @default decorator instead.
  def _ipython_display_formatter_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:84: DeprecationWarning: DisplayFormatter._active_types_changed is deprecated: use @observe and @unobserve instead.
  def _active_types_changed(self, name, old, new):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:98: DeprecationWarning: DisplayFormatter._formatters_default is deprecated: use @default decorator instead.
  def _formatters_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:677: DeprecationWarning: PlainTextFormatter._deferred_printers_default is deprecated: use @default decorator instead.
  def _deferred_printers_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:669: DeprecationWarning: PlainTextFormatter._singleton_printers_default is deprecated: use @default decorator instead.
  def _singleton_printers_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:672: DeprecationWarning: PlainTextFormatter._type_printers_default is deprecated: use @default decorator instead.
  def _type_printers_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:91: DeprecationWarning: ScriptMagics._script_magics_default is deprecated: use @default decorator instead.
  def _script_magics_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:91: DeprecationWarning: ScriptMagics._script_magics_default is deprecated: use @default decorator instead.
  def _script_magics_default(self):

[ 2016-12-02 21:38:59 ] traitlets.py[line:1180] on_trait_change WARNING E:\Python27\lib\site-packages\IPython\core\extensions.py:58: DeprecationWarning: on_trait_change is deprecated: use observe instead
  self._on_ipython_dir_changed, 'ipython_dir'

[ 2016-12-02 21:38:59 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\extensions\storemagic.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:42:04 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `user_per` WHERE `user_per`.`id` > 2 ; args=(2,)
[ 2016-12-02 21:42:04 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:92: DeprecationWarning: DisplayFormatter._ipython_display_formatter_default is deprecated: use @default decorator instead.
  def _ipython_display_formatter_default(self):

[ 2016-12-02 21:42:04 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:669: DeprecationWarning: PlainTextFormatter._singleton_printers_default is deprecated: use @default decorator instead.
  def _singleton_printers_default(self):

[ 2016-12-02 21:42:04 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:672: DeprecationWarning: PlainTextFormatter._type_printers_default is deprecated: use @default decorator instead.
  def _type_printers_default(self):

[ 2016-12-02 21:42:04 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:677: DeprecationWarning: PlainTextFormatter._deferred_printers_default is deprecated: use @default decorator instead.
  def _deferred_printers_default(self):

[ 2016-12-02 21:42:12 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code` FROM `user_per` WHERE `user_per`.`id` > 2  LIMIT 21; args=(2,)
[ 2016-12-02 21:42:21 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code` FROM `user_per` WHERE `user_per`.`id` > 2  LIMIT 21; args=(2,)
[ 2016-12-02 21:42:24 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `user_per` WHERE `user_per`.`id` > 2 ; args=(2,)
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.000) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.001) SHOW TABLES; args=None
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'logentry'  AND `django_content_type`.`app_label` = 'admin' ); args=('logentry', u'admin')
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (1) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(1,)
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'admin'  ORDER BY `django_content_type`.`name` ASC; args=(u'admin',)
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'permission'  AND `django_content_type`.`app_label` = 'auth' ); args=('permission', u'auth')
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'group'  AND `django_content_type`.`app_label` = 'auth' ); args=('group', u'auth')
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user'  AND `django_content_type`.`app_label` = 'auth' ); args=('user', u'auth')
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (2, 3, 4) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(2, 3, 4)
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'auth'  ORDER BY `django_content_type`.`name` ASC; args=(u'auth',)
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'contenttype'  AND `django_content_type`.`app_label` = 'contenttypes' ); args=('contenttype', u'contenttypes')
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (5) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(5,)
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'contenttypes'  ORDER BY `django_content_type`.`name` ASC; args=(u'contenttypes',)
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'session'  AND `django_content_type`.`app_label` = 'sessions' ); args=('session', u'sessions')
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (6) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(6,)
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'sessions'  ORDER BY `django_content_type`.`name` ASC; args=(u'sessions',)
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'admin'  AND `django_content_type`.`app_label` = 'user' ); args=('admin', u'user')
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_per'  AND `django_content_type`.`app_label` = 'user' ); args=('user_per', u'user')
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'per_code'  AND `django_content_type`.`app_label` = 'user' ); args=('per_code', u'user')
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (8, 12, 13) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(8, 12, 13)
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'user'  ORDER BY `django_content_type`.`name` ASC; args=(u'user',)
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'migrationhistory'  AND `django_content_type`.`app_label` = 'south' ); args=('migrationhistory', u'south')
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (9) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(9,)
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'south'  ORDER BY `django_content_type`.`name` ASC; args=(u'south',)
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-02 21:47:11 ] util.py[line:79] execute DEBUG (0.001) SET foreign_key_checks=1; args=None
[ 2016-12-02 21:48:30 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:52: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  `profile` option.""",

[ 2016-12-02 21:48:30 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:118: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:48:30 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:128: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The IPython profile to use."""

[ 2016-12-02 21:48:30 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:142: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:30 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Whether to overwrite existing config files when copying""")

[ 2016-12-02 21:48:30 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:162: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Whether to create profile dir if it doesn't exist""")

[ 2016-12-02 21:48:30 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:173: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:48:30 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:178: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  usual traceback""")

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magic.py:307: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  "Automatically call line magics without requiring explicit % prefix")

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:132: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  multi_line_specials = CBool(True, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:362: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:367: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:392: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:395: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:414: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:415: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(False, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:427: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(250, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:439: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(300, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:453: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(600, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:471: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(700, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:495: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(900, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:510: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(1000, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:513: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="RegExp to identify potential function names.")

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:515: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="RegExp to exclude strings with this start from autocalling.")

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\alias.py:195: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_aliases = List(default_aliases(), config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\alias.py:196: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  user_aliases = List(default_value=[], config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:61: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  plain_text_only = Bool(False, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:313: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:319: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  singleton_printers = Dict(config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:323: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  type_printers = Dict(config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:327: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  deferred_printers = Dict(config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:594: DeprecationWarning: metadata {'config': False} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=False)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:600: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:607: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  pprint = Bool(True, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:610: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  verbose = Bool(False, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:613: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  max_width = Integer(79, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:616: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  newline = Unicode('\n', config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:621: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  float_precision = CUnicode('', config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:143: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:152: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:475: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Should the history database include output? (default: no)"

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:478: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Write to database every x commands (higher values save disk access & power).\n"

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:259: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  color_scheme = Unicode('Linux', config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:275: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Input prompt.  '\\#' will be transformed to the prompt number")

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:277: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Continuation prompt.")

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:279: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Output prompt. '\\#' will be transformed to the prompt number")

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:284: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:179: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:190: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:197: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:202: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:206: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The part of the banner to be printed before the profile"""

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:209: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The part of the banner to be printed after the profile"""

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:220: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:227: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:231: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Set the color scheme (NoColor, Linux, or LightBG)."

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:242: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  debug = CBool(False, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:256: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:259: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Don't call post-execute functions that have failed in the past."

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:273: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  ipython_dir= Unicode('', config=True) # Set to get_ipython_dir() in __init__

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:289: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:294: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:300: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:303: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:307: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:310: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Save multi-line entries as one entry in readline history"

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:314: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  will be displayed as regular output instead."""

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:320: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.in_template")

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:322: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.in2_template")

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:324: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.out_template")

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:326: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.justify")

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:349: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Show rewritten input, e.g. for autocall."

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:352: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  quiet = CBool(False, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:354: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  history_length = Integer(10000, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:360: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:365: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  readline_use = CBool(True, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:366: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  readline_remove_delims = Unicode('-/~', config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:383: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  ], config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:396: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  run interactively (displaying output from expressions).""")

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:400: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_in = SeparateUnicode('\n', config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:401: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_out = SeparateUnicode('', config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:402: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_out2 = SeparateUnicode('', config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:403: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  wildcards_case_sensitive = CBool(True, config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:405: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_value='Context', config=True)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:290: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="auto editing of files with syntax errors.")

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:295: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  you can force a direct exit without any confirmation.""",

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:305: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Set the editor used by IPython (default to $EDITOR/vi/notepad)."

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:308: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="The shell program to be used for paging.")

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:320: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default.""",

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:323: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Enable auto setting the terminal title."

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:276: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:556: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:568: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:578: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:89: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """,

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:116: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:139: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="A list of dotted module names of IPython extensions to load."

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:142: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="dotted module name of an IPython extension to load."

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:148: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Reraise exceptions encountered loading IPython extensions?",

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:152: DeprecationWarning: metadata {'config': False} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_extensions = List(Unicode(), [u'storemagic'], config=False)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:156: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  be hidden from tools like %who?"""

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""List of files to run at IPython startup."""

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:164: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  variable at IPython startup."""

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:167: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""A file to be run""")

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:170: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""lines of code to run at IPython startup."""

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:173: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Execute the given command string."

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:176: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Run the module as a script."

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:179: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Enable GUI event loop integration with any of {0}.".format(gui_keys)

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:184: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  the default matplotlib backend."""

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:190: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:197: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\extensions\storemagic.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:245: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Start IPython quickly by skipping the loading of config files."""

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:252: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Whether to display a banner upon starting IPython."

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:260: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  file or command."""

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:186: DeprecationWarning: TerminalIPythonApp._classes_default is deprecated: use @default decorator instead.
  def _classes_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:99: DeprecationWarning: BaseIPythonApplication._config_file_name_default is deprecated: use @default decorator instead.
  def _config_file_name_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:111: DeprecationWarning: BaseIPythonApplication._config_file_paths_default is deprecated: use @default decorator instead.
  def _config_file_paths_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:165: DeprecationWarning: BaseIPythonApplication._config_files_default is deprecated: use @default decorator instead.
  def _config_files_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:144: DeprecationWarning: BaseIPythonApplication._ipython_dir_default is deprecated: use @default decorator instead.
  def _ipython_dir_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:151: DeprecationWarning: BaseIPythonApplication._profile_dir_default is deprecated: use @default decorator instead.
  def _profile_dir_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:186: DeprecationWarning: TerminalIPythonApp._classes_default is deprecated: use @default decorator instead.
  def _classes_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:151: DeprecationWarning: BaseIPythonApplication._profile_dir_default is deprecated: use @default decorator instead.
  def _profile_dir_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:144: DeprecationWarning: BaseIPythonApplication._ipython_dir_default is deprecated: use @default decorator instead.
  def _ipython_dir_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:57: DeprecationWarning: ProfileDir._location_changed is deprecated: use @observe and @unobserve instead.
  def _location_changed(self, name, old, new):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:126: DeprecationWarning: ProfileDir._security_dir_changed is deprecated: use @observe and @unobserve instead.
  def _security_dir_changed(self, name, old, new):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:71: DeprecationWarning: ProfileDir._log_dir_changed is deprecated: use @observe and @unobserve instead.
  def _log_dir_changed(self, name, old, new):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:111: DeprecationWarning: ProfileDir._startup_dir_changed is deprecated: use @observe and @unobserve instead.
  def _startup_dir_changed(self, name, old, new):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:132: DeprecationWarning: ProfileDir._pid_dir_changed is deprecated: use @observe and @unobserve instead.
  def _pid_dir_changed(self, name, old, new):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:138: DeprecationWarning: ProfileDir._static_dir_changed is deprecated: use @observe and @unobserve instead.
  def _static_dir_changed(self, name, old, new):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:111: DeprecationWarning: BaseIPythonApplication._config_file_paths_default is deprecated: use @default decorator instead.
  def _config_file_paths_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:165: DeprecationWarning: BaseIPythonApplication._config_files_default is deprecated: use @default decorator instead.
  def _config_files_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:99: DeprecationWarning: BaseIPythonApplication._config_file_name_default is deprecated: use @default decorator instead.
  def _config_file_name_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:268: DeprecationWarning: InteractiveShell._exiter_default is deprecated: use @default decorator instead.
  def _exiter_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:525: DeprecationWarning: TerminalInteractiveShell._ipython_dir_changed is deprecated: use @observe and @unobserve instead.
  def _ipython_dir_changed(self, name, new):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:459: DeprecationWarning: HistoryManager._dir_hist_default is deprecated: use @default decorator instead.
  def _dir_hist_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:165: DeprecationWarning: HistoryManager._db_changed is deprecated: use @observe and @unobserve instead.
  def _db_changed(self, name, old, new):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:459: DeprecationWarning: HistoryManager._dir_hist_default is deprecated: use @default decorator instead.
  def _dir_hist_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:268: DeprecationWarning: InteractiveShell._exiter_default is deprecated: use @default decorator instead.
  def _exiter_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:296: DeprecationWarning: PromptManager._invisible_chars_default is deprecated: use @default decorator instead.
  def _invisible_chars_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:272: DeprecationWarning: PromptManager._lazy_evaluate_fields_default is deprecated: use @default decorator instead.
  def _lazy_evaluate_fields_default(self): return lazily_evaluate.copy()

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:272: DeprecationWarning: PromptManager._lazy_evaluate_fields_default is deprecated: use @default decorator instead.
  def _lazy_evaluate_fields_default(self): return lazily_evaluate.copy()

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:296: DeprecationWarning: PromptManager._invisible_chars_default is deprecated: use @default decorator instead.
  def _invisible_chars_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:1180] on_trait_change WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:313: DeprecationWarning: on_trait_change is deprecated: use observe instead
  'in2_template', 'out_template'])

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:81: DeprecationWarning: DisplayFormatter._active_types_default is deprecated: use @default decorator instead.
  def _active_types_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:98: DeprecationWarning: DisplayFormatter._formatters_default is deprecated: use @default decorator instead.
  def _formatters_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:92: DeprecationWarning: DisplayFormatter._ipython_display_formatter_default is deprecated: use @default decorator instead.
  def _ipython_display_formatter_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:84: DeprecationWarning: DisplayFormatter._active_types_changed is deprecated: use @observe and @unobserve instead.
  def _active_types_changed(self, name, old, new):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:98: DeprecationWarning: DisplayFormatter._formatters_default is deprecated: use @default decorator instead.
  def _formatters_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:677: DeprecationWarning: PlainTextFormatter._deferred_printers_default is deprecated: use @default decorator instead.
  def _deferred_printers_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:669: DeprecationWarning: PlainTextFormatter._singleton_printers_default is deprecated: use @default decorator instead.
  def _singleton_printers_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:672: DeprecationWarning: PlainTextFormatter._type_printers_default is deprecated: use @default decorator instead.
  def _type_printers_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:91: DeprecationWarning: ScriptMagics._script_magics_default is deprecated: use @default decorator instead.
  def _script_magics_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:91: DeprecationWarning: ScriptMagics._script_magics_default is deprecated: use @default decorator instead.
  def _script_magics_default(self):

[ 2016-12-02 21:48:31 ] traitlets.py[line:1180] on_trait_change WARNING E:\Python27\lib\site-packages\IPython\core\extensions.py:58: DeprecationWarning: on_trait_change is deprecated: use observe instead
  self._on_ipython_dir_changed, 'ipython_dir'

[ 2016-12-02 21:48:31 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\extensions\storemagic.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 21:50:14 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(`user_per`.`Per_code`) FROM `user_per` WHERE `user_per`.`Per_user` LIKE '%chenyh%' ; args=(u'%chenyh%',)
[ 2016-12-02 21:50:14 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:92: DeprecationWarning: DisplayFormatter._ipython_display_formatter_default is deprecated: use @default decorator instead.
  def _ipython_display_formatter_default(self):

[ 2016-12-02 21:50:14 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:669: DeprecationWarning: PlainTextFormatter._singleton_printers_default is deprecated: use @default decorator instead.
  def _singleton_printers_default(self):

[ 2016-12-02 21:50:14 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:672: DeprecationWarning: PlainTextFormatter._type_printers_default is deprecated: use @default decorator instead.
  def _type_printers_default(self):

[ 2016-12-02 21:50:14 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:677: DeprecationWarning: PlainTextFormatter._deferred_printers_default is deprecated: use @default decorator instead.
  def _deferred_printers_default(self):

[ 2016-12-02 21:50:15 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(`user_per`.`Per_code`) FROM `user_per` WHERE `user_per`.`Per_user` LIKE '%chenyh%' ; args=(u'%chenyh%',)
[ 2016-12-02 21:50:37 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`Per_code` FROM `user_per` WHERE `user_per`.`Per_user` LIKE '%chenyh%' ; args=(u'%chenyh%',)
[ 2016-12-02 22:00:33 ] util.py[line:79] execute DEBUG (0.002) select a.Per_user as Per_user,a.Per_code as Per_code,b.Per_name as Per_name from user_per a per_code b where a.Per_code =b.Per_code; args=()
[ 2016-12-02 22:01:21 ] util.py[line:79] execute DEBUG (0.001) select a.Per_user as Per_user,a.Per_code as Per_code,b.Per_name as Per_name from user_per a per_code b where a.Per_code = b.Per_code; args=()
[ 2016-12-02 22:11:03 ] util.py[line:79] execute DEBUG (0.002) select a.Per_user,a.Per_code,b.Per_name  from user_per a,per_code b where a.Per_code = b.Per_code and Per_user = 'chenyh'; args=()
[ 2016-12-02 22:27:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 21; args=()
[ 2016-12-02 22:30:10 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-02 22:34:15 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code` FROM `per_code` LIMIT 21; args=()
[ 2016-12-02 22:40:21 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`Per_code` FROM `user_per` WHERE `user_per`.`Per_user` LIKE '%chenyh%'  LIMIT 21; args=(u'%chenyh%',)
[ 2016-12-02 22:40:37 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-02 22:42:30 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code` FROM `per_code`; args=()
[ 2016-12-02 22:55:03 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code` FROM `user_per` WHERE `user_per`.`Per_code` IN ('001', '002') LIMIT 21; args=(u'001', u'002')
[ 2016-12-02 22:55:49 ] util.py[line:79] execute DEBUG (0.002) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code` FROM `user_per` WHERE `user_per`.`Per_code` IN ('001', '002') LIMIT 21; args=(u'001', u'002')
[ 2016-12-02 22:56:20 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code` FROM `user_per` WHERE `user_per`.`Per_code` IN ('001', '002') LIMIT 21; args=(u'001', u'002')
[ 2016-12-02 22:56:45 ] util.py[line:79] execute DEBUG (0.002) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code` FROM `user_per` WHERE `user_per`.`Per_code` IN ('001', '002'); args=(u'001', u'002')
[ 2016-12-02 23:01:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code` FROM `user_per` WHERE `user_per`.`Per_code` IN ('001', '002') LIMIT 21; args=(u'001', u'002')
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.001) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.001) SHOW TABLES; args=None
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'logentry'  AND `django_content_type`.`app_label` = 'admin' ); args=('logentry', u'admin')
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (1) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(1,)
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'admin'  ORDER BY `django_content_type`.`name` ASC; args=(u'admin',)
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'permission'  AND `django_content_type`.`app_label` = 'auth' ); args=('permission', u'auth')
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'group'  AND `django_content_type`.`app_label` = 'auth' ); args=('group', u'auth')
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user'  AND `django_content_type`.`app_label` = 'auth' ); args=('user', u'auth')
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (2, 3, 4) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(2, 3, 4)
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'auth'  ORDER BY `django_content_type`.`name` ASC; args=(u'auth',)
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'contenttype'  AND `django_content_type`.`app_label` = 'contenttypes' ); args=('contenttype', u'contenttypes')
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (5) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(5,)
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'contenttypes'  ORDER BY `django_content_type`.`name` ASC; args=(u'contenttypes',)
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'session'  AND `django_content_type`.`app_label` = 'sessions' ); args=('session', u'sessions')
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (6) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(6,)
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'sessions'  ORDER BY `django_content_type`.`name` ASC; args=(u'sessions',)
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'admin'  AND `django_content_type`.`app_label` = 'user' ); args=('admin', u'user')
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_per'  AND `django_content_type`.`app_label` = 'user' ); args=('user_per', u'user')
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'per_code'  AND `django_content_type`.`app_label` = 'user' ); args=('per_code', u'user')
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (8, 12, 13) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(8, 12, 13)
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'user'  ORDER BY `django_content_type`.`name` ASC; args=(u'user',)
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'migrationhistory'  AND `django_content_type`.`app_label` = 'south' ); args=('migrationhistory', u'south')
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (9) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(9,)
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'south'  ORDER BY `django_content_type`.`name` ASC; args=(u'south',)
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-02 23:02:37 ] util.py[line:79] execute DEBUG (0.001) SET foreign_key_checks=1; args=None
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.001) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.001) SHOW TABLES; args=None
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'logentry'  AND `django_content_type`.`app_label` = 'admin' ); args=('logentry', u'admin')
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (1) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(1,)
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'admin'  ORDER BY `django_content_type`.`name` ASC; args=(u'admin',)
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'permission'  AND `django_content_type`.`app_label` = 'auth' ); args=('permission', u'auth')
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'group'  AND `django_content_type`.`app_label` = 'auth' ); args=('group', u'auth')
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user'  AND `django_content_type`.`app_label` = 'auth' ); args=('user', u'auth')
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (2, 3, 4) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(2, 3, 4)
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'auth'  ORDER BY `django_content_type`.`name` ASC; args=(u'auth',)
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'contenttype'  AND `django_content_type`.`app_label` = 'contenttypes' ); args=('contenttype', u'contenttypes')
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (5) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(5,)
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'contenttypes'  ORDER BY `django_content_type`.`name` ASC; args=(u'contenttypes',)
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'session'  AND `django_content_type`.`app_label` = 'sessions' ); args=('session', u'sessions')
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (6) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(6,)
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'sessions'  ORDER BY `django_content_type`.`name` ASC; args=(u'sessions',)
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'admin'  AND `django_content_type`.`app_label` = 'user' ); args=('admin', u'user')
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_per'  AND `django_content_type`.`app_label` = 'user' ); args=('user_per', u'user')
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'per_code'  AND `django_content_type`.`app_label` = 'user' ); args=('per_code', u'user')
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (8, 12, 13) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(8, 12, 13)
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'user'  ORDER BY `django_content_type`.`name` ASC; args=(u'user',)
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'migrationhistory'  AND `django_content_type`.`app_label` = 'south' ); args=('migrationhistory', u'south')
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (9) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(9,)
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'south'  ORDER BY `django_content_type`.`name` ASC; args=(u'south',)
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-02 23:03:43 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:52: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  `profile` option.""",

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:118: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:128: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The IPython profile to use."""

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:142: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Whether to overwrite existing config files when copying""")

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:162: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Whether to create profile dir if it doesn't exist""")

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:173: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:178: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  usual traceback""")

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magic.py:307: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  "Automatically call line magics without requiring explicit % prefix")

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:132: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  multi_line_specials = CBool(True, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:362: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:367: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:392: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:395: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:414: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:415: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(False, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:427: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(250, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:439: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(300, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:453: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(600, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:471: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(700, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:495: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(900, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:510: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(1000, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:513: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="RegExp to identify potential function names.")

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:515: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="RegExp to exclude strings with this start from autocalling.")

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\alias.py:195: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_aliases = List(default_aliases(), config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\alias.py:196: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  user_aliases = List(default_value=[], config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:61: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  plain_text_only = Bool(False, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:313: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:319: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  singleton_printers = Dict(config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:323: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  type_printers = Dict(config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:327: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  deferred_printers = Dict(config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:594: DeprecationWarning: metadata {'config': False} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=False)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:600: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:607: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  pprint = Bool(True, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:610: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  verbose = Bool(False, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:613: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  max_width = Integer(79, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:616: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  newline = Unicode('\n', config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:621: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  float_precision = CUnicode('', config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:143: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:152: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:475: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Should the history database include output? (default: no)"

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:478: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Write to database every x commands (higher values save disk access & power).\n"

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:259: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  color_scheme = Unicode('Linux', config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:275: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Input prompt.  '\\#' will be transformed to the prompt number")

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:277: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Continuation prompt.")

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:279: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Output prompt. '\\#' will be transformed to the prompt number")

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:284: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:179: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:190: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:197: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:202: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:206: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The part of the banner to be printed before the profile"""

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:209: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The part of the banner to be printed after the profile"""

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:220: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:227: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:231: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Set the color scheme (NoColor, Linux, or LightBG)."

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:242: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  debug = CBool(False, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:256: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:259: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Don't call post-execute functions that have failed in the past."

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:273: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  ipython_dir= Unicode('', config=True) # Set to get_ipython_dir() in __init__

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:289: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:294: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:300: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:303: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:307: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:310: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Save multi-line entries as one entry in readline history"

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:314: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  will be displayed as regular output instead."""

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:320: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.in_template")

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:322: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.in2_template")

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:324: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.out_template")

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:326: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.justify")

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:349: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Show rewritten input, e.g. for autocall."

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:352: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  quiet = CBool(False, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:354: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  history_length = Integer(10000, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:360: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:365: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  readline_use = CBool(True, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:366: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  readline_remove_delims = Unicode('-/~', config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:383: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  ], config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:396: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  run interactively (displaying output from expressions).""")

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:400: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_in = SeparateUnicode('\n', config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:401: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_out = SeparateUnicode('', config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:402: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_out2 = SeparateUnicode('', config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:403: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  wildcards_case_sensitive = CBool(True, config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:405: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_value='Context', config=True)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:290: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="auto editing of files with syntax errors.")

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:295: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  you can force a direct exit without any confirmation.""",

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:305: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Set the editor used by IPython (default to $EDITOR/vi/notepad)."

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:308: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="The shell program to be used for paging.")

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:320: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default.""",

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:323: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Enable auto setting the terminal title."

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:276: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:556: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:568: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:578: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:89: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """,

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:116: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:139: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="A list of dotted module names of IPython extensions to load."

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:142: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="dotted module name of an IPython extension to load."

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:148: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Reraise exceptions encountered loading IPython extensions?",

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:152: DeprecationWarning: metadata {'config': False} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_extensions = List(Unicode(), [u'storemagic'], config=False)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:156: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  be hidden from tools like %who?"""

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""List of files to run at IPython startup."""

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:164: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  variable at IPython startup."""

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:167: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""A file to be run""")

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:170: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""lines of code to run at IPython startup."""

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:173: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Execute the given command string."

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:176: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Run the module as a script."

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:179: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Enable GUI event loop integration with any of {0}.".format(gui_keys)

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:184: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  the default matplotlib backend."""

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:190: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:197: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\extensions\storemagic.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:245: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Start IPython quickly by skipping the loading of config files."""

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:252: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Whether to display a banner upon starting IPython."

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:260: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  file or command."""

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:186: DeprecationWarning: TerminalIPythonApp._classes_default is deprecated: use @default decorator instead.
  def _classes_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:99: DeprecationWarning: BaseIPythonApplication._config_file_name_default is deprecated: use @default decorator instead.
  def _config_file_name_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:111: DeprecationWarning: BaseIPythonApplication._config_file_paths_default is deprecated: use @default decorator instead.
  def _config_file_paths_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:165: DeprecationWarning: BaseIPythonApplication._config_files_default is deprecated: use @default decorator instead.
  def _config_files_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:144: DeprecationWarning: BaseIPythonApplication._ipython_dir_default is deprecated: use @default decorator instead.
  def _ipython_dir_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:151: DeprecationWarning: BaseIPythonApplication._profile_dir_default is deprecated: use @default decorator instead.
  def _profile_dir_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:186: DeprecationWarning: TerminalIPythonApp._classes_default is deprecated: use @default decorator instead.
  def _classes_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:151: DeprecationWarning: BaseIPythonApplication._profile_dir_default is deprecated: use @default decorator instead.
  def _profile_dir_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:144: DeprecationWarning: BaseIPythonApplication._ipython_dir_default is deprecated: use @default decorator instead.
  def _ipython_dir_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:57: DeprecationWarning: ProfileDir._location_changed is deprecated: use @observe and @unobserve instead.
  def _location_changed(self, name, old, new):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:126: DeprecationWarning: ProfileDir._security_dir_changed is deprecated: use @observe and @unobserve instead.
  def _security_dir_changed(self, name, old, new):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:71: DeprecationWarning: ProfileDir._log_dir_changed is deprecated: use @observe and @unobserve instead.
  def _log_dir_changed(self, name, old, new):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:111: DeprecationWarning: ProfileDir._startup_dir_changed is deprecated: use @observe and @unobserve instead.
  def _startup_dir_changed(self, name, old, new):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:132: DeprecationWarning: ProfileDir._pid_dir_changed is deprecated: use @observe and @unobserve instead.
  def _pid_dir_changed(self, name, old, new):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:138: DeprecationWarning: ProfileDir._static_dir_changed is deprecated: use @observe and @unobserve instead.
  def _static_dir_changed(self, name, old, new):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:111: DeprecationWarning: BaseIPythonApplication._config_file_paths_default is deprecated: use @default decorator instead.
  def _config_file_paths_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:165: DeprecationWarning: BaseIPythonApplication._config_files_default is deprecated: use @default decorator instead.
  def _config_files_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:99: DeprecationWarning: BaseIPythonApplication._config_file_name_default is deprecated: use @default decorator instead.
  def _config_file_name_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:268: DeprecationWarning: InteractiveShell._exiter_default is deprecated: use @default decorator instead.
  def _exiter_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:525: DeprecationWarning: TerminalInteractiveShell._ipython_dir_changed is deprecated: use @observe and @unobserve instead.
  def _ipython_dir_changed(self, name, new):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:459: DeprecationWarning: HistoryManager._dir_hist_default is deprecated: use @default decorator instead.
  def _dir_hist_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:165: DeprecationWarning: HistoryManager._db_changed is deprecated: use @observe and @unobserve instead.
  def _db_changed(self, name, old, new):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:459: DeprecationWarning: HistoryManager._dir_hist_default is deprecated: use @default decorator instead.
  def _dir_hist_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:268: DeprecationWarning: InteractiveShell._exiter_default is deprecated: use @default decorator instead.
  def _exiter_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:296: DeprecationWarning: PromptManager._invisible_chars_default is deprecated: use @default decorator instead.
  def _invisible_chars_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:272: DeprecationWarning: PromptManager._lazy_evaluate_fields_default is deprecated: use @default decorator instead.
  def _lazy_evaluate_fields_default(self): return lazily_evaluate.copy()

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:272: DeprecationWarning: PromptManager._lazy_evaluate_fields_default is deprecated: use @default decorator instead.
  def _lazy_evaluate_fields_default(self): return lazily_evaluate.copy()

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:296: DeprecationWarning: PromptManager._invisible_chars_default is deprecated: use @default decorator instead.
  def _invisible_chars_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:1180] on_trait_change WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:313: DeprecationWarning: on_trait_change is deprecated: use observe instead
  'in2_template', 'out_template'])

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:81: DeprecationWarning: DisplayFormatter._active_types_default is deprecated: use @default decorator instead.
  def _active_types_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:98: DeprecationWarning: DisplayFormatter._formatters_default is deprecated: use @default decorator instead.
  def _formatters_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:92: DeprecationWarning: DisplayFormatter._ipython_display_formatter_default is deprecated: use @default decorator instead.
  def _ipython_display_formatter_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:84: DeprecationWarning: DisplayFormatter._active_types_changed is deprecated: use @observe and @unobserve instead.
  def _active_types_changed(self, name, old, new):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:98: DeprecationWarning: DisplayFormatter._formatters_default is deprecated: use @default decorator instead.
  def _formatters_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:677: DeprecationWarning: PlainTextFormatter._deferred_printers_default is deprecated: use @default decorator instead.
  def _deferred_printers_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:669: DeprecationWarning: PlainTextFormatter._singleton_printers_default is deprecated: use @default decorator instead.
  def _singleton_printers_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:672: DeprecationWarning: PlainTextFormatter._type_printers_default is deprecated: use @default decorator instead.
  def _type_printers_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:91: DeprecationWarning: ScriptMagics._script_magics_default is deprecated: use @default decorator instead.
  def _script_magics_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:91: DeprecationWarning: ScriptMagics._script_magics_default is deprecated: use @default decorator instead.
  def _script_magics_default(self):

[ 2016-12-02 23:03:48 ] traitlets.py[line:1180] on_trait_change WARNING E:\Python27\lib\site-packages\IPython\core\extensions.py:58: DeprecationWarning: on_trait_change is deprecated: use observe instead
  self._on_ipython_dir_changed, 'ipython_dir'

[ 2016-12-02 23:03:48 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\extensions\storemagic.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-02 23:04:56 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:92: DeprecationWarning: DisplayFormatter._ipython_display_formatter_default is deprecated: use @default decorator instead.
  def _ipython_display_formatter_default(self):

[ 2016-12-02 23:04:56 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:669: DeprecationWarning: PlainTextFormatter._singleton_printers_default is deprecated: use @default decorator instead.
  def _singleton_printers_default(self):

[ 2016-12-02 23:04:56 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:672: DeprecationWarning: PlainTextFormatter._type_printers_default is deprecated: use @default decorator instead.
  def _type_printers_default(self):

[ 2016-12-02 23:04:56 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:677: DeprecationWarning: PlainTextFormatter._deferred_printers_default is deprecated: use @default decorator instead.
  def _deferred_printers_default(self):

[ 2016-12-02 23:04:57 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code` FROM `user_per` LIMIT 21; args=()
[ 2016-12-02 23:05:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code` FROM `user_per` LIMIT 21; args=()
[ 2016-12-02 23:05:37 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code` FROM `per_code`; args=()
[ 2016-12-02 23:05:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code` FROM `user_per` WHERE `user_per`.`Per_code` IN ('1', '2') LIMIT 21; args=(u'1', u'2')
[ 2016-12-02 23:05:56 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code` FROM `user_per` WHERE `user_per`.`Per_code` IN ('1', '2') LIMIT 21; args=(u'1', u'2')
[ 2016-12-02 23:06:19 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `user_per` WHERE `user_per`.`Per_code` IN ('1', '2'); args=(u'1', u'2')
[ 2016-12-02 23:14:39 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code` FROM `user_per` WHERE `user_per`.`Per_user` LIKE '%chenyh%'  LIMIT 21; args=(u'%chenyh%',)
[ 2016-12-02 23:14:45 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code` FROM `user_per` WHERE `user_per`.`Per_user` LIKE '%chenyh%'  LIMIT 21; args=(u'%chenyh%',)
[ 2016-12-02 23:15:02 ] util.py[line:79] execute DEBUG (0.002) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code` FROM `user_per` WHERE `user_per`.`Per_user` LIKE '%chenyh%'  LIMIT 21; args=(u'%chenyh%',)
[ 2016-12-02 23:15:23 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code` FROM `user_per` WHERE `user_per`.`Per_user` LIKE '%chenyh%'  LIMIT 21; args=(u'%chenyh%',)
[ 2016-12-02 23:15:51 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code` FROM `user_per` WHERE `user_per`.`Per_user` LIKE '%chenyh%'  LIMIT 21; args=(u'%chenyh%',)
[ 2016-12-02 23:16:05 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code` FROM `user_per` WHERE `user_per`.`Per_user` LIKE '%chenyh%'  LIMIT 21; args=(u'%chenyh%',)
[ 2016-12-02 23:21:24 ] util.py[line:79] execute DEBUG (0.002) select a.Per_user,a.Per_code,b.Per_name  from user_per a,per_code b where a.Per_code = b.Per_code and Per_user = 'chenyh'; args=None
[ 2016-12-02 23:29:19 ] util.py[line:79] execute DEBUG (0.002) select a.Per_user,a.Per_code,b.Per_name  from user_per a,per_code b where a.Per_code = b.Per_code and Per_user = 'chenyh'; args=None
[ 2016-12-02 23:34:20 ] util.py[line:79] execute DEBUG (0.001) select a.Per_user,a.Per_code,b.Per_name  from user_per a,per_code b where a.Per_code = b.Per_code and Per_user = 'chenyh'; args=None
[ 2016-12-02 23:38:40 ] util.py[line:79] execute DEBUG (0.002) select a.Per_user,a.Per_code,b.Per_name  from user_per a,per_code b where a.Per_code = b.Per_code and Per_user = 'chenyh'; args=None
[ 2016-12-02 23:42:05 ] util.py[line:79] execute DEBUG (0.001) select a.Per_user,a.Per_code,b.Per_name  from user_per a,per_code b where a.Per_code = b.Per_code and Per_user = 'chenyh'; args=None
[ 2016-12-02 23:43:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 23:43:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 23:43:17 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = 'e10adc3949ba59abbe56e057f20f883e', `email` = 'fdgffdg@qq.com', `vaild` = 1, `isadmin` = 1, `logincount` = 65, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'e10adc3949ba59abbe56e057f20f883e', u'fdgffdg@qq.com', 1, 1, 65, u'2016-11-25 20:26:56', 8)
[ 2016-12-02 23:43:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-02 23:43:17 ] util.py[line:79] execute DEBUG (0.001) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = 'x2kcdulmza3cie9ivvfvfhoa31n1cndu'  LIMIT 1; args=(u'x2kcdulmza3cie9ivvfvfhoa31n1cndu',)
[ 2016-12-02 23:43:17 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-03 00:43:17' WHERE `django_session`.`session_key` = 'x2kcdulmza3cie9ivvfvfhoa31n1cndu' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-03 00:43:17', u'x2kcdulmza3cie9ivvfvfhoa31n1cndu')
[ 2016-12-02 23:43:17 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('x2kcdulmza3cie9ivvfvfhoa31n1cndu', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-03 00:43:17'); args=(u'x2kcdulmza3cie9ivvfvfhoa31n1cndu', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-03 00:43:17')
[ 2016-12-02 23:43:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'x2kcdulmza3cie9ivvfvfhoa31n1cndu'  AND `django_session`.`expire_date` > '2016-12-02 23:43:17' ); args=('x2kcdulmza3cie9ivvfvfhoa31n1cndu', u'2016-12-02 23:43:17')
[ 2016-12-02 23:43:23 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'x2kcdulmza3cie9ivvfvfhoa31n1cndu'  AND `django_session`.`expire_date` > '2016-12-02 23:43:23' ); args=('x2kcdulmza3cie9ivvfvfhoa31n1cndu', u'2016-12-02 23:43:23')
[ 2016-12-02 23:43:23 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-02 23:43:23 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-02 23:43:25 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'x2kcdulmza3cie9ivvfvfhoa31n1cndu'  AND `django_session`.`expire_date` > '2016-12-02 23:43:25' ); args=('x2kcdulmza3cie9ivvfvfhoa31n1cndu', u'2016-12-02 23:43:25')
[ 2016-12-02 23:43:25 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 21; args=()
[ 2016-12-02 23:43:25 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-02 23:43:25 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 10; args=()
[ 2016-12-02 23:49:02 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'x2kcdulmza3cie9ivvfvfhoa31n1cndu'  AND `django_session`.`expire_date` > '2016-12-02 23:49:02' ); args=('x2kcdulmza3cie9ivvfvfhoa31n1cndu', u'2016-12-02 23:49:02')
[ 2016-12-02 23:49:02 ] util.py[line:79] execute DEBUG (0.005) select * from admin; args=None
[ 2016-12-02 23:49:05 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'x2kcdulmza3cie9ivvfvfhoa31n1cndu'  AND `django_session`.`expire_date` > '2016-12-02 23:49:05' ); args=('x2kcdulmza3cie9ivvfvfhoa31n1cndu', u'2016-12-02 23:49:05')
[ 2016-12-02 23:49:05 ] util.py[line:79] execute DEBUG (0.006) select * from admin; args=None
[ 2016-12-02 23:49:06 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'x2kcdulmza3cie9ivvfvfhoa31n1cndu'  AND `django_session`.`expire_date` > '2016-12-02 23:49:06' ); args=('x2kcdulmza3cie9ivvfvfhoa31n1cndu', u'2016-12-02 23:49:06')
[ 2016-12-02 23:49:06 ] util.py[line:79] execute DEBUG (0.011) select * from admin; args=None
[ 2016-12-02 23:49:37 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'x2kcdulmza3cie9ivvfvfhoa31n1cndu'  AND `django_session`.`expire_date` > '2016-12-02 23:49:37' ); args=('x2kcdulmza3cie9ivvfvfhoa31n1cndu', u'2016-12-02 23:49:37')
[ 2016-12-02 23:49:37 ] util.py[line:79] execute DEBUG (0.005) select * from admin; args=None
[ 2016-12-02 23:50:56 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'x2kcdulmza3cie9ivvfvfhoa31n1cndu'  AND `django_session`.`expire_date` > '2016-12-02 23:50:56' ); args=('x2kcdulmza3cie9ivvfvfhoa31n1cndu', u'2016-12-02 23:50:56')
[ 2016-12-02 23:50:56 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-02 23:50:56 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 30; args=()
[ 2016-12-02 23:50:58 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'x2kcdulmza3cie9ivvfvfhoa31n1cndu'  AND `django_session`.`expire_date` > '2016-12-02 23:50:58' ); args=('x2kcdulmza3cie9ivvfvfhoa31n1cndu', u'2016-12-02 23:50:58')
[ 2016-12-02 23:50:58 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-02 23:50:58 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 10; args=()
[ 2016-12-02 23:50:59 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'x2kcdulmza3cie9ivvfvfhoa31n1cndu'  AND `django_session`.`expire_date` > '2016-12-02 23:50:59' ); args=('x2kcdulmza3cie9ivvfvfhoa31n1cndu', u'2016-12-02 23:50:59')
[ 2016-12-02 23:50:59 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-02 23:50:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 10:23:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 10:23:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 10:23:28 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = 'e10adc3949ba59abbe56e057f20f883e', `email` = '32415397@qq.com', `vaild` = 1, `isadmin` = 1, `logincount` = 66, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'e10adc3949ba59abbe56e057f20f883e', u'32415397@qq.com', 1, 1, 66, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 10:23:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 10:23:28 ] util.py[line:79] execute DEBUG (0.001) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  LIMIT 1; args=(u'vv46slj9x356izg8nzizpbty3vqvndfa',)
[ 2016-12-05 10:23:28 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-05 11:23:28' WHERE `django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-05 11:23:28', u'vv46slj9x356izg8nzizpbty3vqvndfa')
[ 2016-12-05 10:23:28 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('vv46slj9x356izg8nzizpbty3vqvndfa', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-05 11:23:28'); args=(u'vv46slj9x356izg8nzizpbty3vqvndfa', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-05 11:23:28')
[ 2016-12-05 10:23:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 10:23:28' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 10:23:28')
[ 2016-12-05 10:23:41 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 10:23:41' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 10:23:41')
[ 2016-12-05 10:23:41 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:23:46 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 10:23:46' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 10:23:46')
[ 2016-12-05 10:23:49 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 10:23:49' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 10:23:49')
[ 2016-12-05 10:23:53 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 10:23:53' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 10:23:53')
[ 2016-12-05 10:24:01 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 10:24:01' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 10:24:01')
[ 2016-12-05 10:24:01 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 10:24:01 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 10:25:17 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 10:25:17' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 10:25:17')
[ 2016-12-05 10:25:17 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 10:25:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 10:26:42 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 10:26:42' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 10:26:42')
[ 2016-12-05 10:26:42 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 10:26:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 10:26:52 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 10:26:52' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 10:26:52')
[ 2016-12-05 10:26:52 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 10:26:52 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 10:30:01 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 10:30:01' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 10:30:01')
[ 2016-12-05 10:30:01 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 10:30:01 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 10:32:00 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 10:32:00' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 10:32:00')
[ 2016-12-05 10:32:00 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 10:32:00 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 10:33:05 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 10:33:05' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 10:33:05')
[ 2016-12-05 10:33:05 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 10:33:05 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 10:33:08 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:33:13 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:33:25 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 10:33:25' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 10:33:25')
[ 2016-12-05 10:33:25 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 10:33:25 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 10:33:33 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:33:56 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 10:33:56' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 10:33:56')
[ 2016-12-05 10:33:56 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 10:33:56 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 10:34:01 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:36:10 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 10:36:10' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 10:36:10')
[ 2016-12-05 10:36:10 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 10:36:10 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 10:36:12 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:36:13 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:36:13 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:36:14 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:36:14 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:36:14 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:36:15 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:36:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:36:16 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:36:21 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 10:36:21' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 10:36:21')
[ 2016-12-05 10:36:21 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 10:36:21 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 10:36:30 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:36:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:36:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:36:33 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:36:57 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 10:36:57' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 10:36:57')
[ 2016-12-05 10:36:57 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 10:36:57 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 10:37:02 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:37:31 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 10:37:31' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 10:37:31')
[ 2016-12-05 10:37:31 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 10:37:31 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 10:37:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:38:05 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 10:38:05' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 10:38:05')
[ 2016-12-05 10:38:05 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 10:38:05 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 10:38:09 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:38:47 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 10:38:47' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 10:38:47')
[ 2016-12-05 10:38:47 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 10:38:47 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 10:38:49 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:38:51 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:38:51 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:38:52 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:38:52 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:38:53 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:38:53 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:38:53 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:38:53 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:38:53 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:40:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 10:40:11' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 10:40:11')
[ 2016-12-05 10:40:11 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 10:40:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 10:40:13 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:41:13 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:42:36 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:44:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 10:45:03 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 11:17:03 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 11:20:43 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 11:20:43' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 11:20:43')
[ 2016-12-05 11:20:43 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 11:20:43' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 11:20:43')
[ 2016-12-05 11:20:45 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 11:20:45' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 11:20:45')
[ 2016-12-05 11:20:45 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', `expire_date` = '2016-12-05 12:20:45' WHERE `django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa' ; args=(u'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', u'2016-12-05 12:20:45', 'vv46slj9x356izg8nzizpbty3vqvndfa')
[ 2016-12-05 11:20:45 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 11:20:45' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 11:20:45')
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.000) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.001) SHOW TABLES; args=None
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.022) CREATE TABLE `user_chpass` (
    `id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `username` varchar(50) NOT NULL,
    `uuid` varchar(32) NOT NULL
)
;; args=None
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.004) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'logentry'  AND `django_content_type`.`app_label` = 'admin' ); args=('logentry', u'admin')
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.003) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (1) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(1,)
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'admin'  ORDER BY `django_content_type`.`name` ASC; args=(u'admin',)
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'permission'  AND `django_content_type`.`app_label` = 'auth' ); args=('permission', u'auth')
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'group'  AND `django_content_type`.`app_label` = 'auth' ); args=('group', u'auth')
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user'  AND `django_content_type`.`app_label` = 'auth' ); args=('user', u'auth')
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (2, 3, 4) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(2, 3, 4)
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'auth'  ORDER BY `django_content_type`.`name` ASC; args=(u'auth',)
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.003) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'contenttype'  AND `django_content_type`.`app_label` = 'contenttypes' ); args=('contenttype', u'contenttypes')
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (5) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(5,)
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'contenttypes'  ORDER BY `django_content_type`.`name` ASC; args=(u'contenttypes',)
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'session'  AND `django_content_type`.`app_label` = 'sessions' ); args=('session', u'sessions')
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (6) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(6,)
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'sessions'  ORDER BY `django_content_type`.`name` ASC; args=(u'sessions',)
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'admin'  AND `django_content_type`.`app_label` = 'user' ); args=('admin', u'user')
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_per'  AND `django_content_type`.`app_label` = 'user' ); args=('user_per', u'user')
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'per_code'  AND `django_content_type`.`app_label` = 'user' ); args=('per_code', u'user')
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_chpass'  AND `django_content_type`.`app_label` = 'user' ); args=('user_chpass', u'user')
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `django_content_type` (`name`, `app_label`, `model`) VALUES ('重置密码表', 'user', 'user_chpass'); args=[u'\u91cd\u7f6e\u5bc6\u7801\u8868', u'user', 'user_chpass']
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (8, 12, 13, 14) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(8, 12, 13, 14)
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `auth_permission` (`name`, `content_type_id`, `codename`) VALUES ('Can add 重置密码表', 14, 'add_user_chpass'), ('Can change 重置密码表', 14, 'change_user_chpass'), ('Can delete 重置密码表', 14, 'delete_user_chpass'); args=(u'Can add \u91cd\u7f6e\u5bc6\u7801\u8868', 14, u'add_user_chpass', u'Can change \u91cd\u7f6e\u5bc6\u7801\u8868', 14, u'change_user_chpass', u'Can delete \u91cd\u7f6e\u5bc6\u7801\u8868', 14, u'delete_user_chpass')
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'user'  ORDER BY `django_content_type`.`name` ASC; args=(u'user',)
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'migrationhistory'  AND `django_content_type`.`app_label` = 'south' ); args=('migrationhistory', u'south')
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (9) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(9,)
[ 2016-12-05 11:39:23 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'south'  ORDER BY `django_content_type`.`name` ASC; args=(u'south',)
[ 2016-12-05 11:39:24 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-05 11:39:24 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.000) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.001) SHOW TABLES; args=None
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'logentry'  AND `django_content_type`.`app_label` = 'admin' ); args=('logentry', u'admin')
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (1) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(1,)
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'admin'  ORDER BY `django_content_type`.`name` ASC; args=(u'admin',)
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'permission'  AND `django_content_type`.`app_label` = 'auth' ); args=('permission', u'auth')
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'group'  AND `django_content_type`.`app_label` = 'auth' ); args=('group', u'auth')
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user'  AND `django_content_type`.`app_label` = 'auth' ); args=('user', u'auth')
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (2, 3, 4) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(2, 3, 4)
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'auth'  ORDER BY `django_content_type`.`name` ASC; args=(u'auth',)
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'contenttype'  AND `django_content_type`.`app_label` = 'contenttypes' ); args=('contenttype', u'contenttypes')
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (5) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(5,)
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'contenttypes'  ORDER BY `django_content_type`.`name` ASC; args=(u'contenttypes',)
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'session'  AND `django_content_type`.`app_label` = 'sessions' ); args=('session', u'sessions')
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (6) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(6,)
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'sessions'  ORDER BY `django_content_type`.`name` ASC; args=(u'sessions',)
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'admin'  AND `django_content_type`.`app_label` = 'user' ); args=('admin', u'user')
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_per'  AND `django_content_type`.`app_label` = 'user' ); args=('user_per', u'user')
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'per_code'  AND `django_content_type`.`app_label` = 'user' ); args=('per_code', u'user')
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_chpass'  AND `django_content_type`.`app_label` = 'user' ); args=('user_chpass', u'user')
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (8, 12, 13, 14) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(8, 12, 13, 14)
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'user'  ORDER BY `django_content_type`.`name` ASC; args=(u'user',)
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'migrationhistory'  AND `django_content_type`.`app_label` = 'south' ); args=('migrationhistory', u'south')
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (9) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(9,)
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'south'  ORDER BY `django_content_type`.`name` ASC; args=(u'south',)
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.001) SET foreign_key_checks=0; args=None
[ 2016-12-05 11:49:28 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-05 11:53:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 11:53:11' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 11:53:11')
[ 2016-12-05 11:53:15 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 11:53:15 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 11:53:15 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = 'e10adc3949ba59abbe56e057f20f883e', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 67, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'e10adc3949ba59abbe56e057f20f883e', u'chenyanghong@enjoyfin.com', 1, 1, 67, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 11:53:15 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 11:53:15 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 11:53:15' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 11:53:15')
[ 2016-12-05 11:53:15 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-05 12:53:15' WHERE `django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-05 12:53:15', 'vv46slj9x356izg8nzizpbty3vqvndfa')
[ 2016-12-05 11:53:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 11:53:15' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 11:53:15')
[ 2016-12-05 11:53:20 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 11:53:20' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 11:53:20')
[ 2016-12-05 11:53:20 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 11:53:20 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 11:53:21 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 11:53:21 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 11:53:48 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 11:53:54 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 11:54:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 11:54:38' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 11:54:38')
[ 2016-12-05 11:54:38 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 11:54:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 11:54:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 11:54:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 11:55:01 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 11:55:01' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 11:55:01')
[ 2016-12-05 11:55:01 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 11:55:01 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 11:55:04 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 11:55:07 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 11:55:31 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'vv46slj9x356izg8nzizpbty3vqvndfa'  AND `django_session`.`expire_date` > '2016-12-05 11:55:31' ); args=('vv46slj9x356izg8nzizpbty3vqvndfa', u'2016-12-05 11:55:31')
[ 2016-12-05 11:55:31 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 11:55:31 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 11:55:34 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 11:55:35 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 11:55:37 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_chpass` (`username`, `passuuid`) VALUES ('chenyh', '57ae9d7e74274bfc910ed6760977dd2c'); args=[u'chenyh', '57ae9d7e74274bfc910ed6760977dd2c']
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.001) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.001) SHOW TABLES; args=None
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'logentry'  AND `django_content_type`.`app_label` = 'admin' ); args=('logentry', u'admin')
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (1) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(1,)
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'admin'  ORDER BY `django_content_type`.`name` ASC; args=(u'admin',)
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'permission'  AND `django_content_type`.`app_label` = 'auth' ); args=('permission', u'auth')
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'group'  AND `django_content_type`.`app_label` = 'auth' ); args=('group', u'auth')
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user'  AND `django_content_type`.`app_label` = 'auth' ); args=('user', u'auth')
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (2, 3, 4) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(2, 3, 4)
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'auth'  ORDER BY `django_content_type`.`name` ASC; args=(u'auth',)
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'contenttype'  AND `django_content_type`.`app_label` = 'contenttypes' ); args=('contenttype', u'contenttypes')
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (5) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(5,)
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'contenttypes'  ORDER BY `django_content_type`.`name` ASC; args=(u'contenttypes',)
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'session'  AND `django_content_type`.`app_label` = 'sessions' ); args=('session', u'sessions')
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (6) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(6,)
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'sessions'  ORDER BY `django_content_type`.`name` ASC; args=(u'sessions',)
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'admin'  AND `django_content_type`.`app_label` = 'user' ); args=('admin', u'user')
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_per'  AND `django_content_type`.`app_label` = 'user' ); args=('user_per', u'user')
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'per_code'  AND `django_content_type`.`app_label` = 'user' ); args=('per_code', u'user')
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_chpass'  AND `django_content_type`.`app_label` = 'user' ); args=('user_chpass', u'user')
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (8, 12, 13, 14) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(8, 12, 13, 14)
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'user'  ORDER BY `django_content_type`.`name` ASC; args=(u'user',)
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'migrationhistory'  AND `django_content_type`.`app_label` = 'south' ); args=('migrationhistory', u'south')
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (9) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(9,)
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.002) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'south'  ORDER BY `django_content_type`.`name` ASC; args=(u'south',)
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.001) SET foreign_key_checks=0; args=None
[ 2016-12-05 13:47:44 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.001) SHOW TABLES; args=None
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'logentry'  AND `django_content_type`.`app_label` = 'admin' ); args=('logentry', u'admin')
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (1) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(1,)
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'admin'  ORDER BY `django_content_type`.`name` ASC; args=(u'admin',)
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'permission'  AND `django_content_type`.`app_label` = 'auth' ); args=('permission', u'auth')
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'group'  AND `django_content_type`.`app_label` = 'auth' ); args=('group', u'auth')
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user'  AND `django_content_type`.`app_label` = 'auth' ); args=('user', u'auth')
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (2, 3, 4) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(2, 3, 4)
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'auth'  ORDER BY `django_content_type`.`name` ASC; args=(u'auth',)
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'contenttype'  AND `django_content_type`.`app_label` = 'contenttypes' ); args=('contenttype', u'contenttypes')
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (5) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(5,)
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'contenttypes'  ORDER BY `django_content_type`.`name` ASC; args=(u'contenttypes',)
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'session'  AND `django_content_type`.`app_label` = 'sessions' ); args=('session', u'sessions')
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (6) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(6,)
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'sessions'  ORDER BY `django_content_type`.`name` ASC; args=(u'sessions',)
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'admin'  AND `django_content_type`.`app_label` = 'user' ); args=('admin', u'user')
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_per'  AND `django_content_type`.`app_label` = 'user' ); args=('user_per', u'user')
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'per_code'  AND `django_content_type`.`app_label` = 'user' ); args=('per_code', u'user')
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_chpass'  AND `django_content_type`.`app_label` = 'user' ); args=('user_chpass', u'user')
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (8, 12, 13, 14) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(8, 12, 13, 14)
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'user'  ORDER BY `django_content_type`.`name` ASC; args=(u'user',)
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'migrationhistory'  AND `django_content_type`.`app_label` = 'south' ); args=('migrationhistory', u'south')
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (9) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(9,)
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'south'  ORDER BY `django_content_type`.`name` ASC; args=(u'south',)
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-05 13:48:38 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-05 13:50:30 ] util.py[line:79] execute DEBUG (0.008) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-05 13:50:30 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE (`south_migrationhistory`.`app_name` = 'user'  AND `south_migrationhistory`.`migration` = '0001_initial' ); args=('user', '0001_initial')
[ 2016-12-05 13:50:30 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `south_migrationhistory` (`app_name`, `migration`, `applied`) VALUES ('user', '0001_initial', '2016-12-05 13:50:30'); args=['user', '0001_initial', u'2016-12-05 13:50:30']
[ 2016-12-05 13:51:13 ] util.py[line:79] execute DEBUG (0.001) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-05 13:51:13 ] util.py[line:79] execute DEBUG (0.001) SET foreign_key_checks=0; args=None
[ 2016-12-05 13:51:13 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-05 13:56:29 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 13:56:29 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 13:56:29 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = 'e10adc3949ba59abbe56e057f20f883e', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 68, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'e10adc3949ba59abbe56e057f20f883e', u'chenyanghong@enjoyfin.com', 1, 1, 68, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 13:56:29 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 13:56:29 ] util.py[line:79] execute DEBUG (0.001) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = '3qwoceqf133kkz1r4xh0y58qstnfcsdp'  LIMIT 1; args=(u'3qwoceqf133kkz1r4xh0y58qstnfcsdp',)
[ 2016-12-05 13:56:29 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-05 14:56:29' WHERE `django_session`.`session_key` = '3qwoceqf133kkz1r4xh0y58qstnfcsdp' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-05 14:56:29', u'3qwoceqf133kkz1r4xh0y58qstnfcsdp')
[ 2016-12-05 13:56:29 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('3qwoceqf133kkz1r4xh0y58qstnfcsdp', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-05 14:56:29'); args=(u'3qwoceqf133kkz1r4xh0y58qstnfcsdp', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-05 14:56:29')
[ 2016-12-05 13:56:29 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '3qwoceqf133kkz1r4xh0y58qstnfcsdp'  AND `django_session`.`expire_date` > '2016-12-05 13:56:29' ); args=('3qwoceqf133kkz1r4xh0y58qstnfcsdp', u'2016-12-05 13:56:29')
[ 2016-12-05 13:57:09 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '3qwoceqf133kkz1r4xh0y58qstnfcsdp'  AND `django_session`.`expire_date` > '2016-12-05 13:57:09' ); args=('3qwoceqf133kkz1r4xh0y58qstnfcsdp', u'2016-12-05 13:57:09')
[ 2016-12-05 14:00:58 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-05 14:00:58 ] util.py[line:79] execute DEBUG (0.001) SET foreign_key_checks=0; args=None
[ 2016-12-05 14:00:58 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-05 14:02:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-05 14:02:37 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-05 14:02:37 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-05 14:03:16 ] util.py[line:79] execute DEBUG (0.001) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-05 14:03:16 ] util.py[line:79] execute DEBUG (0.001) SHOW TABLES; args=None
[ 2016-12-05 14:03:16 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'logentry'  AND `django_content_type`.`app_label` = 'admin' ); args=('logentry', u'admin')
[ 2016-12-05 14:03:16 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (1) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(1,)
[ 2016-12-05 14:03:16 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'admin'  ORDER BY `django_content_type`.`name` ASC; args=(u'admin',)
[ 2016-12-05 14:03:16 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'permission'  AND `django_content_type`.`app_label` = 'auth' ); args=('permission', u'auth')
[ 2016-12-05 14:03:16 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'group'  AND `django_content_type`.`app_label` = 'auth' ); args=('group', u'auth')
[ 2016-12-05 14:03:16 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user'  AND `django_content_type`.`app_label` = 'auth' ); args=('user', u'auth')
[ 2016-12-05 14:03:16 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (2, 3, 4) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(2, 3, 4)
[ 2016-12-05 14:03:16 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'auth'  ORDER BY `django_content_type`.`name` ASC; args=(u'auth',)
[ 2016-12-05 14:03:16 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'contenttype'  AND `django_content_type`.`app_label` = 'contenttypes' ); args=('contenttype', u'contenttypes')
[ 2016-12-05 14:03:16 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (5) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(5,)
[ 2016-12-05 14:03:16 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'contenttypes'  ORDER BY `django_content_type`.`name` ASC; args=(u'contenttypes',)
[ 2016-12-05 14:03:16 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'session'  AND `django_content_type`.`app_label` = 'sessions' ); args=('session', u'sessions')
[ 2016-12-05 14:03:16 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (6) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(6,)
[ 2016-12-05 14:03:16 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'sessions'  ORDER BY `django_content_type`.`name` ASC; args=(u'sessions',)
[ 2016-12-05 14:03:16 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'migrationhistory'  AND `django_content_type`.`app_label` = 'south' ); args=('migrationhistory', u'south')
[ 2016-12-05 14:03:16 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (9) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(9,)
[ 2016-12-05 14:03:16 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'south'  ORDER BY `django_content_type`.`name` ASC; args=(u'south',)
[ 2016-12-05 14:03:16 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-05 14:03:16 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-05 14:03:20 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-05 14:03:20 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-05 14:03:20 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-05 14:04:54 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-05 14:04:54 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-05 14:04:54 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-05 14:05:08 ] util.py[line:79] execute DEBUG (0.001) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-05 14:05:08 ] util.py[line:79] execute DEBUG (0.001) SHOW TABLES; args=None
[ 2016-12-05 14:05:08 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'logentry'  AND `django_content_type`.`app_label` = 'admin' ); args=('logentry', u'admin')
[ 2016-12-05 14:05:08 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (1) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(1,)
[ 2016-12-05 14:05:08 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'admin'  ORDER BY `django_content_type`.`name` ASC; args=(u'admin',)
[ 2016-12-05 14:05:08 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'permission'  AND `django_content_type`.`app_label` = 'auth' ); args=('permission', u'auth')
[ 2016-12-05 14:05:08 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'group'  AND `django_content_type`.`app_label` = 'auth' ); args=('group', u'auth')
[ 2016-12-05 14:05:08 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user'  AND `django_content_type`.`app_label` = 'auth' ); args=('user', u'auth')
[ 2016-12-05 14:05:08 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (2, 3, 4) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(2, 3, 4)
[ 2016-12-05 14:05:08 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'auth'  ORDER BY `django_content_type`.`name` ASC; args=(u'auth',)
[ 2016-12-05 14:05:08 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'contenttype'  AND `django_content_type`.`app_label` = 'contenttypes' ); args=('contenttype', u'contenttypes')
[ 2016-12-05 14:05:08 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (5) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(5,)
[ 2016-12-05 14:05:08 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'contenttypes'  ORDER BY `django_content_type`.`name` ASC; args=(u'contenttypes',)
[ 2016-12-05 14:05:08 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'session'  AND `django_content_type`.`app_label` = 'sessions' ); args=('session', u'sessions')
[ 2016-12-05 14:05:08 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (6) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(6,)
[ 2016-12-05 14:05:08 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'sessions'  ORDER BY `django_content_type`.`name` ASC; args=(u'sessions',)
[ 2016-12-05 14:05:08 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'migrationhistory'  AND `django_content_type`.`app_label` = 'south' ); args=('migrationhistory', u'south')
[ 2016-12-05 14:05:08 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (9) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(9,)
[ 2016-12-05 14:05:08 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'south'  ORDER BY `django_content_type`.`name` ASC; args=(u'south',)
[ 2016-12-05 14:05:08 ] util.py[line:79] execute DEBUG (0.001) SET foreign_key_checks=0; args=None
[ 2016-12-05 14:05:08 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-05 14:05:14 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-05 14:05:14 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-05 14:05:14 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-05 14:05:45 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-05 14:05:45 ] util.py[line:79] execute DEBUG (0.001) SET foreign_key_checks=0; args=None
[ 2016-12-05 14:05:45 ] util.py[line:79] execute DEBUG (0.001) SET foreign_key_checks=1; args=None
[ 2016-12-05 14:07:17 ] util.py[line:79] execute DEBUG (0.000) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-05 14:07:17 ] util.py[line:79] execute DEBUG (0.000) SHOW TABLES; args=None
[ 2016-12-05 14:07:17 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'logentry'  AND `django_content_type`.`app_label` = 'admin' ); args=('logentry', u'admin')
[ 2016-12-05 14:07:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (1) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(1,)
[ 2016-12-05 14:07:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'admin'  ORDER BY `django_content_type`.`name` ASC; args=(u'admin',)
[ 2016-12-05 14:07:17 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'permission'  AND `django_content_type`.`app_label` = 'auth' ); args=('permission', u'auth')
[ 2016-12-05 14:07:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'group'  AND `django_content_type`.`app_label` = 'auth' ); args=('group', u'auth')
[ 2016-12-05 14:07:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user'  AND `django_content_type`.`app_label` = 'auth' ); args=('user', u'auth')
[ 2016-12-05 14:07:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (2, 3, 4) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(2, 3, 4)
[ 2016-12-05 14:07:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'auth'  ORDER BY `django_content_type`.`name` ASC; args=(u'auth',)
[ 2016-12-05 14:07:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'contenttype'  AND `django_content_type`.`app_label` = 'contenttypes' ); args=('contenttype', u'contenttypes')
[ 2016-12-05 14:07:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (5) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(5,)
[ 2016-12-05 14:07:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'contenttypes'  ORDER BY `django_content_type`.`name` ASC; args=(u'contenttypes',)
[ 2016-12-05 14:07:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'session'  AND `django_content_type`.`app_label` = 'sessions' ); args=('session', u'sessions')
[ 2016-12-05 14:07:17 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (6) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(6,)
[ 2016-12-05 14:07:17 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'sessions'  ORDER BY `django_content_type`.`name` ASC; args=(u'sessions',)
[ 2016-12-05 14:07:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'migrationhistory'  AND `django_content_type`.`app_label` = 'south' ); args=('migrationhistory', u'south')
[ 2016-12-05 14:07:17 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (9) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(9,)
[ 2016-12-05 14:07:17 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'south'  ORDER BY `django_content_type`.`name` ASC; args=(u'south',)
[ 2016-12-05 14:07:17 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-05 14:07:17 ] util.py[line:79] execute DEBUG (0.001) SET foreign_key_checks=1; args=None
[ 2016-12-05 14:08:22 ] util.py[line:79] execute DEBUG (0.001) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-05 14:08:22 ] util.py[line:79] execute DEBUG (0.000) SHOW TABLES; args=None
[ 2016-12-05 14:08:22 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'logentry'  AND `django_content_type`.`app_label` = 'admin' ); args=('logentry', u'admin')
[ 2016-12-05 14:08:22 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (1) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(1,)
[ 2016-12-05 14:08:22 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'admin'  ORDER BY `django_content_type`.`name` ASC; args=(u'admin',)
[ 2016-12-05 14:08:22 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'permission'  AND `django_content_type`.`app_label` = 'auth' ); args=('permission', u'auth')
[ 2016-12-05 14:08:22 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'group'  AND `django_content_type`.`app_label` = 'auth' ); args=('group', u'auth')
[ 2016-12-05 14:08:22 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user'  AND `django_content_type`.`app_label` = 'auth' ); args=('user', u'auth')
[ 2016-12-05 14:08:22 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (2, 3, 4) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(2, 3, 4)
[ 2016-12-05 14:08:22 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'auth'  ORDER BY `django_content_type`.`name` ASC; args=(u'auth',)
[ 2016-12-05 14:08:22 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'contenttype'  AND `django_content_type`.`app_label` = 'contenttypes' ); args=('contenttype', u'contenttypes')
[ 2016-12-05 14:08:22 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (5) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(5,)
[ 2016-12-05 14:08:22 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'contenttypes'  ORDER BY `django_content_type`.`name` ASC; args=(u'contenttypes',)
[ 2016-12-05 14:08:22 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'session'  AND `django_content_type`.`app_label` = 'sessions' ); args=('session', u'sessions')
[ 2016-12-05 14:08:22 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (6) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(6,)
[ 2016-12-05 14:08:22 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'sessions'  ORDER BY `django_content_type`.`name` ASC; args=(u'sessions',)
[ 2016-12-05 14:08:22 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'migrationhistory'  AND `django_content_type`.`app_label` = 'south' ); args=('migrationhistory', u'south')
[ 2016-12-05 14:08:22 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (9) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(9,)
[ 2016-12-05 14:08:22 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'south'  ORDER BY `django_content_type`.`name` ASC; args=(u'south',)
[ 2016-12-05 14:08:22 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-05 14:08:22 ] util.py[line:79] execute DEBUG (0.001) SET foreign_key_checks=1; args=None
[ 2016-12-05 14:09:15 ] util.py[line:79] execute DEBUG (0.000) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-05 14:09:15 ] util.py[line:79] execute DEBUG (0.000) SHOW TABLES; args=None
[ 2016-12-05 14:09:15 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'logentry'  AND `django_content_type`.`app_label` = 'admin' ); args=('logentry', u'admin')
[ 2016-12-05 14:09:15 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (1) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(1,)
[ 2016-12-05 14:09:15 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'admin'  ORDER BY `django_content_type`.`name` ASC; args=(u'admin',)
[ 2016-12-05 14:09:15 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'permission'  AND `django_content_type`.`app_label` = 'auth' ); args=('permission', u'auth')
[ 2016-12-05 14:09:15 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'group'  AND `django_content_type`.`app_label` = 'auth' ); args=('group', u'auth')
[ 2016-12-05 14:09:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user'  AND `django_content_type`.`app_label` = 'auth' ); args=('user', u'auth')
[ 2016-12-05 14:09:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (2, 3, 4) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(2, 3, 4)
[ 2016-12-05 14:09:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'auth'  ORDER BY `django_content_type`.`name` ASC; args=(u'auth',)
[ 2016-12-05 14:09:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'contenttype'  AND `django_content_type`.`app_label` = 'contenttypes' ); args=('contenttype', u'contenttypes')
[ 2016-12-05 14:09:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (5) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(5,)
[ 2016-12-05 14:09:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'contenttypes'  ORDER BY `django_content_type`.`name` ASC; args=(u'contenttypes',)
[ 2016-12-05 14:09:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'session'  AND `django_content_type`.`app_label` = 'sessions' ); args=('session', u'sessions')
[ 2016-12-05 14:09:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (6) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(6,)
[ 2016-12-05 14:09:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'sessions'  ORDER BY `django_content_type`.`name` ASC; args=(u'sessions',)
[ 2016-12-05 14:09:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'migrationhistory'  AND `django_content_type`.`app_label` = 'south' ); args=('migrationhistory', u'south')
[ 2016-12-05 14:09:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (9) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(9,)
[ 2016-12-05 14:09:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'south'  ORDER BY `django_content_type`.`name` ASC; args=(u'south',)
[ 2016-12-05 14:09:15 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-05 14:09:15 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.001) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.001) SHOW TABLES; args=None
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.028) CREATE TABLE `user_chpass` (
    `id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `username` varchar(50) NOT NULL,
    `passuuid` varchar(32) NOT NULL,
    `ctime` time NOT NULL
)
;; args=None
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'logentry'  AND `django_content_type`.`app_label` = 'admin' ); args=('logentry', u'admin')
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (1) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(1,)
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'admin'  ORDER BY `django_content_type`.`name` ASC; args=(u'admin',)
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'permission'  AND `django_content_type`.`app_label` = 'auth' ); args=('permission', u'auth')
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'group'  AND `django_content_type`.`app_label` = 'auth' ); args=('group', u'auth')
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user'  AND `django_content_type`.`app_label` = 'auth' ); args=('user', u'auth')
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (2, 3, 4) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(2, 3, 4)
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'auth'  ORDER BY `django_content_type`.`name` ASC; args=(u'auth',)
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'contenttype'  AND `django_content_type`.`app_label` = 'contenttypes' ); args=('contenttype', u'contenttypes')
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (5) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(5,)
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'contenttypes'  ORDER BY `django_content_type`.`name` ASC; args=(u'contenttypes',)
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'session'  AND `django_content_type`.`app_label` = 'sessions' ); args=('session', u'sessions')
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (6) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(6,)
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'sessions'  ORDER BY `django_content_type`.`name` ASC; args=(u'sessions',)
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'admin'  AND `django_content_type`.`app_label` = 'user' ); args=('admin', u'user')
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_per'  AND `django_content_type`.`app_label` = 'user' ); args=('user_per', u'user')
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'per_code'  AND `django_content_type`.`app_label` = 'user' ); args=('per_code', u'user')
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_chpass'  AND `django_content_type`.`app_label` = 'user' ); args=('user_chpass', u'user')
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (8, 12, 13, 14) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(8, 12, 13, 14)
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'user'  ORDER BY `django_content_type`.`name` ASC; args=(u'user',)
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'migrationhistory'  AND `django_content_type`.`app_label` = 'south' ); args=('migrationhistory', u'south')
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (9) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(9,)
[ 2016-12-05 14:11:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'south'  ORDER BY `django_content_type`.`name` ASC; args=(u'south',)
[ 2016-12-05 14:11:19 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-05 14:11:19 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:52: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  `profile` option.""",

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:118: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:128: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The IPython profile to use."""

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:142: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Whether to overwrite existing config files when copying""")

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:162: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Whether to create profile dir if it doesn't exist""")

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:173: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:178: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  usual traceback""")

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magic.py:307: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  "Automatically call line magics without requiring explicit % prefix")

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:132: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  multi_line_specials = CBool(True, config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:362: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:367: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:392: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:395: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:414: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:415: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(False, config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:427: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(250, config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:439: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(300, config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:453: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(600, config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:471: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(700, config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:495: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(900, config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:510: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(1000, config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:513: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="RegExp to identify potential function names.")

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:515: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="RegExp to exclude strings with this start from autocalling.")

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\alias.py:195: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_aliases = List(default_aliases(), config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\alias.py:196: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  user_aliases = List(default_value=[], config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:61: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  plain_text_only = Bool(False, config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:313: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:319: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  singleton_printers = Dict(config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:323: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  type_printers = Dict(config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:327: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  deferred_printers = Dict(config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:594: DeprecationWarning: metadata {'config': False} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=False)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:600: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:607: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  pprint = Bool(True, config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:610: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  verbose = Bool(False, config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:613: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  max_width = Integer(79, config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:616: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  newline = Unicode('\n', config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:621: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  float_precision = CUnicode('', config=True)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:143: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:152: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:475: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Should the history database include output? (default: no)"

[ 2016-12-05 14:19:07 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:478: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Write to database every x commands (higher values save disk access & power).\n"

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:259: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  color_scheme = Unicode('Linux', config=True)

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:275: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Input prompt.  '\\#' will be transformed to the prompt number")

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:277: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Continuation prompt.")

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:279: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Output prompt. '\\#' will be transformed to the prompt number")

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:284: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:179: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:190: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:197: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:202: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:206: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The part of the banner to be printed before the profile"""

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:209: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The part of the banner to be printed after the profile"""

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:220: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:227: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:231: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Set the color scheme (NoColor, Linux, or LightBG)."

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:242: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  debug = CBool(False, config=True)

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:256: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:259: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Don't call post-execute functions that have failed in the past."

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:273: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  ipython_dir= Unicode('', config=True) # Set to get_ipython_dir() in __init__

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:289: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:294: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:300: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:303: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  config=True)

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:307: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:310: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Save multi-line entries as one entry in readline history"

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:314: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  will be displayed as regular output instead."""

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:320: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.in_template")

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:322: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.in2_template")

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:324: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.out_template")

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:326: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.justify")

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:349: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Show rewritten input, e.g. for autocall."

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:352: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  quiet = CBool(False, config=True)

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:354: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  history_length = Integer(10000, config=True)

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:360: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:365: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  readline_use = CBool(True, config=True)

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:366: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  readline_remove_delims = Unicode('-/~', config=True)

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:383: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  ], config=True)

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:396: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  run interactively (displaying output from expressions).""")

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:400: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_in = SeparateUnicode('\n', config=True)

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:401: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_out = SeparateUnicode('', config=True)

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:402: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_out2 = SeparateUnicode('', config=True)

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:403: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  wildcards_case_sensitive = CBool(True, config=True)

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:405: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_value='Context', config=True)

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:290: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="auto editing of files with syntax errors.")

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:295: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  you can force a direct exit without any confirmation.""",

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:305: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Set the editor used by IPython (default to $EDITOR/vi/notepad)."

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:308: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="The shell program to be used for paging.")

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:320: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default.""",

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:323: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Enable auto setting the terminal title."

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:276: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:556: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:568: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:578: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:89: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """,

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:116: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:139: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="A list of dotted module names of IPython extensions to load."

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:142: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="dotted module name of an IPython extension to load."

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:148: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Reraise exceptions encountered loading IPython extensions?",

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:152: DeprecationWarning: metadata {'config': False} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_extensions = List(Unicode(), [u'storemagic'], config=False)

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:156: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  be hidden from tools like %who?"""

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""List of files to run at IPython startup."""

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:164: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  variable at IPython startup."""

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:167: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""A file to be run""")

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:170: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""lines of code to run at IPython startup."""

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:173: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Execute the given command string."

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:176: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Run the module as a script."

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:179: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Enable GUI event loop integration with any of {0}.".format(gui_keys)

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:184: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  the default matplotlib backend."""

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:190: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:197: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\extensions\storemagic.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:245: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Start IPython quickly by skipping the loading of config files."""

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:252: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Whether to display a banner upon starting IPython."

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:260: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  file or command."""

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:186: DeprecationWarning: TerminalIPythonApp._classes_default is deprecated: use @default decorator instead.
  def _classes_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:99: DeprecationWarning: BaseIPythonApplication._config_file_name_default is deprecated: use @default decorator instead.
  def _config_file_name_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:111: DeprecationWarning: BaseIPythonApplication._config_file_paths_default is deprecated: use @default decorator instead.
  def _config_file_paths_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:165: DeprecationWarning: BaseIPythonApplication._config_files_default is deprecated: use @default decorator instead.
  def _config_files_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:144: DeprecationWarning: BaseIPythonApplication._ipython_dir_default is deprecated: use @default decorator instead.
  def _ipython_dir_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:151: DeprecationWarning: BaseIPythonApplication._profile_dir_default is deprecated: use @default decorator instead.
  def _profile_dir_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:186: DeprecationWarning: TerminalIPythonApp._classes_default is deprecated: use @default decorator instead.
  def _classes_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:151: DeprecationWarning: BaseIPythonApplication._profile_dir_default is deprecated: use @default decorator instead.
  def _profile_dir_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:144: DeprecationWarning: BaseIPythonApplication._ipython_dir_default is deprecated: use @default decorator instead.
  def _ipython_dir_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:57: DeprecationWarning: ProfileDir._location_changed is deprecated: use @observe and @unobserve instead.
  def _location_changed(self, name, old, new):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:126: DeprecationWarning: ProfileDir._security_dir_changed is deprecated: use @observe and @unobserve instead.
  def _security_dir_changed(self, name, old, new):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:71: DeprecationWarning: ProfileDir._log_dir_changed is deprecated: use @observe and @unobserve instead.
  def _log_dir_changed(self, name, old, new):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:111: DeprecationWarning: ProfileDir._startup_dir_changed is deprecated: use @observe and @unobserve instead.
  def _startup_dir_changed(self, name, old, new):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:132: DeprecationWarning: ProfileDir._pid_dir_changed is deprecated: use @observe and @unobserve instead.
  def _pid_dir_changed(self, name, old, new):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:138: DeprecationWarning: ProfileDir._static_dir_changed is deprecated: use @observe and @unobserve instead.
  def _static_dir_changed(self, name, old, new):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:111: DeprecationWarning: BaseIPythonApplication._config_file_paths_default is deprecated: use @default decorator instead.
  def _config_file_paths_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:165: DeprecationWarning: BaseIPythonApplication._config_files_default is deprecated: use @default decorator instead.
  def _config_files_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:99: DeprecationWarning: BaseIPythonApplication._config_file_name_default is deprecated: use @default decorator instead.
  def _config_file_name_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:268: DeprecationWarning: InteractiveShell._exiter_default is deprecated: use @default decorator instead.
  def _exiter_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:525: DeprecationWarning: TerminalInteractiveShell._ipython_dir_changed is deprecated: use @observe and @unobserve instead.
  def _ipython_dir_changed(self, name, new):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:459: DeprecationWarning: HistoryManager._dir_hist_default is deprecated: use @default decorator instead.
  def _dir_hist_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:165: DeprecationWarning: HistoryManager._db_changed is deprecated: use @observe and @unobserve instead.
  def _db_changed(self, name, old, new):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:459: DeprecationWarning: HistoryManager._dir_hist_default is deprecated: use @default decorator instead.
  def _dir_hist_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:268: DeprecationWarning: InteractiveShell._exiter_default is deprecated: use @default decorator instead.
  def _exiter_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:296: DeprecationWarning: PromptManager._invisible_chars_default is deprecated: use @default decorator instead.
  def _invisible_chars_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:272: DeprecationWarning: PromptManager._lazy_evaluate_fields_default is deprecated: use @default decorator instead.
  def _lazy_evaluate_fields_default(self): return lazily_evaluate.copy()

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:272: DeprecationWarning: PromptManager._lazy_evaluate_fields_default is deprecated: use @default decorator instead.
  def _lazy_evaluate_fields_default(self): return lazily_evaluate.copy()

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:296: DeprecationWarning: PromptManager._invisible_chars_default is deprecated: use @default decorator instead.
  def _invisible_chars_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:1180] on_trait_change WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:313: DeprecationWarning: on_trait_change is deprecated: use observe instead
  'in2_template', 'out_template'])

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:81: DeprecationWarning: DisplayFormatter._active_types_default is deprecated: use @default decorator instead.
  def _active_types_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:98: DeprecationWarning: DisplayFormatter._formatters_default is deprecated: use @default decorator instead.
  def _formatters_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:92: DeprecationWarning: DisplayFormatter._ipython_display_formatter_default is deprecated: use @default decorator instead.
  def _ipython_display_formatter_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:84: DeprecationWarning: DisplayFormatter._active_types_changed is deprecated: use @observe and @unobserve instead.
  def _active_types_changed(self, name, old, new):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:98: DeprecationWarning: DisplayFormatter._formatters_default is deprecated: use @default decorator instead.
  def _formatters_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:677: DeprecationWarning: PlainTextFormatter._deferred_printers_default is deprecated: use @default decorator instead.
  def _deferred_printers_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:669: DeprecationWarning: PlainTextFormatter._singleton_printers_default is deprecated: use @default decorator instead.
  def _singleton_printers_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:672: DeprecationWarning: PlainTextFormatter._type_printers_default is deprecated: use @default decorator instead.
  def _type_printers_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:91: DeprecationWarning: ScriptMagics._script_magics_default is deprecated: use @default decorator instead.
  def _script_magics_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:91: DeprecationWarning: ScriptMagics._script_magics_default is deprecated: use @default decorator instead.
  def _script_magics_default(self):

[ 2016-12-05 14:19:08 ] traitlets.py[line:1180] on_trait_change WARNING E:\Python27\lib\site-packages\IPython\core\extensions.py:58: DeprecationWarning: on_trait_change is deprecated: use observe instead
  self._on_ipython_dir_changed, 'ipython_dir'

[ 2016-12-05 14:19:08 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\extensions\storemagic.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.000) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.000) SHOW TABLES; args=None
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'logentry'  AND `django_content_type`.`app_label` = 'admin' ); args=('logentry', u'admin')
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (1) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(1,)
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'admin'  ORDER BY `django_content_type`.`name` ASC; args=(u'admin',)
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'permission'  AND `django_content_type`.`app_label` = 'auth' ); args=('permission', u'auth')
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'group'  AND `django_content_type`.`app_label` = 'auth' ); args=('group', u'auth')
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user'  AND `django_content_type`.`app_label` = 'auth' ); args=('user', u'auth')
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (2, 3, 4) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(2, 3, 4)
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'auth'  ORDER BY `django_content_type`.`name` ASC; args=(u'auth',)
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'contenttype'  AND `django_content_type`.`app_label` = 'contenttypes' ); args=('contenttype', u'contenttypes')
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (5) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(5,)
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'contenttypes'  ORDER BY `django_content_type`.`name` ASC; args=(u'contenttypes',)
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'session'  AND `django_content_type`.`app_label` = 'sessions' ); args=('session', u'sessions')
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (6) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(6,)
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'sessions'  ORDER BY `django_content_type`.`name` ASC; args=(u'sessions',)
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'admin'  AND `django_content_type`.`app_label` = 'user' ); args=('admin', u'user')
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_per'  AND `django_content_type`.`app_label` = 'user' ); args=('user_per', u'user')
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'per_code'  AND `django_content_type`.`app_label` = 'user' ); args=('per_code', u'user')
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_chpass'  AND `django_content_type`.`app_label` = 'user' ); args=('user_chpass', u'user')
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (8, 12, 13, 14) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(8, 12, 13, 14)
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'user'  ORDER BY `django_content_type`.`name` ASC; args=(u'user',)
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'migrationhistory'  AND `django_content_type`.`app_label` = 'south' ); args=('migrationhistory', u'south')
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (9) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(9,)
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'south'  ORDER BY `django_content_type`.`name` ASC; args=(u'south',)
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-05 14:21:32 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.001) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.001) SHOW TABLES; args=None
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.034) CREATE TABLE `user_chpass` (
    `id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `username` varchar(50) NOT NULL,
    `passuuid` varchar(32) NOT NULL,
    `ctime` datetime NOT NULL
)
;; args=None
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'logentry'  AND `django_content_type`.`app_label` = 'admin' ); args=('logentry', u'admin')
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (1) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(1,)
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'admin'  ORDER BY `django_content_type`.`name` ASC; args=(u'admin',)
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'permission'  AND `django_content_type`.`app_label` = 'auth' ); args=('permission', u'auth')
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'group'  AND `django_content_type`.`app_label` = 'auth' ); args=('group', u'auth')
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user'  AND `django_content_type`.`app_label` = 'auth' ); args=('user', u'auth')
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (2, 3, 4) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(2, 3, 4)
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'auth'  ORDER BY `django_content_type`.`name` ASC; args=(u'auth',)
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'contenttype'  AND `django_content_type`.`app_label` = 'contenttypes' ); args=('contenttype', u'contenttypes')
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (5) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(5,)
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'contenttypes'  ORDER BY `django_content_type`.`name` ASC; args=(u'contenttypes',)
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'session'  AND `django_content_type`.`app_label` = 'sessions' ); args=('session', u'sessions')
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (6) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(6,)
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'sessions'  ORDER BY `django_content_type`.`name` ASC; args=(u'sessions',)
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'admin'  AND `django_content_type`.`app_label` = 'user' ); args=('admin', u'user')
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_per'  AND `django_content_type`.`app_label` = 'user' ); args=('user_per', u'user')
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'per_code'  AND `django_content_type`.`app_label` = 'user' ); args=('per_code', u'user')
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_chpass'  AND `django_content_type`.`app_label` = 'user' ); args=('user_chpass', u'user')
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (8, 12, 13, 14) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(8, 12, 13, 14)
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'user'  ORDER BY `django_content_type`.`name` ASC; args=(u'user',)
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'migrationhistory'  AND `django_content_type`.`app_label` = 'south' ); args=('migrationhistory', u'south')
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (9) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(9,)
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'south'  ORDER BY `django_content_type`.`name` ASC; args=(u'south',)
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-05 14:22:02 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:52: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  `profile` option.""",

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:118: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:128: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The IPython profile to use."""

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:142: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Whether to overwrite existing config files when copying""")

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:162: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Whether to create profile dir if it doesn't exist""")

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:173: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:178: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  usual traceback""")

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magic.py:307: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  "Automatically call line magics without requiring explicit % prefix")

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:132: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  multi_line_specials = CBool(True, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:362: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:367: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:392: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:395: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:414: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:415: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(False, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:427: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(250, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:439: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(300, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:453: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(600, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:471: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(700, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:495: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(900, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:510: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(1000, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:513: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="RegExp to identify potential function names.")

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:515: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="RegExp to exclude strings with this start from autocalling.")

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\alias.py:195: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_aliases = List(default_aliases(), config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\alias.py:196: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  user_aliases = List(default_value=[], config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:61: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  plain_text_only = Bool(False, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:313: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:319: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  singleton_printers = Dict(config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:323: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  type_printers = Dict(config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:327: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  deferred_printers = Dict(config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:594: DeprecationWarning: metadata {'config': False} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=False)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:600: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:607: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  pprint = Bool(True, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:610: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  verbose = Bool(False, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:613: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  max_width = Integer(79, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:616: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  newline = Unicode('\n', config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:621: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  float_precision = CUnicode('', config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:143: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:152: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:475: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Should the history database include output? (default: no)"

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:478: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Write to database every x commands (higher values save disk access & power).\n"

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:259: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  color_scheme = Unicode('Linux', config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:275: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Input prompt.  '\\#' will be transformed to the prompt number")

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:277: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Continuation prompt.")

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:279: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Output prompt. '\\#' will be transformed to the prompt number")

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:284: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:179: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:190: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:197: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:202: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:206: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The part of the banner to be printed before the profile"""

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:209: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The part of the banner to be printed after the profile"""

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:220: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:227: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:231: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Set the color scheme (NoColor, Linux, or LightBG)."

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:242: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  debug = CBool(False, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:256: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:259: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Don't call post-execute functions that have failed in the past."

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:273: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  ipython_dir= Unicode('', config=True) # Set to get_ipython_dir() in __init__

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:289: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:294: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:300: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:303: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:307: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:310: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Save multi-line entries as one entry in readline history"

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:314: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  will be displayed as regular output instead."""

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:320: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.in_template")

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:322: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.in2_template")

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:324: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.out_template")

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:326: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.justify")

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:349: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Show rewritten input, e.g. for autocall."

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:352: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  quiet = CBool(False, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:354: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  history_length = Integer(10000, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:360: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:365: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  readline_use = CBool(True, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:366: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  readline_remove_delims = Unicode('-/~', config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:383: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  ], config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:396: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  run interactively (displaying output from expressions).""")

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:400: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_in = SeparateUnicode('\n', config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:401: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_out = SeparateUnicode('', config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:402: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_out2 = SeparateUnicode('', config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:403: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  wildcards_case_sensitive = CBool(True, config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:405: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_value='Context', config=True)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:290: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="auto editing of files with syntax errors.")

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:295: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  you can force a direct exit without any confirmation.""",

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:305: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Set the editor used by IPython (default to $EDITOR/vi/notepad)."

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:308: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="The shell program to be used for paging.")

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:320: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default.""",

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:323: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Enable auto setting the terminal title."

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:276: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:556: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:568: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:578: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:89: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """,

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:116: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:139: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="A list of dotted module names of IPython extensions to load."

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:142: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="dotted module name of an IPython extension to load."

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:148: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Reraise exceptions encountered loading IPython extensions?",

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:152: DeprecationWarning: metadata {'config': False} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_extensions = List(Unicode(), [u'storemagic'], config=False)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:156: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  be hidden from tools like %who?"""

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""List of files to run at IPython startup."""

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:164: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  variable at IPython startup."""

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:167: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""A file to be run""")

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:170: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""lines of code to run at IPython startup."""

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:173: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Execute the given command string."

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:176: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Run the module as a script."

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:179: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Enable GUI event loop integration with any of {0}.".format(gui_keys)

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:184: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  the default matplotlib backend."""

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:190: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:197: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\extensions\storemagic.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:245: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Start IPython quickly by skipping the loading of config files."""

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:252: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Whether to display a banner upon starting IPython."

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:260: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  file or command."""

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:186: DeprecationWarning: TerminalIPythonApp._classes_default is deprecated: use @default decorator instead.
  def _classes_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:99: DeprecationWarning: BaseIPythonApplication._config_file_name_default is deprecated: use @default decorator instead.
  def _config_file_name_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:111: DeprecationWarning: BaseIPythonApplication._config_file_paths_default is deprecated: use @default decorator instead.
  def _config_file_paths_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:165: DeprecationWarning: BaseIPythonApplication._config_files_default is deprecated: use @default decorator instead.
  def _config_files_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:144: DeprecationWarning: BaseIPythonApplication._ipython_dir_default is deprecated: use @default decorator instead.
  def _ipython_dir_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:151: DeprecationWarning: BaseIPythonApplication._profile_dir_default is deprecated: use @default decorator instead.
  def _profile_dir_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:186: DeprecationWarning: TerminalIPythonApp._classes_default is deprecated: use @default decorator instead.
  def _classes_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:151: DeprecationWarning: BaseIPythonApplication._profile_dir_default is deprecated: use @default decorator instead.
  def _profile_dir_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:144: DeprecationWarning: BaseIPythonApplication._ipython_dir_default is deprecated: use @default decorator instead.
  def _ipython_dir_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:57: DeprecationWarning: ProfileDir._location_changed is deprecated: use @observe and @unobserve instead.
  def _location_changed(self, name, old, new):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:126: DeprecationWarning: ProfileDir._security_dir_changed is deprecated: use @observe and @unobserve instead.
  def _security_dir_changed(self, name, old, new):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:71: DeprecationWarning: ProfileDir._log_dir_changed is deprecated: use @observe and @unobserve instead.
  def _log_dir_changed(self, name, old, new):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:111: DeprecationWarning: ProfileDir._startup_dir_changed is deprecated: use @observe and @unobserve instead.
  def _startup_dir_changed(self, name, old, new):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:132: DeprecationWarning: ProfileDir._pid_dir_changed is deprecated: use @observe and @unobserve instead.
  def _pid_dir_changed(self, name, old, new):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:138: DeprecationWarning: ProfileDir._static_dir_changed is deprecated: use @observe and @unobserve instead.
  def _static_dir_changed(self, name, old, new):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:111: DeprecationWarning: BaseIPythonApplication._config_file_paths_default is deprecated: use @default decorator instead.
  def _config_file_paths_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:165: DeprecationWarning: BaseIPythonApplication._config_files_default is deprecated: use @default decorator instead.
  def _config_files_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:99: DeprecationWarning: BaseIPythonApplication._config_file_name_default is deprecated: use @default decorator instead.
  def _config_file_name_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:268: DeprecationWarning: InteractiveShell._exiter_default is deprecated: use @default decorator instead.
  def _exiter_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:525: DeprecationWarning: TerminalInteractiveShell._ipython_dir_changed is deprecated: use @observe and @unobserve instead.
  def _ipython_dir_changed(self, name, new):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:459: DeprecationWarning: HistoryManager._dir_hist_default is deprecated: use @default decorator instead.
  def _dir_hist_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:165: DeprecationWarning: HistoryManager._db_changed is deprecated: use @observe and @unobserve instead.
  def _db_changed(self, name, old, new):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:459: DeprecationWarning: HistoryManager._dir_hist_default is deprecated: use @default decorator instead.
  def _dir_hist_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:268: DeprecationWarning: InteractiveShell._exiter_default is deprecated: use @default decorator instead.
  def _exiter_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:296: DeprecationWarning: PromptManager._invisible_chars_default is deprecated: use @default decorator instead.
  def _invisible_chars_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:272: DeprecationWarning: PromptManager._lazy_evaluate_fields_default is deprecated: use @default decorator instead.
  def _lazy_evaluate_fields_default(self): return lazily_evaluate.copy()

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:272: DeprecationWarning: PromptManager._lazy_evaluate_fields_default is deprecated: use @default decorator instead.
  def _lazy_evaluate_fields_default(self): return lazily_evaluate.copy()

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:296: DeprecationWarning: PromptManager._invisible_chars_default is deprecated: use @default decorator instead.
  def _invisible_chars_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:1180] on_trait_change WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:313: DeprecationWarning: on_trait_change is deprecated: use observe instead
  'in2_template', 'out_template'])

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:81: DeprecationWarning: DisplayFormatter._active_types_default is deprecated: use @default decorator instead.
  def _active_types_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:98: DeprecationWarning: DisplayFormatter._formatters_default is deprecated: use @default decorator instead.
  def _formatters_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:92: DeprecationWarning: DisplayFormatter._ipython_display_formatter_default is deprecated: use @default decorator instead.
  def _ipython_display_formatter_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:84: DeprecationWarning: DisplayFormatter._active_types_changed is deprecated: use @observe and @unobserve instead.
  def _active_types_changed(self, name, old, new):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:98: DeprecationWarning: DisplayFormatter._formatters_default is deprecated: use @default decorator instead.
  def _formatters_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:677: DeprecationWarning: PlainTextFormatter._deferred_printers_default is deprecated: use @default decorator instead.
  def _deferred_printers_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:669: DeprecationWarning: PlainTextFormatter._singleton_printers_default is deprecated: use @default decorator instead.
  def _singleton_printers_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:672: DeprecationWarning: PlainTextFormatter._type_printers_default is deprecated: use @default decorator instead.
  def _type_printers_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:91: DeprecationWarning: ScriptMagics._script_magics_default is deprecated: use @default decorator instead.
  def _script_magics_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:91: DeprecationWarning: ScriptMagics._script_magics_default is deprecated: use @default decorator instead.
  def _script_magics_default(self):

[ 2016-12-05 14:23:00 ] traitlets.py[line:1180] on_trait_change WARNING E:\Python27\lib\site-packages\IPython\core\extensions.py:58: DeprecationWarning: on_trait_change is deprecated: use observe instead
  self._on_ipython_dir_changed, 'ipython_dir'

[ 2016-12-05 14:23:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\extensions\storemagic.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-05 14:24:10 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = '123'  AND `user_chpass`.`passuuid` = '121' ); args=('123', '121')
[ 2016-12-05 14:24:20 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = '123'  AND `user_chpass`.`passuuid` = '1234' ); args=('123', '1234')
[ 2016-12-05 14:24:20 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:92: DeprecationWarning: DisplayFormatter._ipython_display_formatter_default is deprecated: use @default decorator instead.
  def _ipython_display_formatter_default(self):

[ 2016-12-05 14:24:20 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:669: DeprecationWarning: PlainTextFormatter._singleton_printers_default is deprecated: use @default decorator instead.
  def _singleton_printers_default(self):

[ 2016-12-05 14:24:20 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:672: DeprecationWarning: PlainTextFormatter._type_printers_default is deprecated: use @default decorator instead.
  def _type_printers_default(self):

[ 2016-12-05 14:24:20 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:677: DeprecationWarning: PlainTextFormatter._deferred_printers_default is deprecated: use @default decorator instead.
  def _deferred_printers_default(self):

[ 2016-12-05 14:24:26 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = '123'  AND `user_chpass`.`passuuid` = '1234' ); args=('123', '1234')
[ 2016-12-05 14:24:35 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = '123'  AND `user_chpass`.`passuuid` = '1234ewr' ); args=('123', '1234ewr')
[ 2016-12-05 14:42:54 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '3qwoceqf133kkz1r4xh0y58qstnfcsdp'  AND `django_session`.`expire_date` > '2016-12-05 14:42:54' ); args=('3qwoceqf133kkz1r4xh0y58qstnfcsdp', u'2016-12-05 14:42:54')
[ 2016-12-05 14:42:54 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 14:42:54 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 14:44:17 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '3qwoceqf133kkz1r4xh0y58qstnfcsdp'  AND `django_session`.`expire_date` > '2016-12-05 14:44:17' ); args=('3qwoceqf133kkz1r4xh0y58qstnfcsdp', u'2016-12-05 14:44:17')
[ 2016-12-05 14:44:17 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', `expire_date` = '2016-12-05 15:44:17' WHERE `django_session`.`session_key` = '3qwoceqf133kkz1r4xh0y58qstnfcsdp' ; args=(u'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', u'2016-12-05 15:44:17', '3qwoceqf133kkz1r4xh0y58qstnfcsdp')
[ 2016-12-05 14:44:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '3qwoceqf133kkz1r4xh0y58qstnfcsdp'  AND `django_session`.`expire_date` > '2016-12-05 14:44:17' ); args=('3qwoceqf133kkz1r4xh0y58qstnfcsdp', u'2016-12-05 14:44:17')
[ 2016-12-05 14:44:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '3qwoceqf133kkz1r4xh0y58qstnfcsdp'  AND `django_session`.`expire_date` > '2016-12-05 14:44:18' ); args=('3qwoceqf133kkz1r4xh0y58qstnfcsdp', u'2016-12-05 14:44:18')
[ 2016-12-05 14:44:27 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 14:45:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '3qwoceqf133kkz1r4xh0y58qstnfcsdp'  AND `django_session`.`expire_date` > '2016-12-05 14:45:18' ); args=('3qwoceqf133kkz1r4xh0y58qstnfcsdp', u'2016-12-05 14:45:18')
[ 2016-12-05 14:45:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'drstew' ; args=(u'drstew',)
[ 2016-12-05 14:48:17 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '3qwoceqf133kkz1r4xh0y58qstnfcsdp'  AND `django_session`.`expire_date` > '2016-12-05 14:48:16' ); args=('3qwoceqf133kkz1r4xh0y58qstnfcsdp', u'2016-12-05 14:48:16')
[ 2016-12-05 14:48:24 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'dsf' ; args=(u'dsf',)
[ 2016-12-05 14:48:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'dsf' ; args=(u'dsf',)
[ 2016-12-05 14:49:00 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '3qwoceqf133kkz1r4xh0y58qstnfcsdp'  AND `django_session`.`expire_date` > '2016-12-05 14:49:00' ); args=('3qwoceqf133kkz1r4xh0y58qstnfcsdp', u'2016-12-05 14:49:00')
[ 2016-12-05 14:49:07 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'qwerweqr5432werwe' ; args=(u'qwerweqr5432werwe',)
[ 2016-12-05 14:52:25 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'sdfew' ; args=(u'sdfew',)
[ 2016-12-05 14:53:15 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 14:53:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 14:53:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 14:53:46 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 14:53:46 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 14:54:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 14:54:48 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 14:54:56 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 14:56:16 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 14:56:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 15:08:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '3qwoceqf133kkz1r4xh0y58qstnfcsdp'  AND `django_session`.`expire_date` > '2016-12-05 15:08:37' ); args=('3qwoceqf133kkz1r4xh0y58qstnfcsdp', u'2016-12-05 15:08:37')
[ 2016-12-05 15:08:46 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 15:08:49 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 15:08:53 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 15:08:54 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', 'ba3c93e8315949cda3e9ac9a45c62047', '2016-12-05 15:08:54'); args=[u'chenyh', 'ba3c93e8315949cda3e9ac9a45c62047', u'2016-12-05 15:08:54']
[ 2016-12-05 15:16:09 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 15:16:16 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 15:16:16 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 15:16:16 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 15:16:16 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', 'c31c860a4c58485f95be0ad1212de9bd', '2016-12-05 15:16:16'); args=[u'chenyh', 'c31c860a4c58485f95be0ad1212de9bd', u'2016-12-05 15:16:16']
[ 2016-12-05 15:44:13 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = 'ba3c93e8315949cda3e9ac9a45c62047' ); args=(u'chenyh', u'ba3c93e8315949cda3e9ac9a45c62047')
[ 2016-12-05 15:45:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = 'ba3c93e8315949cda3e9ac9a45c62047' ); args=(u'chenyh', u'ba3c93e8315949cda3e9ac9a45c62047')
[ 2016-12-05 15:46:03 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = 'ba3c93e8315949cda3e9ac9a45c62047' ); args=(u'chenyh', u'ba3c93e8315949cda3e9ac9a45c62047')
[ 2016-12-05 15:46:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = 'ba3c93e8315949cda3e9ac9a45c62047' ); args=(u'chenyh', u'ba3c93e8315949cda3e9ac9a45c62047')
[ 2016-12-05 15:49:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = 'ba3c93e8315949cda3e9ac9a45c62047' ); args=(u'chenyh', u'ba3c93e8315949cda3e9ac9a45c62047')
[ 2016-12-05 15:50:27 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 15:50:27 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 15:50:27 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 15:50:27 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', '601757dd26b44344a05bf8e0c3296671', '2016-12-05 15:50:27'); args=[u'chenyh', '601757dd26b44344a05bf8e0c3296671', u'2016-12-05 15:50:27']
[ 2016-12-05 15:50:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = 'c31c860a4c58485f95be0ad1212de9bd' ); args=(u'chenyh', u'c31c860a4c58485f95be0ad1212de9bd')
[ 2016-12-05 15:50:50 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '601757dd26b44344a05bf8e0c3296671' ); args=(u'chenyh', u'601757dd26b44344a05bf8e0c3296671')
[ 2016-12-05 15:52:02 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '601757dd26b44344a05bf8e0c3296671' ); args=(u'chenyh', u'601757dd26b44344a05bf8e0c3296671')
[ 2016-12-05 15:52:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'False' ; args=(u'False',)
[ 2016-12-05 15:55:22 ] util.py[line:79] execute DEBUG (0.002) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = '123'  AND `user_chpass`.`passuuid` = '1234ewr' ); args=('123', '1234ewr')
[ 2016-12-05 15:55:51 ] util.py[line:79] execute DEBUG (0.002) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = 'chenyanghong@enjoyfin.com' ); args=('chenyh', 'chenyanghong@enjoyfin.com')
[ 2016-12-05 15:55:51 ] util.py[line:79] execute DEBUG (0.001) DELETE FROM `user_chpass` WHERE `id` IN (1); args=(1,)
[ 2016-12-05 15:58:20 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '601757dd26b44344a05bf8e0c3296671' ); args=(u'chenyh', u'601757dd26b44344a05bf8e0c3296671')
[ 2016-12-05 15:58:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'False' ; args=(u'False',)
[ 2016-12-05 15:59:16 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '601757dd26b44344a05bf8e0c3296671' ); args=(u'chenyh', u'601757dd26b44344a05bf8e0c3296671')
[ 2016-12-05 15:59:24 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'False' ; args=(u'False',)
[ 2016-12-05 16:00:31 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '601757dd26b44344a05bf8e0c3296671' ); args=(u'chenyh', u'601757dd26b44344a05bf8e0c3296671')
[ 2016-12-05 16:00:34 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '601757dd26b44344a05bf8e0c3296671' ); args=(u'chenyh', u'601757dd26b44344a05bf8e0c3296671')
[ 2016-12-05 16:00:54 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:00:54 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:00:54 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:00:54 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', '03fbb2442fb14ba6a4caa483af89c5b2', '2016-12-05 16:00:54'); args=[u'chenyh', '03fbb2442fb14ba6a4caa483af89c5b2', u'2016-12-05 16:00:54']
[ 2016-12-05 16:01:12 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '03fbb2442fb14ba6a4caa483af89c5b2' ); args=(u'chenyh', u'03fbb2442fb14ba6a4caa483af89c5b2')
[ 2016-12-05 16:01:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'False' ; args=(u'False',)
[ 2016-12-05 16:03:58 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '03fbb2442fb14ba6a4caa483af89c5b2' ); args=(u'chenyh', u'03fbb2442fb14ba6a4caa483af89c5b2')
[ 2016-12-05 16:04:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'False' ; args=(u'False',)
[ 2016-12-05 16:05:01 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '03fbb2442fb14ba6a4caa483af89c5b2' ); args=(u'chenyh', u'03fbb2442fb14ba6a4caa483af89c5b2')
[ 2016-12-05 16:05:08 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'False' ; args=(u'False',)
[ 2016-12-05 16:05:50 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '03fbb2442fb14ba6a4caa483af89c5b2' ); args=(u'chenyh', u'03fbb2442fb14ba6a4caa483af89c5b2')
[ 2016-12-05 16:05:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'False' ; args=(u'False',)
[ 2016-12-05 16:06:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '03fbb2442fb14ba6a4caa483af89c5b2' ); args=(u'chenyh', u'03fbb2442fb14ba6a4caa483af89c5b2')
[ 2016-12-05 16:06:25 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'False' ; args=(u'False',)
[ 2016-12-05 16:07:20 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '03fbb2442fb14ba6a4caa483af89c5b2' ); args=(u'chenyh', u'03fbb2442fb14ba6a4caa483af89c5b2')
[ 2016-12-05 16:07:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'False' ; args=(u'False',)
[ 2016-12-05 16:09:05 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'False' ; args=(u'False',)
[ 2016-12-05 16:13:07 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '03fbb2442fb14ba6a4caa483af89c5b2' ); args=(u'chenyh', u'03fbb2442fb14ba6a4caa483af89c5b2')
[ 2016-12-05 16:13:15 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:13:15 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:13:15 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:13:15 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', '137518fe75db4222ab4f18538e0e4bb1', '2016-12-05 16:13:15'); args=[u'chenyh', '137518fe75db4222ab4f18538e0e4bb1', u'2016-12-05 16:13:15']
[ 2016-12-05 16:13:41 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '137518fe75db4222ab4f18538e0e4bb1' ); args=(u'chenyh', u'137518fe75db4222ab4f18538e0e4bb1')
[ 2016-12-05 16:14:59 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '137518fe75db4222ab4f18538e0e4bb1' ); args=(u'chenyh', u'137518fe75db4222ab4f18538e0e4bb1')
[ 2016-12-05 16:15:07 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:15:31 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '137518fe75db4222ab4f18538e0e4bb1' ); args=(u'chenyh', u'137518fe75db4222ab4f18538e0e4bb1')
[ 2016-12-05 16:15:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:16:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:16:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:16:11 ] util.py[line:79] execute DEBUG (0.001) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 68, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', '25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 68, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 16:16:11 ] prodution   : ERROR    chenyh用户ldap密码修改失败
[ 2016-12-05 16:16:48 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '137518fe75db4222ab4f18538e0e4bb1' ); args=(u'chenyh', u'137518fe75db4222ab4f18538e0e4bb1')
[ 2016-12-05 16:16:58 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:17:15 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:17:15 ] util.py[line:79] execute DEBUG (0.001) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 68, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', '25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 68, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 16:17:33 ] prodution   : ERROR    chenyh用户ldap密码修改失败
[ 2016-12-05 16:18:33 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '137518fe75db4222ab4f18538e0e4bb1' ); args=(u'chenyh', u'137518fe75db4222ab4f18538e0e4bb1')
[ 2016-12-05 16:19:06 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:19:09 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:19:09 ] util.py[line:79] execute DEBUG (0.002) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 68, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', '25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 68, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 16:23:15 ] prodution   : ERROR    chenyh用户ldap密码修改失败
[ 2016-12-05 16:23:28 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 16:23:28 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 16:23:28 ] util.py[line:79] execute DEBUG (0.001) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 69, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 69, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 16:23:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 16:23:28 ] util.py[line:79] execute DEBUG (0.001) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  LIMIT 1; args=(u'0gyyilivgn59m2yu2ksi4moh3nqwklk3',)
[ 2016-12-05 16:23:28 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-05 17:23:28' WHERE `django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-05 17:23:28', u'0gyyilivgn59m2yu2ksi4moh3nqwklk3')
[ 2016-12-05 16:23:28 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('0gyyilivgn59m2yu2ksi4moh3nqwklk3', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-05 17:23:28'); args=(u'0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-05 17:23:28')
[ 2016-12-05 16:23:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:23:28' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:23:28')
[ 2016-12-05 16:23:31 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:23:31' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:23:31')
[ 2016-12-05 16:23:31 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:23:39 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:23:39' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:23:39')
[ 2016-12-05 16:23:39 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 16:23:39 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = '25f9e794323b453885f5181f1b624d0b', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 69, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', '25f9e794323b453885f5181f1b624d0b', 'chenyanghong@enjoyfin.com', 1, 1, 69, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 16:24:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:24:17' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:24:17')
[ 2016-12-05 16:24:17 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', `expire_date` = '2016-12-05 17:24:17' WHERE `django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3' ; args=(u'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', u'2016-12-05 17:24:17', '0gyyilivgn59m2yu2ksi4moh3nqwklk3')
[ 2016-12-05 16:24:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:24:17' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:24:17')
[ 2016-12-05 16:24:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '137518fe75db4222ab4f18538e0e4bb1' ); args=(u'chenyh', u'137518fe75db4222ab4f18538e0e4bb1')
[ 2016-12-05 16:24:34 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:24:34 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:24:34 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:24:34 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', '152c8df44fb44288bc74a698bc9ac028', '2016-12-05 16:24:34'); args=[u'chenyh', '152c8df44fb44288bc74a698bc9ac028', u'2016-12-05 16:24:34']
[ 2016-12-05 16:25:42 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '152c8df44fb44288bc74a698bc9ac028' ); args=(u'chenyh', u'152c8df44fb44288bc74a698bc9ac028')
[ 2016-12-05 16:26:53 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:27:03 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:27:03 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 69, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', '25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 69, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 16:28:46 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '152c8df44fb44288bc74a698bc9ac028' ); args=(u'chenyh', u'152c8df44fb44288bc74a698bc9ac028')
[ 2016-12-05 16:29:00 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:29:01 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:29:01 ] util.py[line:79] execute DEBUG (0.001) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 69, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', '25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 69, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 16:31:41 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '152c8df44fb44288bc74a698bc9ac028' ); args=(u'chenyh', u'152c8df44fb44288bc74a698bc9ac028')
[ 2016-12-05 16:32:12 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '152c8df44fb44288bc74a698bc9ac028' ); args=(u'chenyh', u'152c8df44fb44288bc74a698bc9ac028')
[ 2016-12-05 16:32:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:32:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:32:19 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = 'e807f1fcf82d132f9bb018ca6738a19f', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 69, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', 'e807f1fcf82d132f9bb018ca6738a19f', u'chenyanghong@enjoyfin.com', 1, 1, 69, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 16:35:31 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '152c8df44fb44288bc74a698bc9ac028' ); args=(u'chenyh', u'152c8df44fb44288bc74a698bc9ac028')
[ 2016-12-05 16:35:39 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:35:39 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:35:39 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:35:39 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', 'ef1b12cd0e52413199e3655b3f774916', '2016-12-05 16:35:39'); args=[u'chenyh', 'ef1b12cd0e52413199e3655b3f774916', u'2016-12-05 16:35:39']
[ 2016-12-05 16:36:05 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = 'ef1b12cd0e52413199e3655b3f774916' ); args=(u'chenyh', u'ef1b12cd0e52413199e3655b3f774916')
[ 2016-12-05 16:36:33 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:36:33 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:36:33 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = 'e807f1fcf82d132f9bb018ca6738a19f', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 69, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', 'e807f1fcf82d132f9bb018ca6738a19f', u'chenyanghong@enjoyfin.com', 1, 1, 69, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 16:36:33 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = 'ef1b12cd0e52413199e3655b3f774916' ); args=(u'chenyh', u'ef1b12cd0e52413199e3655b3f774916')
[ 2016-12-05 16:36:33 ] util.py[line:79] execute DEBUG (0.001) DELETE FROM `user_chpass` WHERE `id` IN (9); args=(9,)
[ 2016-12-05 16:37:01 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:37:01' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:37:01')
[ 2016-12-05 16:37:10 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 16:37:10 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 16:37:10 ] util.py[line:79] execute DEBUG (0.001) UPDATE `admin` SET `username` = 'chenyh', `password` = 'e807f1fcf82d132f9bb018ca6738a19f', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 70, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'e807f1fcf82d132f9bb018ca6738a19f', u'chenyanghong@enjoyfin.com', 1, 1, 70, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 16:37:10 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 16:37:10 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:37:10' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:37:10')
[ 2016-12-05 16:37:10 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-05 17:37:10' WHERE `django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-05 17:37:10', '0gyyilivgn59m2yu2ksi4moh3nqwklk3')
[ 2016-12-05 16:37:10 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:37:10' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:37:10')
[ 2016-12-05 16:37:13 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:37:13' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:37:13')
[ 2016-12-05 16:37:13 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:37:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:37:19' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:37:19')
[ 2016-12-05 16:37:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 16:37:19 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = 'e10adc3949ba59abbe56e057f20f883e', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 70, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', 'e10adc3949ba59abbe56e057f20f883e', 'chenyanghong@enjoyfin.com', 1, 1, 70, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 16:37:23 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:37:23' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:37:23')
[ 2016-12-05 16:37:23 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', `expire_date` = '2016-12-05 17:37:23' WHERE `django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3' ; args=(u'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', u'2016-12-05 17:37:23', '0gyyilivgn59m2yu2ksi4moh3nqwklk3')
[ 2016-12-05 16:37:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:37:23' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:37:23')
[ 2016-12-05 16:37:41 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:37:41 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:37:41 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:37:41 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', '9792c43f3c164e21993774c415ea76bb', '2016-12-05 16:37:41'); args=[u'chenyh', '9792c43f3c164e21993774c415ea76bb', u'2016-12-05 16:37:41']
[ 2016-12-05 16:38:12 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '9792c43f3c164e21993774c415ea76bb' ); args=(u'chenyh', u'9792c43f3c164e21993774c415ea76bb')
[ 2016-12-05 16:38:22 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:38:22 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:38:22 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 70, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', '25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 70, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 16:38:22 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '9792c43f3c164e21993774c415ea76bb' ); args=(u'chenyh', u'9792c43f3c164e21993774c415ea76bb')
[ 2016-12-05 16:38:22 ] util.py[line:79] execute DEBUG (0.001) DELETE FROM `user_chpass` WHERE `id` IN (10); args=(10,)
[ 2016-12-05 16:38:42 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:38:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:38:42 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = '25f9e794323b453885f5181f1b624d0b', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 70, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', '25f9e794323b453885f5181f1b624d0b', u'chenyanghong@enjoyfin.com', 1, 1, 70, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 16:38:42 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '9792c43f3c164e21993774c415ea76bb' ); args=(u'chenyh', u'9792c43f3c164e21993774c415ea76bb')
[ 2016-12-05 16:43:17 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '9792c43f3c164e21993774c415ea76bb' ); args=(u'chenyh', u'9792c43f3c164e21993774c415ea76bb')
[ 2016-12-05 16:44:57 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '9792c43f3c164e21993774c415ea76bb' ); args=(u'chenyh', u'9792c43f3c164e21993774c415ea76bb')
[ 2016-12-05 16:44:58 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:44:58' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:44:58')
[ 2016-12-05 16:44:58 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:44:58' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:44:58')
[ 2016-12-05 16:45:16 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:45:22 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:45:22 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:45:22 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:45:22 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', '0110686812be44b7abefdd01d2addeee', '2016-12-05 16:45:22'); args=[u'chenyh', '0110686812be44b7abefdd01d2addeee', u'2016-12-05 16:45:22']
[ 2016-12-05 16:45:58 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '0110686812be44b7abefdd01d2addeee' ); args=(u'chenyh', u'0110686812be44b7abefdd01d2addeee')
[ 2016-12-05 16:46:13 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:46:13 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '0110686812be44b7abefdd01d2addeee' ); args=('chenyh', '0110686812be44b7abefdd01d2addeee')
[ 2016-12-05 16:46:13 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 16:46:13 ] util.py[line:79] execute DEBUG (0.001) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 70, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', '25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 70, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 16:46:14 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '0110686812be44b7abefdd01d2addeee' ); args=(u'chenyh', u'0110686812be44b7abefdd01d2addeee')
[ 2016-12-05 16:46:14 ] util.py[line:79] execute DEBUG (0.000) DELETE FROM `user_chpass` WHERE `id` IN (11); args=(11,)
[ 2016-12-05 16:46:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:46:15' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:46:15')
[ 2016-12-05 16:46:15 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:46:15' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:46:15')
[ 2016-12-05 16:46:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'chenyh'  AND `user_chpass`.`passuuid` = '9792c43f3c164e21993774c415ea76bb' ); args=(u'chenyh', u'9792c43f3c164e21993774c415ea76bb')
[ 2016-12-05 16:46:21 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:46:21' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:46:21')
[ 2016-12-05 16:46:21 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:46:21' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:46:21')
[ 2016-12-05 16:46:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 16:46:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 16:46:28 ] util.py[line:79] execute DEBUG (0.001) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 71, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 71, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 16:46:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 16:46:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:46:28' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:46:28')
[ 2016-12-05 16:46:28 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-05 17:46:28' WHERE `django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-05 17:46:28', '0gyyilivgn59m2yu2ksi4moh3nqwklk3')
[ 2016-12-05 16:46:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:46:28' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:46:28')
[ 2016-12-05 16:46:53 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:46:53' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:46:53')
[ 2016-12-05 16:52:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:52:11' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:52:11')
[ 2016-12-05 16:53:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:53:37' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:53:37')
[ 2016-12-05 16:57:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:57:32' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:57:32')
[ 2016-12-05 16:57:52 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:57:52' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:57:52')
[ 2016-12-05 16:58:42 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 16:58:42' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 16:58:42')
[ 2016-12-05 17:01:57 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:01:57' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:01:57')
[ 2016-12-05 17:02:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:02:17' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:02:17')
[ 2016-12-05 17:03:08 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'a123456' ; args=('a123456',)
[ 2016-12-05 17:03:08 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `admin` (`username`, `password`, `email`, `vaild`, `isadmin`, `logincount`, `lastlogin`) VALUES ('a123456', 'e10adc3949ba59abbe56e057f20f883e', '32415397@qq.com', 1, 0, 0, '2016-12-05 17:03:08'); args=['a123456', 'e10adc3949ba59abbe56e057f20f883e', '32415397@qq.com', 1, 0, 0, u'2016-12-05 17:03:08']
[ 2016-12-05 17:03:33 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:03:33' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:03:33')
[ 2016-12-05 17:09:34 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:09:33' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:09:33')
[ 2016-12-05 17:09:53 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:09:53' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:09:53')
[ 2016-12-05 17:09:53 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'a123456' ; args=('a123456',)
[ 2016-12-05 17:09:53 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'a123456' ; args=('a123456',)
[ 2016-12-05 17:09:53 ] util.py[line:79] execute DEBUG (0.001) UPDATE `admin` SET `username` = 'a123456', `password` = 'e10adc3949ba59abbe56e057f20f883e', `email` = '32415397@qq.com', `vaild` = 1, `isadmin` = 0, `logincount` = 1, `lastlogin` = '2016-12-05 17:03:08' WHERE `admin`.`id` = 504 ; args=(u'a123456', u'e10adc3949ba59abbe56e057f20f883e', u'32415397@qq.com', 1, 0, 1, u'2016-12-05 17:03:08', 504)
[ 2016-12-05 17:09:53 ] prodution   : ERROR    a123456 ldap添加失败
[ 2016-12-05 17:10:58 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:10:58' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:10:58')
[ 2016-12-05 17:11:20 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:11:20' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:11:20')
[ 2016-12-05 17:11:30 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'aa123456' ; args=('aa123456',)
[ 2016-12-05 17:11:30 ] util.py[line:79] execute DEBUG (0.002) INSERT INTO `admin` (`username`, `password`, `email`, `vaild`, `isadmin`, `logincount`, `lastlogin`) VALUES ('aa123456', 'e10adc3949ba59abbe56e057f20f883e', '32415397@qq.com', 1, 0, 0, '2016-12-05 17:11:30'); args=['aa123456', 'e10adc3949ba59abbe56e057f20f883e', '32415397@qq.com', 1, 0, 0, u'2016-12-05 17:11:30']
[ 2016-12-05 17:13:04 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:13:04' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:13:04')
[ 2016-12-05 17:13:08 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'aa123456' ; args=('aa123456',)
[ 2016-12-05 17:13:08 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'aa123456' ; args=('aa123456',)
[ 2016-12-05 17:13:08 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'aa123456', `password` = 'e10adc3949ba59abbe56e057f20f883e', `email` = '32415397@qq.com', `vaild` = 1, `isadmin` = 0, `logincount` = 1, `lastlogin` = '2016-12-05 17:11:30' WHERE `admin`.`id` = 505 ; args=(u'aa123456', u'e10adc3949ba59abbe56e057f20f883e', u'32415397@qq.com', 1, 0, 1, u'2016-12-05 17:11:30', 505)
[ 2016-12-05 17:13:10 ] prodution   : ERROR    aa123456 ldap添加失败
[ 2016-12-05 17:13:26 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:13:26' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:13:26')
[ 2016-12-05 17:13:26 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 17:13:26 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 17:13:26 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:13:26' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:13:26')
[ 2016-12-05 17:13:26 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 17:13:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 17:13:31 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:13:31' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:13:31')
[ 2016-12-05 17:13:31 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 17:13:31 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 320; args=()
[ 2016-12-05 17:13:35 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:13:35' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:13:35')
[ 2016-12-05 17:13:35 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'aa123456' ; args=(u'aa123456',)
[ 2016-12-05 17:13:35 ] util.py[line:79] execute DEBUG (0.000) DELETE FROM `admin` WHERE `id` IN (505); args=(505,)
[ 2016-12-05 17:13:36 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:13:36' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:13:36')
[ 2016-12-05 17:13:36 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 17:13:36 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 320; args=()
[ 2016-12-05 17:13:40 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:13:40' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:13:40')
[ 2016-12-05 17:13:55 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:13:55' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:13:55')
[ 2016-12-05 17:13:58 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'aa123456' ; args=('aa123456',)
[ 2016-12-05 17:13:58 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `admin` (`username`, `password`, `email`, `vaild`, `isadmin`, `logincount`, `lastlogin`) VALUES ('aa123456', 'e10adc3949ba59abbe56e057f20f883e', '32415397@qq.com', 1, 0, 0, '2016-12-05 17:13:58'); args=['aa123456', 'e10adc3949ba59abbe56e057f20f883e', '32415397@qq.com', 1, 0, 0, u'2016-12-05 17:13:58']
[ 2016-12-05 17:35:56 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:35:56' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:35:56')
[ 2016-12-05 17:35:56 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 17:35:56 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 17:35:56 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:35:56' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:35:56')
[ 2016-12-05 17:35:56 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 17:35:56 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 17:35:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:35:59' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:35:59')
[ 2016-12-05 17:35:59 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 17:35:59 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 320; args=()
[ 2016-12-05 17:36:03 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:36:03' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:36:03')
[ 2016-12-05 17:36:03 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'aa123456' ; args=(u'aa123456',)
[ 2016-12-05 17:36:03 ] util.py[line:79] execute DEBUG (0.000) DELETE FROM `admin` WHERE `id` IN (506); args=(506,)
[ 2016-12-05 17:36:06 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:36:06' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:36:06')
[ 2016-12-05 17:36:06 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 17:36:06 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 270; args=()
[ 2016-12-05 17:36:07 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:36:07' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:36:07')
[ 2016-12-05 17:36:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:36:18' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:36:18')
[ 2016-12-05 17:36:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 17:38:50 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:38:50' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:38:50')
[ 2016-12-05 17:38:50 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 17:38:55 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:38:55' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:38:55')
[ 2016-12-05 17:38:55 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 17:38:55 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 17:39:00 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:39:00' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:39:00')
[ 2016-12-05 17:39:00 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'xx2000148' ; args=(u'xx2000148',)
[ 2016-12-05 17:39:35 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:39:35' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:39:35')
[ 2016-12-05 17:39:35 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'xx2000148' ; args=('xx2000148',)
[ 2016-12-05 17:39:35 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'xx2000148', `password` = 'e10adc3949ba59abbe56e057f20f883e', `email` = 'xiaote@enjoyfin.com', `vaild` = 1, `isadmin` = 0, `logincount` = 0, `lastlogin` = '2016-01-01 00:00:00' WHERE `admin`.`id` = 148 ; args=(u'xx2000148', 'e10adc3949ba59abbe56e057f20f883e', 'xiaote@enjoyfin.com', 1, 0, 0, u'2016-01-01 00:00:00', 148)
[ 2016-12-05 17:39:35 ] prodution   : ERROR    xx2000148用户ldap密码修改失败
[ 2016-12-05 17:39:56 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:39:56' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:39:56')
[ 2016-12-05 17:40:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'xx2000148' ; args=('xx2000148',)
[ 2016-12-05 17:40:32 ] util.py[line:79] execute DEBUG (0.001) UPDATE `admin` SET `username` = 'xx2000148', `password` = 'e10adc3949ba59abbe56e057f20f883e', `email` = 'xiaote@enjoyfin.com', `vaild` = 1, `isadmin` = 0, `logincount` = 0, `lastlogin` = '2016-01-01 00:00:00' WHERE `admin`.`id` = 148 ; args=(u'xx2000148', 'e10adc3949ba59abbe56e057f20f883e', 'xiaote@enjoyfin.com', 1, 0, 0, u'2016-01-01 00:00:00', 148)
[ 2016-12-05 17:41:05 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:41:05' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:41:05')
[ 2016-12-05 17:41:05 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 17:41:07 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:41:07' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:41:07')
[ 2016-12-05 17:41:22 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:41:22' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:41:22')
[ 2016-12-05 17:41:22 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'xx001' ; args=('xx001',)
[ 2016-12-05 17:41:22 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `admin` (`username`, `password`, `email`, `vaild`, `isadmin`, `logincount`, `lastlogin`) VALUES ('xx001', 'e10adc3949ba59abbe56e057f20f883e', '234234@11.com', 1, 0, 0, '2016-12-05 17:41:22'); args=['xx001', 'e10adc3949ba59abbe56e057f20f883e', '234234@11.com', 1, 0, 0, u'2016-12-05 17:41:22']
[ 2016-12-05 17:41:33 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:41:33' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:41:33')
[ 2016-12-05 17:41:33 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 17:41:41 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:41:41' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:41:41')
[ 2016-12-05 17:41:41 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'xx001' ; args=(u'xx001',)
[ 2016-12-05 17:41:56 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '0gyyilivgn59m2yu2ksi4moh3nqwklk3'  AND `django_session`.`expire_date` > '2016-12-05 17:41:56' ); args=('0gyyilivgn59m2yu2ksi4moh3nqwklk3', u'2016-12-05 17:41:56')
[ 2016-12-05 17:42:02 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'xx001' ; args=('xx001',)
[ 2016-12-05 17:42:02 ] util.py[line:79] execute DEBUG (0.002) UPDATE `admin` SET `username` = 'xx001', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'xiaote@enjoyfin.com', `vaild` = 1, `isadmin` = 0, `logincount` = 0, `lastlogin` = '2016-12-05 17:41:22' WHERE `admin`.`id` = 507 ; args=(u'xx001', '25d55ad283aa400af464c76d713c07ad', 'xiaote@enjoyfin.com', 1, 0, 0, u'2016-12-05 17:41:22', 507)
[ 2016-12-05 18:59:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 18:59:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 18:59:38 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 72, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 72, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 18:59:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 18:59:38 ] util.py[line:79] execute DEBUG (0.000) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  LIMIT 1; args=(u'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz',)
[ 2016-12-05 18:59:38 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-05 19:59:38' WHERE `django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-05 19:59:38', u'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz')
[ 2016-12-05 18:59:38 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-05 19:59:38'); args=(u'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-05 19:59:38')
[ 2016-12-05 18:59:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 18:59:38' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 18:59:38')
[ 2016-12-05 18:59:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 18:59:42' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 18:59:42')
[ 2016-12-05 18:59:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 18:59:44' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 18:59:44')
[ 2016-12-05 18:59:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 18:59:44' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 18:59:44')
[ 2016-12-05 18:59:45 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 18:59:45' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 18:59:45')
[ 2016-12-05 18:59:45 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 18:59:45 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 19:06:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:06:19' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:06:19')
[ 2016-12-05 19:06:19 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 19:06:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 19:06:22 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:06:22' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:06:22')
[ 2016-12-05 19:06:22 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:06:22' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:06:22')
[ 2016-12-05 19:09:41 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:09:41' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:09:41')
[ 2016-12-05 19:10:22 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:10:22' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:10:22')
[ 2016-12-05 19:10:34 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:10:34' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:10:34')
[ 2016-12-05 19:10:34 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:10:34' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:10:34')
[ 2016-12-05 19:19:04 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:19:04' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:19:04')
[ 2016-12-05 19:23:10 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:23:10' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:23:10')
[ 2016-12-05 19:23:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:23:26' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:23:26')
[ 2016-12-05 19:24:09 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:24:09' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:24:09')
[ 2016-12-05 19:24:12 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:24:12' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:24:12')
[ 2016-12-05 19:25:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:25:17' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:25:17')
[ 2016-12-05 19:26:02 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:26:02' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:26:02')
[ 2016-12-05 19:26:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:26:38' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:26:38')
[ 2016-12-05 19:27:12 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:27:12' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:27:12')
[ 2016-12-05 19:27:14 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:27:14' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:27:14')
[ 2016-12-05 19:27:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:27:15' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:27:15')
[ 2016-12-05 19:30:51 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:30:51' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:30:51')
[ 2016-12-05 19:31:04 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:31:04' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:31:04')
[ 2016-12-05 19:37:12 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:37:12' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:37:12')
[ 2016-12-05 19:37:13 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:37:13' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:37:13')
[ 2016-12-05 19:37:14 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:37:14' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:37:14')
[ 2016-12-05 19:37:14 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:37:14' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:37:14')
[ 2016-12-05 19:37:14 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:37:14' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:37:14')
[ 2016-12-05 19:37:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:37:14' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:37:14')
[ 2016-12-05 19:37:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:37:15' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:37:15')
[ 2016-12-05 19:42:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:42:59' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:42:59')
[ 2016-12-05 19:43:05 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:43:05' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:43:05')
[ 2016-12-05 19:43:47 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:43:47' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:43:47')
[ 2016-12-05 19:44:34 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:44:34' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:44:34')
[ 2016-12-05 19:44:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:44:38' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:44:38')
[ 2016-12-05 19:44:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:44:44' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:44:44')
[ 2016-12-05 19:44:46 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:44:46' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:44:46')
[ 2016-12-05 19:44:46 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 19:44:46 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 19:44:48 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:44:48' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:44:48')
[ 2016-12-05 19:44:48 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:44:48' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:44:48')
[ 2016-12-05 19:48:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:48:37' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:48:37')
[ 2016-12-05 19:48:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:48:42' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:48:42')
[ 2016-12-05 19:48:52 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:48:52' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:48:52')
[ 2016-12-05 19:48:54 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:48:54' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:48:54')
[ 2016-12-05 19:48:54 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 19:48:54 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 19:49:07 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:49:07' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:49:07')
[ 2016-12-05 19:49:07 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:49:07' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:49:07')
[ 2016-12-05 19:49:20 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:49:20' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:49:20')
[ 2016-12-05 19:49:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:49:28' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:49:28')
[ 2016-12-05 19:50:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:50:18' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:50:18')
[ 2016-12-05 19:50:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'lyc' ; args=('lyc',)
[ 2016-12-05 19:50:18 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `admin` (`username`, `password`, `email`, `vaild`, `isadmin`, `logincount`, `lastlogin`) VALUES ('lyc', 'e10adc3949ba59abbe56e057f20f883e', 'lyc@enjoyfin.com', 1, 0, 0, '2016-12-05 19:50:18'); args=['lyc', 'e10adc3949ba59abbe56e057f20f883e', 'lyc@enjoyfin.com', 1, 0, 0, u'2016-12-05 19:50:18']
[ 2016-12-05 19:50:31 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:50:31' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:50:31')
[ 2016-12-05 19:50:31 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:50:31' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:50:31')
[ 2016-12-05 19:50:31 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:50:31' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:50:31')
[ 2016-12-05 19:50:31 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:50:31' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:50:31')
[ 2016-12-05 19:50:52 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:50:52' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:50:52')
[ 2016-12-05 19:50:55 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:50:55' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:50:55')
[ 2016-12-05 19:50:55 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 19:50:55 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 19:53:49 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:53:49' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:53:49')
[ 2016-12-05 19:53:49 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'yrt81htdwz6bzzqo5t5mwhstb7bpqqkz'  AND `django_session`.`expire_date` > '2016-12-05 19:53:49' ); args=('yrt81htdwz6bzzqo5t5mwhstb7bpqqkz', u'2016-12-05 19:53:49')
[ 2016-12-05 20:04:31 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 20:04:31 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 20:04:31 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 73, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 73, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 20:04:31 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 20:04:31 ] util.py[line:79] execute DEBUG (0.001) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = 'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u'  LIMIT 1; args=(u'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u',)
[ 2016-12-05 20:04:31 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-05 21:04:31' WHERE `django_session`.`session_key` = 'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-05 21:04:31', u'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u')
[ 2016-12-05 20:04:31 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('z150g8bbt3m3sxnm3hstk9yb0wpvqi8u', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-05 21:04:31'); args=(u'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-05 21:04:31')
[ 2016-12-05 20:04:31 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u'  AND `django_session`.`expire_date` > '2016-12-05 20:04:31' ); args=('z150g8bbt3m3sxnm3hstk9yb0wpvqi8u', u'2016-12-05 20:04:31')
[ 2016-12-05 20:04:47 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u'  AND `django_session`.`expire_date` > '2016-12-05 20:04:47' ); args=('z150g8bbt3m3sxnm3hstk9yb0wpvqi8u', u'2016-12-05 20:04:47')
[ 2016-12-05 20:04:47 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:04:47' ; args=(u'2016-12-05 20:04:47',)
[ 2016-12-05 20:09:52 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u'  AND `django_session`.`expire_date` > '2016-12-05 20:09:52' ); args=('z150g8bbt3m3sxnm3hstk9yb0wpvqi8u', u'2016-12-05 20:09:52')
[ 2016-12-05 20:09:52 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u'  AND `django_session`.`expire_date` > '2016-12-05 20:09:52' ); args=('z150g8bbt3m3sxnm3hstk9yb0wpvqi8u', u'2016-12-05 20:09:52')
[ 2016-12-05 20:10:01 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:10:01'  LIMIT 21; args=(u'2016-12-05 20:10:01',)
[ 2016-12-05 20:10:01 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:10:01'  LIMIT 21; args=(u'2016-12-05 20:10:01',)
[ 2016-12-05 20:12:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u'  AND `django_session`.`expire_date` > '2016-12-05 20:12:23' ); args=('z150g8bbt3m3sxnm3hstk9yb0wpvqi8u', u'2016-12-05 20:12:23')
[ 2016-12-05 20:12:25 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:12:25'  LIMIT 21; args=(u'2016-12-05 20:12:25',)
[ 2016-12-05 20:12:25 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:12:25'  LIMIT 21; args=(u'2016-12-05 20:12:25',)
[ 2016-12-05 20:12:26 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:12:25' ; args=(u'2016-12-05 20:12:25',)
[ 2016-12-05 20:13:31 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u'  AND `django_session`.`expire_date` > '2016-12-05 20:13:31' ); args=('z150g8bbt3m3sxnm3hstk9yb0wpvqi8u', u'2016-12-05 20:13:31')
[ 2016-12-05 20:13:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:13:32'  LIMIT 21; args=(u'2016-12-05 20:13:32',)
[ 2016-12-05 20:13:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:13:32'  LIMIT 21; args=(u'2016-12-05 20:13:32',)
[ 2016-12-05 20:13:33 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:13:32' ; args=(u'2016-12-05 20:13:32',)
[ 2016-12-05 20:15:43 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u'  AND `django_session`.`expire_date` > '2016-12-05 20:15:43' ); args=('z150g8bbt3m3sxnm3hstk9yb0wpvqi8u', u'2016-12-05 20:15:43')
[ 2016-12-05 20:15:46 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:15:46'  LIMIT 21; args=(u'2016-12-05 20:15:46',)
[ 2016-12-05 20:15:46 ] util.py[line:79] execute DEBUG (0.002) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:15:46'  LIMIT 21; args=(u'2016-12-05 20:15:46',)
[ 2016-12-05 20:15:46 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:15:46' ; args=(u'2016-12-05 20:15:46',)
[ 2016-12-05 20:16:45 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u'  AND `django_session`.`expire_date` > '2016-12-05 20:16:45' ); args=('z150g8bbt3m3sxnm3hstk9yb0wpvqi8u', u'2016-12-05 20:16:45')
[ 2016-12-05 20:16:47 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:16:47'  LIMIT 21; args=(u'2016-12-05 20:16:47',)
[ 2016-12-05 20:16:47 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:16:47'  LIMIT 21; args=(u'2016-12-05 20:16:47',)
[ 2016-12-05 20:16:48 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:16:47' ; args=(u'2016-12-05 20:16:47',)
[ 2016-12-05 20:17:35 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u'  AND `django_session`.`expire_date` > '2016-12-05 20:17:35' ); args=('z150g8bbt3m3sxnm3hstk9yb0wpvqi8u', u'2016-12-05 20:17:35')
[ 2016-12-05 20:17:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:17:38'  LIMIT 21; args=(u'2016-12-05 20:17:38',)
[ 2016-12-05 20:17:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:17:38'  LIMIT 21; args=(u'2016-12-05 20:17:38',)
[ 2016-12-05 20:17:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:17:38' ; args=(u'2016-12-05 20:17:38',)
[ 2016-12-05 20:47:45 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u'  AND `django_session`.`expire_date` > '2016-12-05 20:47:45' ); args=('z150g8bbt3m3sxnm3hstk9yb0wpvqi8u', u'2016-12-05 20:47:45')
[ 2016-12-05 20:47:47 ] util.py[line:79] execute DEBUG (0.002) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:47:47'  LIMIT 21; args=(u'2016-12-05 20:47:47',)
[ 2016-12-05 20:47:47 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:47:47'  LIMIT 21; args=(u'2016-12-05 20:47:47',)
[ 2016-12-05 20:47:50 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:47:47' ; args=(u'2016-12-05 20:47:47',)
[ 2016-12-05 20:47:50 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:47:47'  LIMIT 21; args=(u'2016-12-05 20:47:47',)
[ 2016-12-05 20:47:50 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:47:47'  LIMIT 21; args=(u'2016-12-05 20:47:47',)
[ 2016-12-05 20:48:27 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u'  AND `django_session`.`expire_date` > '2016-12-05 20:48:27' ); args=('z150g8bbt3m3sxnm3hstk9yb0wpvqi8u', u'2016-12-05 20:48:27')
[ 2016-12-05 20:48:29 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:48:29'  LIMIT 21; args=(u'2016-12-05 20:48:29',)
[ 2016-12-05 20:48:29 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:48:29'  LIMIT 21; args=(u'2016-12-05 20:48:29',)
[ 2016-12-05 20:48:29 ] util.py[line:79] execute DEBUG (0.001) SELECT DISTINCT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:48:29'  LIMIT 21; args=(u'2016-12-05 20:48:29',)
[ 2016-12-05 20:48:29 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:48:29'  LIMIT 21; args=(u'2016-12-05 20:48:29',)
[ 2016-12-05 20:48:29 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:48:29'  LIMIT 21; args=(u'2016-12-05 20:48:29',)
[ 2016-12-05 20:48:57 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u'  AND `django_session`.`expire_date` > '2016-12-05 20:48:57' ); args=('z150g8bbt3m3sxnm3hstk9yb0wpvqi8u', u'2016-12-05 20:48:57')
[ 2016-12-05 20:48:58 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:48:58'  LIMIT 21; args=(u'2016-12-05 20:48:58',)
[ 2016-12-05 20:48:58 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:48:58'  LIMIT 21; args=(u'2016-12-05 20:48:58',)
[ 2016-12-05 20:48:58 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:48:58'  LIMIT 21; args=(u'2016-12-05 20:48:58',)
[ 2016-12-05 20:48:58 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:48:58'  LIMIT 21; args=(u'2016-12-05 20:48:58',)
[ 2016-12-05 20:48:58 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:48:58'  LIMIT 21; args=(u'2016-12-05 20:48:58',)
[ 2016-12-05 20:49:36 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u'  AND `django_session`.`expire_date` > '2016-12-05 20:49:36' ); args=('z150g8bbt3m3sxnm3hstk9yb0wpvqi8u', u'2016-12-05 20:49:36')
[ 2016-12-05 20:49:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:49:38'  LIMIT 21; args=(u'2016-12-05 20:49:38',)
[ 2016-12-05 20:49:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:49:38'  LIMIT 21; args=(u'2016-12-05 20:49:38',)
[ 2016-12-05 20:49:41 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:49:38' ; args=(u'2016-12-05 20:49:38',)
[ 2016-12-05 20:49:41 ] util.py[line:79] execute DEBUG (0.002) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:49:38'  LIMIT 21; args=(u'2016-12-05 20:49:38',)
[ 2016-12-05 20:49:41 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:49:38'  LIMIT 21; args=(u'2016-12-05 20:49:38',)
[ 2016-12-05 20:50:29 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u'  AND `django_session`.`expire_date` > '2016-12-05 20:50:29' ); args=('z150g8bbt3m3sxnm3hstk9yb0wpvqi8u', u'2016-12-05 20:50:29')
[ 2016-12-05 20:50:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:50:32'  LIMIT 21; args=(u'2016-12-05 20:50:32',)
[ 2016-12-05 20:50:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:50:32'  LIMIT 21; args=(u'2016-12-05 20:50:32',)
[ 2016-12-05 20:50:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:50:32' ; args=(u'2016-12-05 20:50:32',)
[ 2016-12-05 20:50:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:50:32'  LIMIT 21; args=(u'2016-12-05 20:50:32',)
[ 2016-12-05 20:50:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:50:32'  LIMIT 21; args=(u'2016-12-05 20:50:32',)
[ 2016-12-05 20:50:51 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u'  AND `django_session`.`expire_date` > '2016-12-05 20:50:51' ); args=('z150g8bbt3m3sxnm3hstk9yb0wpvqi8u', u'2016-12-05 20:50:51')
[ 2016-12-05 20:50:52 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:50:52'  LIMIT 21; args=(u'2016-12-05 20:50:52',)
[ 2016-12-05 20:50:52 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:50:52'  LIMIT 21; args=(u'2016-12-05 20:50:52',)
[ 2016-12-05 20:50:55 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:50:52' ; args=(u'2016-12-05 20:50:52',)
[ 2016-12-05 20:50:55 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:50:52'  LIMIT 21; args=(u'2016-12-05 20:50:52',)
[ 2016-12-05 20:50:55 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:50:52'  LIMIT 21; args=(u'2016-12-05 20:50:52',)
[ 2016-12-05 20:52:58 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u'  AND `django_session`.`expire_date` > '2016-12-05 20:52:58' ); args=('z150g8bbt3m3sxnm3hstk9yb0wpvqi8u', u'2016-12-05 20:52:58')
[ 2016-12-05 20:53:00 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:53:00'  LIMIT 21; args=(u'2016-12-05 20:53:00',)
[ 2016-12-05 20:53:00 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:53:00'  LIMIT 21; args=(u'2016-12-05 20:53:00',)
[ 2016-12-05 20:53:05 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:53:00'  LIMIT 21; args=(u'2016-12-05 20:53:00',)
[ 2016-12-05 20:53:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u'  AND `django_session`.`expire_date` > '2016-12-05 20:53:43' ); args=('z150g8bbt3m3sxnm3hstk9yb0wpvqi8u', u'2016-12-05 20:53:43')
[ 2016-12-05 20:53:46 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:53:46'  LIMIT 21; args=(u'2016-12-05 20:53:46',)
[ 2016-12-05 20:53:46 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 20:53:46'  LIMIT 21; args=(u'2016-12-05 20:53:46',)
[ 2016-12-05 21:01:04 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'z150g8bbt3m3sxnm3hstk9yb0wpvqi8u'  AND `django_session`.`expire_date` > '2016-12-05 21:01:04' ); args=('z150g8bbt3m3sxnm3hstk9yb0wpvqi8u', u'2016-12-05 21:01:04')
[ 2016-12-05 21:01:04 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 21:01:04' ; args=(u'2016-12-05 21:01:04',)
[ 2016-12-05 21:01:04 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 21:01:04'  LIMIT 21; args=(u'2016-12-05 21:01:04',)
[ 2016-12-05 21:02:05 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 21:02:05 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 21:02:05 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 74, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 74, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 21:02:05 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 21:02:05 ] util.py[line:79] execute DEBUG (0.000) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = '9yy5y5mn8ve9s59ff96pyb5ziukpvryh'  LIMIT 1; args=(u'9yy5y5mn8ve9s59ff96pyb5ziukpvryh',)
[ 2016-12-05 21:02:05 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-05 22:02:05' WHERE `django_session`.`session_key` = '9yy5y5mn8ve9s59ff96pyb5ziukpvryh' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-05 22:02:05', u'9yy5y5mn8ve9s59ff96pyb5ziukpvryh')
[ 2016-12-05 21:02:05 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('9yy5y5mn8ve9s59ff96pyb5ziukpvryh', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-05 22:02:05'); args=(u'9yy5y5mn8ve9s59ff96pyb5ziukpvryh', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-05 22:02:05')
[ 2016-12-05 21:02:05 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '9yy5y5mn8ve9s59ff96pyb5ziukpvryh'  AND `django_session`.`expire_date` > '2016-12-05 21:02:05' ); args=('9yy5y5mn8ve9s59ff96pyb5ziukpvryh', u'2016-12-05 21:02:05')
[ 2016-12-05 21:02:05 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 21:02:05' ; args=(u'2016-12-05 21:02:05',)
[ 2016-12-05 21:02:05 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 21:02:05'  LIMIT 21; args=(u'2016-12-05 21:02:05',)
[ 2016-12-05 21:03:55 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '9yy5y5mn8ve9s59ff96pyb5ziukpvryh'  AND `django_session`.`expire_date` > '2016-12-05 21:03:55' ); args=('9yy5y5mn8ve9s59ff96pyb5ziukpvryh', u'2016-12-05 21:03:55')
[ 2016-12-05 21:03:55 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 21:03:55' ; args=(u'2016-12-05 21:03:55',)
[ 2016-12-05 21:03:55 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 21:04:20 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '9yy5y5mn8ve9s59ff96pyb5ziukpvryh'  AND `django_session`.`expire_date` > '2016-12-05 21:04:20' ); args=('9yy5y5mn8ve9s59ff96pyb5ziukpvryh', u'2016-12-05 21:04:20')
[ 2016-12-05 21:04:20 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 21:04:20' ; args=(u'2016-12-05 21:04:20',)
[ 2016-12-05 21:04:20 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 21:36:40 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 21:36:40 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 21:36:40 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 75, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 75, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 21:36:40 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 21:36:40 ] util.py[line:79] execute DEBUG (0.001) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  LIMIT 1; args=(u'hbd7q49eas7clxu5visui3b84bgk066u',)
[ 2016-12-05 21:36:40 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-05 22:36:40' WHERE `django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-05 22:36:40', u'hbd7q49eas7clxu5visui3b84bgk066u')
[ 2016-12-05 21:36:40 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('hbd7q49eas7clxu5visui3b84bgk066u', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-05 22:36:40'); args=(u'hbd7q49eas7clxu5visui3b84bgk066u', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-05 22:36:40')
[ 2016-12-05 21:36:40 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 21:36:40' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 21:36:40')
[ 2016-12-05 21:36:40 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 21:36:40' ; args=(u'2016-12-05 21:36:40',)
[ 2016-12-05 21:36:40 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 21:46:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 21:46:11' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 21:46:11')
[ 2016-12-05 21:51:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 21:51:38' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 21:51:38')
[ 2016-12-05 21:51:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 21:51:38' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 21:51:38')
[ 2016-12-05 21:51:38 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 21:51:38' ; args=(u'2016-12-05 21:51:38',)
[ 2016-12-05 21:51:38 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 21:51:41 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 21:51:41' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 21:51:41')
[ 2016-12-05 21:52:01 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 21:52:01' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 21:52:01')
[ 2016-12-05 21:52:01 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'xx002' ; args=('xx002',)
[ 2016-12-05 21:52:01 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `admin` (`username`, `password`, `email`, `vaild`, `isadmin`, `logincount`, `lastlogin`) VALUES ('xx002', 'e10adc3949ba59abbe56e057f20f883e', 'wx@enjoyfin.com', 1, 0, 0, '2016-12-05 21:52:01'); args=['xx002', 'e10adc3949ba59abbe56e057f20f883e', 'wx@enjoyfin.com', 1, 0, 0, u'2016-12-05 21:52:01']
[ 2016-12-05 22:00:57 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:00:57' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:00:57')
[ 2016-12-05 22:00:57 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:00:57' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:00:57')
[ 2016-12-05 22:00:57 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 22:00:57' ; args=(u'2016-12-05 22:00:57',)
[ 2016-12-05 22:00:57 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:00:57 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 22:00:57'  LIMIT 21; args=(u'2016-12-05 22:00:57',)
[ 2016-12-05 22:00:57 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 22:00:57'  LIMIT 21; args=(u'2016-12-05 22:00:57',)
[ 2016-12-05 22:00:57 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 22:00:57'  LIMIT 21; args=(u'2016-12-05 22:00:57',)
[ 2016-12-05 22:00:57 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 22:00:57'  LIMIT 21; args=(u'2016-12-05 22:00:57',)
[ 2016-12-05 22:00:57 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 22:00:57'  LIMIT 21; args=(u'2016-12-05 22:00:57',)
[ 2016-12-05 22:00:57 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 22:00:57'  LIMIT 21; args=(u'2016-12-05 22:00:57',)
[ 2016-12-05 22:01:22 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:01:22' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:01:22')
[ 2016-12-05 22:01:22 ] util.py[line:79] execute DEBUG (0.002) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 22:01:22' ; args=(u'2016-12-05 22:01:22',)
[ 2016-12-05 22:01:22 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:01:25 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:01:24' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:01:24')
[ 2016-12-05 22:01:27 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:01:27' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:01:27')
[ 2016-12-05 22:01:27 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:01:27' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:01:27')
[ 2016-12-05 22:01:27 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 22:01:27' ; args=(u'2016-12-05 22:01:27',)
[ 2016-12-05 22:01:27 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:01:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:01:28' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:01:28')
[ 2016-12-05 22:01:28 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', `expire_date` = '2016-12-05 23:01:28' WHERE `django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u' ; args=(u'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', u'2016-12-05 23:01:28', 'hbd7q49eas7clxu5visui3b84bgk066u')
[ 2016-12-05 22:01:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:01:28' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:01:28')
[ 2016-12-05 22:01:36 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 22:01:36 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 22:01:36 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 76, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 76, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 22:01:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 22:01:37 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:01:37' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:01:37')
[ 2016-12-05 22:01:37 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-05 23:01:37' WHERE `django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-05 23:01:37', 'hbd7q49eas7clxu5visui3b84bgk066u')
[ 2016-12-05 22:01:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:01:37' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:01:37')
[ 2016-12-05 22:01:37 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 22:01:37' ; args=(u'2016-12-05 22:01:37',)
[ 2016-12-05 22:01:37 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:01:41 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:01:41' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:01:41')
[ 2016-12-05 22:01:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:01:43' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:01:43')
[ 2016-12-05 22:01:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:01:43' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:01:43')
[ 2016-12-05 22:01:43 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 22:01:43' ; args=(u'2016-12-05 22:01:43',)
[ 2016-12-05 22:01:43 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:01:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:01:44' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:01:44')
[ 2016-12-05 22:01:44 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:01:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 22:03:27 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:03:27' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:03:27')
[ 2016-12-05 22:03:27 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:03:27 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 20; args=()
[ 2016-12-05 22:03:27 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:03:27' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:03:27')
[ 2016-12-05 22:03:27 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:03:27 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 30; args=()
[ 2016-12-05 22:03:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:03:28' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:03:28')
[ 2016-12-05 22:03:28 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:03:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 60; args=()
[ 2016-12-05 22:03:29 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:03:29' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:03:29')
[ 2016-12-05 22:03:29 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:03:29 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 80; args=()
[ 2016-12-05 22:03:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:03:32' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:03:32')
[ 2016-12-05 22:03:32 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:03:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 110; args=()
[ 2016-12-05 22:03:37 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:03:37' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:03:37')
[ 2016-12-05 22:03:37 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin` WHERE `admin`.`username` LIKE '%xx%' ; args=(u'%xx%',)
[ 2016-12-05 22:03:37 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` LIKE '%xx%'  ORDER BY `admin`.`username` ASC LIMIT 10; args=(u'%xx%',)
[ 2016-12-05 22:03:40 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:03:40' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:03:40')
[ 2016-12-05 22:03:40 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin` WHERE `admin`.`username` LIKE '%xx%' ; args=(u'%xx%',)
[ 2016-12-05 22:03:40 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` LIKE '%xx%'  ORDER BY `admin`.`username` ASC LIMIT 10 OFFSET 20; args=(u'%xx%',)
[ 2016-12-05 22:03:48 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:03:48' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:03:48')
[ 2016-12-05 22:03:48 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin` WHERE `admin`.`username` LIKE '%xx%' ; args=(u'%xx%',)
[ 2016-12-05 22:03:48 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` LIKE '%xx%'  ORDER BY `admin`.`username` ASC LIMIT 10 OFFSET 100; args=(u'%xx%',)
[ 2016-12-05 22:03:52 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:03:52' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:03:52')
[ 2016-12-05 22:03:52 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin` WHERE `admin`.`username` LIKE '%xx%' ; args=(u'%xx%',)
[ 2016-12-05 22:03:52 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` LIKE '%xx%'  ORDER BY `admin`.`username` ASC LIMIT 10 OFFSET 140; args=(u'%xx%',)
[ 2016-12-05 22:03:55 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:03:55' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:03:55')
[ 2016-12-05 22:03:55 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:03:55' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:03:55')
[ 2016-12-05 22:03:55 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 22:03:55' ; args=(u'2016-12-05 22:03:55',)
[ 2016-12-05 22:03:55 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:03:56 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:03:56' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:03:56')
[ 2016-12-05 22:03:56 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:03:56' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:03:56')
[ 2016-12-05 22:03:56 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 22:03:56' ; args=(u'2016-12-05 22:03:56',)
[ 2016-12-05 22:03:56 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:03:58 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:03:58' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:03:58')
[ 2016-12-05 22:23:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:23:37' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:23:37')
[ 2016-12-05 22:24:14 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:24:14' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:24:14')
[ 2016-12-05 22:25:15 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:25:15' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:25:15')
[ 2016-12-05 22:26:00 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:26:00' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:26:00')
[ 2016-12-05 22:27:06 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:27:06' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:27:06')
[ 2016-12-05 22:27:06 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=('ouyang1',)
[ 2016-12-05 22:27:06 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `admin` (`username`, `password`, `email`, `vaild`, `isadmin`, `logincount`, `lastlogin`) VALUES ('ouyang1', 'e10adc3949ba59abbe56e057f20f883e', 'xiaote@enjoyfin.com', 1, 0, 0, '2016-12-05 22:27:06'); args=['ouyang1', 'e10adc3949ba59abbe56e057f20f883e', 'xiaote@enjoyfin.com', 1, 0, 0, u'2016-12-05 22:27:06']
[ 2016-12-05 22:27:20 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:27:20' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:27:20')
[ 2016-12-05 22:27:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:27:44' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:27:44')
[ 2016-12-05 22:27:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=('ouyang2',)
[ 2016-12-05 22:27:44 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `admin` (`username`, `password`, `email`, `vaild`, `isadmin`, `logincount`, `lastlogin`) VALUES ('ouyang2', 'e10adc3949ba59abbe56e057f20f883e', 'ouyangzhen@enjoyfin.com', 1, 0, 0, '2016-12-05 22:27:44'); args=['ouyang2', 'e10adc3949ba59abbe56e057f20f883e', 'ouyangzhen@enjoyfin.com', 1, 0, 0, u'2016-12-05 22:27:44']
[ 2016-12-05 22:30:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:30:38' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:30:38')
[ 2016-12-05 22:30:38 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:30:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 22:30:41 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:30:41' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:30:41')
[ 2016-12-05 22:30:41 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:30:41 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 320; args=()
[ 2016-12-05 22:30:43 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:30:43' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:30:43')
[ 2016-12-05 22:30:43 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=(u'ouyang2',)
[ 2016-12-05 22:30:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=(u'ouyang2',)
[ 2016-12-05 22:30:43 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang2', '7c68f875615b4e92b8a79d75e8e2191a', '2016-12-05 22:30:43'); args=[u'ouyang2', '7c68f875615b4e92b8a79d75e8e2191a', u'2016-12-05 22:30:43']
[ 2016-12-05 22:30:46 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:30:46' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:30:46')
[ 2016-12-05 22:30:46 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:30:46 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:30:46 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang1', '8aae49faa74e4500a711099521118e49', '2016-12-05 22:30:46'); args=[u'ouyang1', '8aae49faa74e4500a711099521118e49', u'2016-12-05 22:30:46']
[ 2016-12-05 22:33:22 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:33:22' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:33:22')
[ 2016-12-05 22:33:22 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:33:23 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:33:23 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang1', '2e0a1ef8883c4b69afd8b6210ec8347e', '2016-12-05 22:33:23'); args=[u'ouyang1', '2e0a1ef8883c4b69afd8b6210ec8347e', u'2016-12-05 22:33:23']
[ 2016-12-05 22:34:02 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:34:02' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:34:02')
[ 2016-12-05 22:34:02 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:34:02 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 320; args=()
[ 2016-12-05 22:34:04 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:34:04' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:34:04')
[ 2016-12-05 22:34:04 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:34:04 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:34:04 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang1', '4015a21349014963a9fb0b87f93dec2d', '2016-12-05 22:34:04'); args=[u'ouyang1', '4015a21349014963a9fb0b87f93dec2d', u'2016-12-05 22:34:04']
[ 2016-12-05 22:35:12 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:35:12' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:35:12')
[ 2016-12-05 22:35:12 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:35:12 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 320; args=()
[ 2016-12-05 22:35:14 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:35:14' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:35:14')
[ 2016-12-05 22:35:14 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:35:14 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:35:14 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang1', 'df303a1a731b4a6082d70ffdec141d20', '2016-12-05 22:35:14'); args=[u'ouyang1', 'df303a1a731b4a6082d70ffdec141d20', u'2016-12-05 22:35:14']
[ 2016-12-05 22:35:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:35:19' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:35:19')
[ 2016-12-05 22:35:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:35:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:35:19 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang1', '8034d269794445d58ab25656d42bcb80', '2016-12-05 22:35:19'); args=[u'ouyang1', '8034d269794445d58ab25656d42bcb80', u'2016-12-05 22:35:19']
[ 2016-12-05 22:35:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:35:23' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:35:23')
[ 2016-12-05 22:35:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:35:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:35:23 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang1', 'e6bb1b702521431199951687bbdbc3bf', '2016-12-05 22:35:23'); args=[u'ouyang1', 'e6bb1b702521431199951687bbdbc3bf', u'2016-12-05 22:35:23']
[ 2016-12-05 22:35:24 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:35:24' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:35:24')
[ 2016-12-05 22:35:24 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:35:24 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:35:24 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang1', '88ac35a23c9d4b86b79ad6eae60eb206', '2016-12-05 22:35:24'); args=[u'ouyang1', '88ac35a23c9d4b86b79ad6eae60eb206', u'2016-12-05 22:35:24']
[ 2016-12-05 22:35:24 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:35:24' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:35:24')
[ 2016-12-05 22:35:24 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:35:24 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:35:24 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang1', '64e387d2db7c4ce3ab998bff76453326', '2016-12-05 22:35:24'); args=[u'ouyang1', '64e387d2db7c4ce3ab998bff76453326', u'2016-12-05 22:35:24']
[ 2016-12-05 22:35:24 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:35:24' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:35:24')
[ 2016-12-05 22:35:25 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:35:25 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:35:25 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang1', '824cf492af2847cd8e9d8dd2340f2b34', '2016-12-05 22:35:25'); args=[u'ouyang1', '824cf492af2847cd8e9d8dd2340f2b34', u'2016-12-05 22:35:25']
[ 2016-12-05 22:35:26 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:35:26' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:35:26')
[ 2016-12-05 22:35:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:35:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:35:26 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang1', '80e9ae3805f645bf8dcdd909e5a46e40', '2016-12-05 22:35:26'); args=[u'ouyang1', '80e9ae3805f645bf8dcdd909e5a46e40', u'2016-12-05 22:35:26']
[ 2016-12-05 22:35:27 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:35:27' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:35:27')
[ 2016-12-05 22:35:27 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=(u'ouyang2',)
[ 2016-12-05 22:35:27 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=(u'ouyang2',)
[ 2016-12-05 22:35:27 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang2', '309d655e0b5b4898b02cf929b125a824', '2016-12-05 22:35:27'); args=[u'ouyang2', '309d655e0b5b4898b02cf929b125a824', u'2016-12-05 22:35:27']
[ 2016-12-05 22:35:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:35:28' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:35:28')
[ 2016-12-05 22:35:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:35:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:35:28 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang1', 'd91ce9176c5d4ed08f88f37d44fbe269', '2016-12-05 22:35:28'); args=[u'ouyang1', 'd91ce9176c5d4ed08f88f37d44fbe269', u'2016-12-05 22:35:28']
[ 2016-12-05 22:36:40 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:36:40' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:36:40')
[ 2016-12-05 22:36:40 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=(u'ouyang2',)
[ 2016-12-05 22:36:40 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=(u'ouyang2',)
[ 2016-12-05 22:36:40 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang2', 'b0dd2efdb6ed480c9f414e0136fb1676', '2016-12-05 22:36:40'); args=[u'ouyang2', 'b0dd2efdb6ed480c9f414e0136fb1676', u'2016-12-05 22:36:40']
[ 2016-12-05 22:36:46 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:36:46' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:36:46')
[ 2016-12-05 22:36:46 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:36:46 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 320; args=()
[ 2016-12-05 22:36:50 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:36:50' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:36:50')
[ 2016-12-05 22:36:50 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=(u'ouyang2',)
[ 2016-12-05 22:36:50 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=(u'ouyang2',)
[ 2016-12-05 22:36:50 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang2', '4d83e8d10f8142fe8d3763b3ba4b2394', '2016-12-05 22:36:50'); args=[u'ouyang2', '4d83e8d10f8142fe8d3763b3ba4b2394', u'2016-12-05 22:36:50']
[ 2016-12-05 22:36:52 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:36:52' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:36:52')
[ 2016-12-05 22:36:52 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:36:52 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:36:52 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang1', 'ee380c90cfcf412a8e04e2c4d32ec29e', '2016-12-05 22:36:52'); args=[u'ouyang1', 'ee380c90cfcf412a8e04e2c4d32ec29e', u'2016-12-05 22:36:52']
[ 2016-12-05 22:36:53 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:36:53' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:36:53')
[ 2016-12-05 22:36:53 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:36:53 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:36:53 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang1', '91b45ad0b624466a9e2e3ea48ce64cc7', '2016-12-05 22:36:53'); args=[u'ouyang1', '91b45ad0b624466a9e2e3ea48ce64cc7', u'2016-12-05 22:36:53']
[ 2016-12-05 22:36:53 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:36:53' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:36:53')
[ 2016-12-05 22:36:53 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:36:53 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:36:53 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang1', '1ac6ee580b53499f8a089b77d6a72e79', '2016-12-05 22:36:53'); args=[u'ouyang1', '1ac6ee580b53499f8a089b77d6a72e79', u'2016-12-05 22:36:53']
[ 2016-12-05 22:37:01 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:37:01' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:37:01')
[ 2016-12-05 22:37:01 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:37:01 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 320; args=()
[ 2016-12-05 22:37:04 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:37:04' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:37:04')
[ 2016-12-05 22:37:04 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', `expire_date` = '2016-12-05 23:37:04' WHERE `django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u' ; args=(u'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', u'2016-12-05 23:37:04', 'hbd7q49eas7clxu5visui3b84bgk066u')
[ 2016-12-05 22:37:04 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:37:04' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:37:04')
[ 2016-12-05 22:37:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 22:37:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 22:37:11 ] util.py[line:79] execute DEBUG (0.001) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 77, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 77, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 22:37:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 22:37:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:37:11' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:37:11')
[ 2016-12-05 22:37:11 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-05 23:37:11' WHERE `django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-05 23:37:11', 'hbd7q49eas7clxu5visui3b84bgk066u')
[ 2016-12-05 22:37:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:37:11' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:37:11')
[ 2016-12-05 22:37:11 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 22:37:11' ; args=(u'2016-12-05 22:37:11',)
[ 2016-12-05 22:37:11 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:37:14 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:37:14' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:37:14')
[ 2016-12-05 22:37:16 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:37:16' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:37:16')
[ 2016-12-05 22:37:16 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:37:16 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 22:37:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:37:19' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:37:19')
[ 2016-12-05 22:37:19 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:37:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 320; args=()
[ 2016-12-05 22:37:20 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:37:20' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:37:20')
[ 2016-12-05 22:37:20 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:37:20 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:37:20 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang1', '2d558e22e62c44f1b2e087904c1b46eb', '2016-12-05 22:37:20'); args=[u'ouyang1', '2d558e22e62c44f1b2e087904c1b46eb', u'2016-12-05 22:37:20']
[ 2016-12-05 22:37:30 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:37:30' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:37:30')
[ 2016-12-05 22:37:30 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'xx001' ; args=(u'xx001',)
[ 2016-12-05 22:37:30 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'xx001' ; args=(u'xx001',)
[ 2016-12-05 22:37:30 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('xx001', 'dc1df5d449d743fd9b6d18ece28e253a', '2016-12-05 22:37:30'); args=[u'xx001', 'dc1df5d449d743fd9b6d18ece28e253a', u'2016-12-05 22:37:30']
[ 2016-12-05 22:37:31 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:37:31' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:37:31')
[ 2016-12-05 22:37:31 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'xx001' ; args=(u'xx001',)
[ 2016-12-05 22:37:31 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'xx001' ; args=(u'xx001',)
[ 2016-12-05 22:37:31 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('xx001', '42b91f357fda4d209016abb7409a9f67', '2016-12-05 22:37:31'); args=[u'xx001', '42b91f357fda4d209016abb7409a9f67', u'2016-12-05 22:37:31']
[ 2016-12-05 22:37:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:37:32' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:37:32')
[ 2016-12-05 22:37:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:37:32' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:37:32')
[ 2016-12-05 22:37:32 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 22:37:32' ; args=(u'2016-12-05 22:37:32',)
[ 2016-12-05 22:37:32 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:37:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:37:59' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:37:59')
[ 2016-12-05 22:37:59 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:37:59' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:37:59')
[ 2016-12-05 22:37:59 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 22:37:59' ; args=(u'2016-12-05 22:37:59',)
[ 2016-12-05 22:37:59 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:38:02 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:38:02' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:38:02')
[ 2016-12-05 22:38:04 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:38:04' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:38:04')
[ 2016-12-05 22:38:04 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:38:04 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 22:38:06 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:38:06' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:38:06')
[ 2016-12-05 22:38:06 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:38:06 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 320; args=()
[ 2016-12-05 22:38:08 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:38:08' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:38:08')
[ 2016-12-05 22:38:08 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:38:08 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:38:08 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang1', '7addf4fde4f746ddae8903c9a32819f8', '2016-12-05 22:38:08'); args=[u'ouyang1', '7addf4fde4f746ddae8903c9a32819f8', u'2016-12-05 22:38:08']
[ 2016-12-05 22:38:12 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:38:12' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:38:12')
[ 2016-12-05 22:38:12 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=(u'ouyang2',)
[ 2016-12-05 22:38:12 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=(u'ouyang2',)
[ 2016-12-05 22:38:12 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang2', '732671100b3c4ad4bab3637eb58dd7b8', '2016-12-05 22:38:12'); args=[u'ouyang2', '732671100b3c4ad4bab3637eb58dd7b8', u'2016-12-05 22:38:12']
[ 2016-12-05 22:38:47 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:38:47' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:38:47')
[ 2016-12-05 22:38:47 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:38:47 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 320; args=()
[ 2016-12-05 22:38:49 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:38:49' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:38:49')
[ 2016-12-05 22:38:49 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:38:49 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:38:49 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang1', 'b802fdf435ea48c7bce89062d21b396f', '2016-12-05 22:38:49'); args=[u'ouyang1', 'b802fdf435ea48c7bce89062d21b396f', u'2016-12-05 22:38:49']
[ 2016-12-05 22:39:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:39:38' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:39:38')
[ 2016-12-05 22:39:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:39:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:39:38 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang1', '96274b0eb77b410e94dd727cd6ff1cb2', '2016-12-05 22:39:38'); args=[u'ouyang1', '96274b0eb77b410e94dd727cd6ff1cb2', u'2016-12-05 22:39:38']
[ 2016-12-05 22:40:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:40:18' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:40:18')
[ 2016-12-05 22:40:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:40:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:40:18 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang1', 'bfe5a8e1cd164b3392256c986454c5f5', '2016-12-05 22:40:18'); args=[u'ouyang1', 'bfe5a8e1cd164b3392256c986454c5f5', u'2016-12-05 22:40:18']
[ 2016-12-05 22:42:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:42:11' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:42:11')
[ 2016-12-05 22:42:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:42:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:42:11 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang1', 'b1920cb7c7ed4c2ca51294609afb56a2', '2016-12-05 22:42:11'); args=[u'ouyang1', 'b1920cb7c7ed4c2ca51294609afb56a2', u'2016-12-05 22:42:11']
[ 2016-12-05 22:43:21 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:43:21' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:43:21')
[ 2016-12-05 22:43:21 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:43:21 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang1' ; args=(u'ouyang1',)
[ 2016-12-05 22:43:21 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang1', '35cf2192be38442486b9b3883d760e76', '2016-12-05 22:43:21'); args=[u'ouyang1', '35cf2192be38442486b9b3883d760e76', u'2016-12-05 22:43:21']
[ 2016-12-05 22:47:27 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:47:27' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:47:27')
[ 2016-12-05 22:47:27 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:47:27 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 22:47:29 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:47:29' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:47:29')
[ 2016-12-05 22:47:29 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:47:29 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 320; args=()
[ 2016-12-05 22:47:33 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:47:33' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:47:33')
[ 2016-12-05 22:47:33 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=(u'ouyang2',)
[ 2016-12-05 22:47:33 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=(u'ouyang2',)
[ 2016-12-05 22:47:33 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang2', '9cee4182c3aa44c391fe26355a51a436', '2016-12-05 22:47:33'); args=[u'ouyang2', '9cee4182c3aa44c391fe26355a51a436', u'2016-12-05 22:47:33']
[ 2016-12-05 22:47:58 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'ouyang2'  AND `user_chpass`.`passuuid` = '9cee4182c3aa44c391fe26355a51a436' ); args=(u'ouyang2', u'9cee4182c3aa44c391fe26355a51a436')
[ 2016-12-05 22:48:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=(u'ouyang2',)
[ 2016-12-05 22:48:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'ouyang2'  AND `user_chpass`.`passuuid` = '9cee4182c3aa44c391fe26355a51a436' ); args=('ouyang2', '9cee4182c3aa44c391fe26355a51a436')
[ 2016-12-05 22:48:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=(u'ouyang2',)
[ 2016-12-05 22:48:19 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'ouyang2', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'ouyangzhen@enjoyfin.com', `vaild` = 1, `isadmin` = 0, `logincount` = 0, `lastlogin` = '2016-12-05 22:27:44' WHERE `admin`.`id` = 511 ; args=(u'ouyang2', '25d55ad283aa400af464c76d713c07ad', u'ouyangzhen@enjoyfin.com', 1, 0, 0, u'2016-12-05 22:27:44', 511)
[ 2016-12-05 22:48:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_chpass`.`id`, `user_chpass`.`username`, `user_chpass`.`passuuid`, `user_chpass`.`ctime` FROM `user_chpass` WHERE (`user_chpass`.`username` = 'ouyang2'  AND `user_chpass`.`passuuid` = '9cee4182c3aa44c391fe26355a51a436' ); args=(u'ouyang2', u'9cee4182c3aa44c391fe26355a51a436')
[ 2016-12-05 22:48:19 ] util.py[line:79] execute DEBUG (0.000) DELETE FROM `user_chpass` WHERE `id` IN (40); args=(40,)
[ 2016-12-05 22:48:37 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=('ouyang2',)
[ 2016-12-05 22:48:37 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=('ouyang2',)
[ 2016-12-05 22:48:37 ] util.py[line:79] execute DEBUG (0.001) UPDATE `admin` SET `username` = 'ouyang2', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'ouyangzhen@enjoyfin.com', `vaild` = 1, `isadmin` = 0, `logincount` = 1, `lastlogin` = '2016-12-05 22:27:44' WHERE `admin`.`id` = 511 ; args=(u'ouyang2', u'25d55ad283aa400af464c76d713c07ad', u'ouyangzhen@enjoyfin.com', 1, 0, 1, u'2016-12-05 22:27:44', 511)
[ 2016-12-05 22:48:37 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=('ouyang2',)
[ 2016-12-05 22:48:37 ] util.py[line:79] execute DEBUG (0.001) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = 'sgtjwlj3clne7empfkps71we21opql0h'  LIMIT 1; args=(u'sgtjwlj3clne7empfkps71we21opql0h',)
[ 2016-12-05 22:48:37 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'ZTY0N2UzMmVmYzY4Y2QzODFkMWZmODQyNTY4YWIwMDgyMjIyZDNlYzp7InVzZXJuYW1lIjoib3V5YW5nMiIsImlzYWRtaW4iOjAsIl9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', `expire_date` = '2016-12-05 23:48:37' WHERE `django_session`.`session_key` = 'sgtjwlj3clne7empfkps71we21opql0h' ; args=(u'ZTY0N2UzMmVmYzY4Y2QzODFkMWZmODQyNTY4YWIwMDgyMjIyZDNlYzp7InVzZXJuYW1lIjoib3V5YW5nMiIsImlzYWRtaW4iOjAsIl9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', u'2016-12-05 23:48:37', u'sgtjwlj3clne7empfkps71we21opql0h')
[ 2016-12-05 22:48:37 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('sgtjwlj3clne7empfkps71we21opql0h', 'ZTY0N2UzMmVmYzY4Y2QzODFkMWZmODQyNTY4YWIwMDgyMjIyZDNlYzp7InVzZXJuYW1lIjoib3V5YW5nMiIsImlzYWRtaW4iOjAsIl9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', '2016-12-05 23:48:37'); args=(u'sgtjwlj3clne7empfkps71we21opql0h', u'ZTY0N2UzMmVmYzY4Y2QzODFkMWZmODQyNTY4YWIwMDgyMjIyZDNlYzp7InVzZXJuYW1lIjoib3V5YW5nMiIsImlzYWRtaW4iOjAsIl9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', u'2016-12-05 23:48:37')
[ 2016-12-05 22:48:37 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'sgtjwlj3clne7empfkps71we21opql0h'  AND `django_session`.`expire_date` > '2016-12-05 22:48:37' ); args=('sgtjwlj3clne7empfkps71we21opql0h', u'2016-12-05 22:48:37')
[ 2016-12-05 22:48:37 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 22:48:37' ; args=(u'2016-12-05 22:48:37',)
[ 2016-12-05 22:48:37 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:48:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:48:43' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:48:43')
[ 2016-12-05 22:48:43 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:48:43 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 22:48:45 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:48:45' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:48:45')
[ 2016-12-05 22:48:45 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:48:45 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:48:45 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', '83e5ed4fb4bd4c0987d4500833dba118', '2016-12-05 22:48:45'); args=[u'chenyh', '83e5ed4fb4bd4c0987d4500833dba118', u'2016-12-05 22:48:45']
[ 2016-12-05 22:48:57 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'sgtjwlj3clne7empfkps71we21opql0h'  AND `django_session`.`expire_date` > '2016-12-05 22:48:57' ); args=('sgtjwlj3clne7empfkps71we21opql0h', u'2016-12-05 22:48:57')
[ 2016-12-05 22:49:00 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'sgtjwlj3clne7empfkps71we21opql0h'  AND `django_session`.`expire_date` > '2016-12-05 22:49:00' ); args=('sgtjwlj3clne7empfkps71we21opql0h', u'2016-12-05 22:49:00')
[ 2016-12-05 22:49:00 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'sgtjwlj3clne7empfkps71we21opql0h'  AND `django_session`.`expire_date` > '2016-12-05 22:49:00' ); args=('sgtjwlj3clne7empfkps71we21opql0h', u'2016-12-05 22:49:00')
[ 2016-12-05 22:49:00 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 22:49:00' ; args=(u'2016-12-05 22:49:00',)
[ 2016-12-05 22:49:00 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:49:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:49:23' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:49:23')
[ 2016-12-05 22:49:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:49:23 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:49:23 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', '69736786724d40aa9bcb1540d27f507e', '2016-12-05 22:49:23'); args=[u'chenyh', '69736786724d40aa9bcb1540d27f507e', u'2016-12-05 22:49:23']
[ 2016-12-05 22:50:13 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:50:13' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:50:13')
[ 2016-12-05 22:50:13 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:50:13 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 22:50:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:50:15' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:50:15')
[ 2016-12-05 22:50:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:50:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:50:15 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', '54f533dbc3bd496992cf7c4e77cfde97', '2016-12-05 22:50:15'); args=[u'chenyh', '54f533dbc3bd496992cf7c4e77cfde97', u'2016-12-05 22:50:15']
[ 2016-12-05 22:53:35 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:53:35' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:53:35')
[ 2016-12-05 22:53:35 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:53:35 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 22:53:36 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:53:36' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:53:36')
[ 2016-12-05 22:53:36 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:53:36 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:53:36 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', '626730e1b039401db3eb730a3f347170', '2016-12-05 22:53:36'); args=[u'chenyh', '626730e1b039401db3eb730a3f347170', u'2016-12-05 22:53:36']
[ 2016-12-05 22:54:27 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:54:27' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:54:27')
[ 2016-12-05 22:54:27 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:54:27 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 22:54:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:54:32' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:54:32')
[ 2016-12-05 22:54:32 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:54:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 22:54:34 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:54:34' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:54:34')
[ 2016-12-05 22:54:34 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:54:34 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:54:34 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', 'b6ee857211874cf29d0ebbe307fa5de7', '2016-12-05 22:54:34'); args=[u'chenyh', 'b6ee857211874cf29d0ebbe307fa5de7', u'2016-12-05 22:54:34']
[ 2016-12-05 22:55:12 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:55:12' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:55:12')
[ 2016-12-05 22:55:12 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:55:12 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 22:55:14 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:55:14' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:55:14')
[ 2016-12-05 22:55:14 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:55:14 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:55:14 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', '0600bb84fe1b42bba83e0f7b4c3cc3d9', '2016-12-05 22:55:14'); args=[u'chenyh', '0600bb84fe1b42bba83e0f7b4c3cc3d9', u'2016-12-05 22:55:14']
[ 2016-12-05 22:55:58 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:55:58' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:55:58')
[ 2016-12-05 22:55:58 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:55:58 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:55:58 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', 'd48e846511a04861ab4aabe7aebf48de', '2016-12-05 22:55:58'); args=[u'chenyh', 'd48e846511a04861ab4aabe7aebf48de', u'2016-12-05 22:55:58']
[ 2016-12-05 22:56:02 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:56:02' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:56:02')
[ 2016-12-05 22:56:02 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:56:02 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 22:56:05 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:56:05' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:56:05')
[ 2016-12-05 22:56:05 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:56:05 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:56:05 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', '519c888cd4624112968fce143857155b', '2016-12-05 22:56:05'); args=[u'chenyh', '519c888cd4624112968fce143857155b', u'2016-12-05 22:56:05']
[ 2016-12-05 22:56:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:56:19' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:56:19')
[ 2016-12-05 22:56:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:56:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:56:19 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', '2ccdf09706f14533b9aa3463ac2ff7c5', '2016-12-05 22:56:19'); args=[u'chenyh', '2ccdf09706f14533b9aa3463ac2ff7c5', u'2016-12-05 22:56:19']
[ 2016-12-05 22:56:21 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:56:21' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:56:21')
[ 2016-12-05 22:56:21 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:56:21 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 22:56:23 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:56:23' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:56:23')
[ 2016-12-05 22:56:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:56:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:56:23 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', '4b1fd7a5be744a28aa54b5f763d814da', '2016-12-05 22:56:23'); args=[u'chenyh', '4b1fd7a5be744a28aa54b5f763d814da', u'2016-12-05 22:56:23']
[ 2016-12-05 22:56:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:56:37' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:56:37')
[ 2016-12-05 22:56:37 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:56:37 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 22:56:39 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:56:39' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:56:39')
[ 2016-12-05 22:56:39 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:56:39 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:56:39 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', 'b7bd19e61c0549afa266d692556cfd30', '2016-12-05 22:56:39'); args=[u'chenyh', 'b7bd19e61c0549afa266d692556cfd30', u'2016-12-05 22:56:39']
[ 2016-12-05 22:57:26 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:57:26' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:57:26')
[ 2016-12-05 22:57:26 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:57:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 22:57:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:57:28' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:57:28')
[ 2016-12-05 22:57:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:57:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:57:28 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', 'edb6a72bf4554e55982196041856493a', '2016-12-05 22:57:28'); args=[u'chenyh', 'edb6a72bf4554e55982196041856493a', u'2016-12-05 22:57:28']
[ 2016-12-05 22:57:53 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:57:53' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:57:53')
[ 2016-12-05 22:57:53 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:57:53 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 22:57:55 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:57:55' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:57:55')
[ 2016-12-05 22:57:55 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:57:55 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:57:55 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', '21baf598298e4e7fbe3500807fc784af', '2016-12-05 22:57:55'); args=[u'chenyh', '21baf598298e4e7fbe3500807fc784af', u'2016-12-05 22:57:55']
[ 2016-12-05 22:58:41 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:58:41' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:58:41')
[ 2016-12-05 22:58:41 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:58:41 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 22:58:42 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:58:42' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:58:42')
[ 2016-12-05 22:58:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:58:42 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 22:58:42 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('chenyh', '9515e309ef604705987dbb9da866a005', '2016-12-05 22:58:42'); args=[u'chenyh', '9515e309ef604705987dbb9da866a005', u'2016-12-05 22:58:42']
[ 2016-12-05 22:59:27 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:59:27' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:59:27')
[ 2016-12-05 22:59:27 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 22:59:27 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 320; args=()
[ 2016-12-05 22:59:29 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 22:59:29' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 22:59:29')
[ 2016-12-05 22:59:29 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=(u'ouyang2',)
[ 2016-12-05 22:59:29 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=(u'ouyang2',)
[ 2016-12-05 22:59:29 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_chpass` (`username`, `passuuid`, `ctime`) VALUES ('ouyang2', '5e55de461d5b40f78083cab5a0b926ad', '2016-12-05 22:59:29'); args=[u'ouyang2', '5e55de461d5b40f78083cab5a0b926ad', u'2016-12-05 22:59:29']
[ 2016-12-05 23:01:27 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:01:27' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:01:27')
[ 2016-12-05 23:01:27 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=(u'chenyh',)
[ 2016-12-05 23:01:33 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:01:33' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:01:33')
[ 2016-12-05 23:01:33 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = '172.19.20.211' ; args=(u'172.19.20.211',)
[ 2016-12-05 23:01:36 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:01:36' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:01:36')
[ 2016-12-05 23:01:37 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:01:36' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:01:36')
[ 2016-12-05 23:01:37 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 23:01:37' ; args=(u'2016-12-05 23:01:37',)
[ 2016-12-05 23:01:37 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 23:01:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:01:38' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:01:38')
[ 2016-12-05 23:01:40 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:01:40' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:01:40')
[ 2016-12-05 23:01:43 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:01:43' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:01:43')
[ 2016-12-05 23:01:43 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 23:01:43 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 23:01:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:01:44' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:01:44')
[ 2016-12-05 23:01:44 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 23:01:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 320; args=()
[ 2016-12-05 23:01:52 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:01:52' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:01:52')
[ 2016-12-05 23:01:52 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=(u'ouyang2',)
[ 2016-12-05 23:02:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:02:59' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:02:59')
[ 2016-12-05 23:02:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=(u'ouyang2',)
[ 2016-12-05 23:03:08 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:03:07' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:03:07')
[ 2016-12-05 23:03:08 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=('ouyang2',)
[ 2016-12-05 23:03:08 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'ouyang2', `password` = 'e10adc3949ba59abbe56e057f20f883e', `email` = 'ouyangzhen@enjoyfin.com', `vaild` = 1, `isadmin` = 0, `logincount` = 1, `lastlogin` = '2016-12-05 22:27:44' WHERE `admin`.`id` = 511 ; args=(u'ouyang2', 'e10adc3949ba59abbe56e057f20f883e', 'ouyangzhen@enjoyfin.com', 1, 0, 1, u'2016-12-05 22:27:44', 511)
[ 2016-12-05 23:05:56 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:05:56' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:05:56')
[ 2016-12-05 23:05:56 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:05:56' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:05:56')
[ 2016-12-05 23:05:56 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 23:05:56' ; args=(u'2016-12-05 23:05:56',)
[ 2016-12-05 23:05:56 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 23:05:58 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:05:58' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:05:58')
[ 2016-12-05 23:06:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:06:11' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:06:11')
[ 2016-12-05 23:06:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'x123456' ; args=('x123456',)
[ 2016-12-05 23:06:11 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `admin` (`username`, `password`, `email`, `vaild`, `isadmin`, `logincount`, `lastlogin`) VALUES ('x123456', 'e10adc3949ba59abbe56e057f20f883e', 'xiaote@enjoyfin.com', 1, 0, 0, '2016-12-05 23:06:11'); args=['x123456', 'e10adc3949ba59abbe56e057f20f883e', 'xiaote@enjoyfin.com', 1, 0, 0, u'2016-12-05 23:06:11']
[ 2016-12-05 23:25:21 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `per_code` (`Per_code`, `Per_name`) VALUES ('001', '添加项目'); args=[u'001', u'\u6dfb\u52a0\u9879\u76ee']
[ 2016-12-05 23:25:45 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `per_code` (`Per_code`, `Per_name`) VALUES ('002', '部署'); args=[u'002', u'\u90e8\u7f72']
[ 2016-12-05 23:26:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:26:37' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:26:37')
[ 2016-12-05 23:26:40 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:26:40' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:26:40')
[ 2016-12-05 23:26:40 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 23:26:40 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 23:26:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:26:42' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:26:42')
[ 2016-12-05 23:26:42 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 23:26:42 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 320; args=()
[ 2016-12-05 23:26:45 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:26:45' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:26:45')
[ 2016-12-05 23:26:45 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 23:26:45 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 23:26:50 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:26:49' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:26:49')
[ 2016-12-05 23:26:50 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 23:26:50 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 320; args=()
[ 2016-12-05 23:26:52 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:26:52' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:26:52')
[ 2016-12-05 23:26:52 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=(u'ouyang2',)
[ 2016-12-05 23:27:00 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:27:00' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:27:00')
[ 2016-12-05 23:27:00 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'ouyang2' ; args=('ouyang2',)
[ 2016-12-05 23:27:00 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'ouyang2', `password` = 'e10adc3949ba59abbe56e057f20f883e', `email` = 'ouyangzhen@enjoyfin.com', `vaild` = 1, `isadmin` = 0, `logincount` = 1, `lastlogin` = '2016-12-05 22:27:44' WHERE `admin`.`id` = 511 ; args=(u'ouyang2', 'e10adc3949ba59abbe56e057f20f883e', 'ouyangzhen@enjoyfin.com', 1, 0, 1, u'2016-12-05 22:27:44', 511)
[ 2016-12-05 23:32:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:32:11' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:32:11')
[ 2016-12-05 23:32:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:32:11' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:32:11')
[ 2016-12-05 23:32:11 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 23:32:11' ; args=(u'2016-12-05 23:32:11',)
[ 2016-12-05 23:32:11 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 23:32:53 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'hbd7q49eas7clxu5visui3b84bgk066u'  AND `django_session`.`expire_date` > '2016-12-05 23:32:53' ); args=('hbd7q49eas7clxu5visui3b84bgk066u', u'2016-12-05 23:32:53')
[ 2016-12-05 23:32:53 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 23:32:53 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-05 23:50:40 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 23:50:40 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 23:50:40 ] util.py[line:79] execute DEBUG (0.001) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 78, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 78, u'2016-11-25 20:26:56', 8)
[ 2016-12-05 23:50:40 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-05 23:50:40 ] util.py[line:79] execute DEBUG (0.000) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  LIMIT 1; args=(u'lf242dj32k1xx2znqk8vuokteobeygfu',)
[ 2016-12-05 23:50:40 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-06 00:50:40' WHERE `django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-06 00:50:40', u'lf242dj32k1xx2znqk8vuokteobeygfu')
[ 2016-12-05 23:50:40 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('lf242dj32k1xx2znqk8vuokteobeygfu', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-06 00:50:40'); args=(u'lf242dj32k1xx2znqk8vuokteobeygfu', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-06 00:50:40')
[ 2016-12-05 23:50:40 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-05 23:50:40' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-05 23:50:40')
[ 2016-12-05 23:50:40 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-05 23:50:40' ; args=(u'2016-12-05 23:50:40',)
[ 2016-12-05 23:50:40 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-05 23:50:45 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-05 23:50:45' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-05 23:50:45')
[ 2016-12-05 23:50:45 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-05 23:50:45 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-05 23:54:49 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-05 23:54:49' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-05 23:54:49')
[ 2016-12-05 23:54:49 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-05 23:54:49 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-05 23:54:50 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-05 23:54:50' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-05 23:54:50')
[ 2016-12-05 23:54:50 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-05 23:54:50 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-05 23:55:58 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-05 23:55:58' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-05 23:55:58')
[ 2016-12-05 23:55:58 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-05 23:55:58 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-05 23:56:02 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-05 23:56:02' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-05 23:56:02')
[ 2016-12-05 23:56:02 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-05 23:56:02 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10 OFFSET 10; args=()
[ 2016-12-06 00:09:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-06 00:09:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-06 00:09:19 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 79, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 79, u'2016-11-25 20:26:56', 8)
[ 2016-12-06 00:09:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-06 00:09:19 ] util.py[line:79] execute DEBUG (0.000) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3'  LIMIT 1; args=(u'rdfwjov40rsag05u4bblmh0yntfackz3',)
[ 2016-12-06 00:09:19 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-06 01:09:19' WHERE `django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-06 01:09:19', u'rdfwjov40rsag05u4bblmh0yntfackz3')
[ 2016-12-06 00:09:19 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('rdfwjov40rsag05u4bblmh0yntfackz3', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-06 01:09:19'); args=(u'rdfwjov40rsag05u4bblmh0yntfackz3', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-06 01:09:19')
[ 2016-12-06 00:09:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3'  AND `django_session`.`expire_date` > '2016-12-06 00:09:19' ); args=('rdfwjov40rsag05u4bblmh0yntfackz3', u'2016-12-06 00:09:19')
[ 2016-12-06 00:09:19 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-06 00:09:19' ; args=(u'2016-12-06 00:09:19',)
[ 2016-12-06 00:09:19 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-06 00:09:21 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3'  AND `django_session`.`expire_date` > '2016-12-06 00:09:21' ); args=('rdfwjov40rsag05u4bblmh0yntfackz3', u'2016-12-06 00:09:21')
[ 2016-12-06 00:09:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3'  AND `django_session`.`expire_date` > '2016-12-06 00:09:26' ); args=('rdfwjov40rsag05u4bblmh0yntfackz3', u'2016-12-06 00:09:26')
[ 2016-12-06 00:09:26 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-06 00:09:26 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-06 00:09:29 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3'  AND `django_session`.`expire_date` > '2016-12-06 00:09:29' ); args=('rdfwjov40rsag05u4bblmh0yntfackz3', u'2016-12-06 00:09:29')
[ 2016-12-06 00:09:29 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-06 00:09:29 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10 OFFSET 10; args=()
[ 2016-12-06 00:09:33 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3'  AND `django_session`.`expire_date` > '2016-12-06 00:09:33' ); args=('rdfwjov40rsag05u4bblmh0yntfackz3', u'2016-12-06 00:09:33')
[ 2016-12-06 00:09:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3'  AND `django_session`.`expire_date` > '2016-12-06 00:09:38' ); args=('rdfwjov40rsag05u4bblmh0yntfackz3', u'2016-12-06 00:09:38')
[ 2016-12-06 00:13:13 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3'  AND `django_session`.`expire_date` > '2016-12-06 00:13:13' ); args=('rdfwjov40rsag05u4bblmh0yntfackz3', u'2016-12-06 00:13:13')
[ 2016-12-06 00:14:00 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3'  AND `django_session`.`expire_date` > '2016-12-06 00:14:00' ); args=('rdfwjov40rsag05u4bblmh0yntfackz3', u'2016-12-06 00:14:00')
[ 2016-12-06 00:14:05 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3'  AND `django_session`.`expire_date` > '2016-12-06 00:14:05' ); args=('rdfwjov40rsag05u4bblmh0yntfackz3', u'2016-12-06 00:14:05')
[ 2016-12-06 00:14:08 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3'  AND `django_session`.`expire_date` > '2016-12-06 00:14:08' ); args=('rdfwjov40rsag05u4bblmh0yntfackz3', u'2016-12-06 00:14:08')
[ 2016-12-06 00:14:08 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-06 00:14:08 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10 OFFSET 10; args=()
[ 2016-12-06 00:14:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3'  AND `django_session`.`expire_date` > '2016-12-06 00:14:17' ); args=('rdfwjov40rsag05u4bblmh0yntfackz3', u'2016-12-06 00:14:17')
[ 2016-12-06 00:14:20 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3'  AND `django_session`.`expire_date` > '2016-12-06 00:14:20' ); args=('rdfwjov40rsag05u4bblmh0yntfackz3', u'2016-12-06 00:14:20')
[ 2016-12-06 00:14:22 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3'  AND `django_session`.`expire_date` > '2016-12-06 00:14:22' ); args=('rdfwjov40rsag05u4bblmh0yntfackz3', u'2016-12-06 00:14:22')
[ 2016-12-06 00:14:56 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-06 00:14:56' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-06 00:14:56')
[ 2016-12-06 00:14:56 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-06 00:14:56' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-06 00:14:56')
[ 2016-12-06 00:14:56 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-06 00:14:56' ; args=(u'2016-12-06 00:14:56',)
[ 2016-12-06 00:14:56 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-06 00:15:01 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-06 00:15:01' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-06 00:15:01')
[ 2016-12-06 00:15:01 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-06 00:15:01 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-06 00:15:12 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-06 00:15:12' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-06 00:15:12')
[ 2016-12-06 00:15:56 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-06 00:15:56' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-06 00:15:56')
[ 2016-12-06 00:15:56 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-06 00:15:56 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-06 00:16:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-06 00:16:05' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-06 00:16:05')
[ 2016-12-06 00:16:36 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-06 00:16:36' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-06 00:16:36')
[ 2016-12-06 00:19:54 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3'  AND `django_session`.`expire_date` > '2016-12-06 00:19:54' ); args=('rdfwjov40rsag05u4bblmh0yntfackz3', u'2016-12-06 00:19:54')
[ 2016-12-06 00:19:54 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 13 ; args=(13,)
[ 2016-12-06 00:19:54 ] util.py[line:79] execute DEBUG (0.000) DELETE FROM `per_code` WHERE `id` IN (13); args=(13,)
[ 2016-12-06 00:21:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3'  AND `django_session`.`expire_date` > '2016-12-06 00:21:11' ); args=('rdfwjov40rsag05u4bblmh0yntfackz3', u'2016-12-06 00:21:11')
[ 2016-12-06 00:21:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 13 ; args=(13,)
[ 2016-12-06 00:21:26 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3'  AND `django_session`.`expire_date` > '2016-12-06 00:21:26' ); args=('rdfwjov40rsag05u4bblmh0yntfackz3', u'2016-12-06 00:21:26')
[ 2016-12-06 00:21:26 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 14 ; args=(14,)
[ 2016-12-06 00:21:26 ] util.py[line:79] execute DEBUG (0.001) DELETE FROM `per_code` WHERE `id` IN (14); args=(14,)
[ 2016-12-06 00:22:01 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3'  AND `django_session`.`expire_date` > '2016-12-06 00:22:01' ); args=('rdfwjov40rsag05u4bblmh0yntfackz3', u'2016-12-06 00:22:01')
[ 2016-12-06 00:22:01 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 15 ; args=(15,)
[ 2016-12-06 00:22:01 ] util.py[line:79] execute DEBUG (0.000) DELETE FROM `per_code` WHERE `id` IN (15); args=(15,)
[ 2016-12-06 00:22:41 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-06 00:22:41' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-06 00:22:41')
[ 2016-12-06 00:22:41 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-06 00:22:41 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-06 00:22:47 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-06 00:22:47' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-06 00:22:47')
[ 2016-12-06 00:22:47 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 12 ; args=(12,)
[ 2016-12-06 00:22:47 ] util.py[line:79] execute DEBUG (0.001) DELETE FROM `per_code` WHERE `id` IN (12); args=(12,)
[ 2016-12-06 00:22:57 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-06 00:22:57' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-06 00:22:57')
[ 2016-12-06 00:22:57 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 6 ; args=(6,)
[ 2016-12-06 00:22:57 ] util.py[line:79] execute DEBUG (0.001) DELETE FROM `per_code` WHERE `id` IN (6); args=(6,)
[ 2016-12-06 00:22:57 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 7 ; args=(7,)
[ 2016-12-06 00:22:57 ] util.py[line:79] execute DEBUG (0.000) DELETE FROM `per_code` WHERE `id` IN (7); args=(7,)
[ 2016-12-06 00:22:57 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 8 ; args=(8,)
[ 2016-12-06 00:22:57 ] util.py[line:79] execute DEBUG (0.000) DELETE FROM `per_code` WHERE `id` IN (8); args=(8,)
[ 2016-12-06 00:22:57 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 9 ; args=(9,)
[ 2016-12-06 00:22:57 ] util.py[line:79] execute DEBUG (0.001) DELETE FROM `per_code` WHERE `id` IN (9); args=(9,)
[ 2016-12-06 00:22:57 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 10 ; args=(10,)
[ 2016-12-06 00:22:57 ] util.py[line:79] execute DEBUG (0.001) DELETE FROM `per_code` WHERE `id` IN (10); args=(10,)
[ 2016-12-06 00:22:57 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 11 ; args=(11,)
[ 2016-12-06 00:22:57 ] util.py[line:79] execute DEBUG (0.001) DELETE FROM `per_code` WHERE `id` IN (11); args=(11,)
[ 2016-12-06 00:22:58 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-06 00:22:58' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-06 00:22:58')
[ 2016-12-06 00:22:58 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-06 00:22:58 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-06 00:23:05 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-06 00:23:05' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-06 00:23:05')
[ 2016-12-06 00:23:05 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 4 ; args=(4,)
[ 2016-12-06 00:23:05 ] util.py[line:79] execute DEBUG (0.001) DELETE FROM `per_code` WHERE `id` IN (4); args=(4,)
[ 2016-12-06 00:23:05 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 5 ; args=(5,)
[ 2016-12-06 00:23:05 ] util.py[line:79] execute DEBUG (0.000) DELETE FROM `per_code` WHERE `id` IN (5); args=(5,)
[ 2016-12-06 00:23:06 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-06 00:23:06' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-06 00:23:06')
[ 2016-12-06 00:23:06 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-06 00:23:06 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-06 00:23:45 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-06 00:23:45' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-06 00:23:45')
[ 2016-12-06 00:23:45 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-06 00:23:45 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-06 00:23:49 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-06 00:23:49' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-06 00:23:49')
[ 2016-12-06 00:23:49 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-06 00:23:49 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-06 00:23:52 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-06 00:23:52' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-06 00:23:52')
[ 2016-12-06 00:23:52 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-06 00:23:52 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10 OFFSET 10; args=()
[ 2016-12-06 00:23:55 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-06 00:23:55' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-06 00:23:55')
[ 2016-12-06 00:23:55 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-06 00:23:55 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-06 00:23:58 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-06 00:23:58' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-06 00:23:58')
[ 2016-12-06 00:23:58 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code` WHERE `per_code`.`Per_name` LIKE '%添加项目%' ; args=(u'%\u6dfb\u52a0\u9879\u76ee%',)
[ 2016-12-06 00:23:58 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`Per_name` LIKE '%添加项目%'  ORDER BY `per_code`.`Per_code` ASC LIMIT 10; args=(u'%\u6dfb\u52a0\u9879\u76ee%',)
[ 2016-12-06 00:24:03 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-06 00:24:03' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-06 00:24:03')
[ 2016-12-06 00:24:03 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code` WHERE `per_code`.`Per_name` LIKE '%添加项目%' ; args=(u'%\u6dfb\u52a0\u9879\u76ee%',)
[ 2016-12-06 00:24:03 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`Per_name` LIKE '%添加项目%'  ORDER BY `per_code`.`Per_code` ASC LIMIT 10 OFFSET 10; args=(u'%\u6dfb\u52a0\u9879\u76ee%',)
[ 2016-12-06 00:24:07 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'lf242dj32k1xx2znqk8vuokteobeygfu'  AND `django_session`.`expire_date` > '2016-12-06 00:24:06' ); args=('lf242dj32k1xx2znqk8vuokteobeygfu', u'2016-12-06 00:24:06')
[ 2016-12-06 00:24:07 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code` WHERE `per_code`.`Per_name` LIKE '%添加项目%' ; args=(u'%\u6dfb\u52a0\u9879\u76ee%',)
[ 2016-12-06 00:24:07 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`Per_name` LIKE '%添加项目%'  ORDER BY `per_code`.`Per_code` ASC LIMIT 10; args=(u'%\u6dfb\u52a0\u9879\u76ee%',)
[ 2016-12-06 00:55:21 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-06 00:55:21 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-06 00:55:21 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 80, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 80, u'2016-11-25 20:26:56', 8)
[ 2016-12-06 00:55:21 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-06 00:55:21 ] util.py[line:79] execute DEBUG (0.000) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = 'qnvgccn93jx2ewwqoq9e5thkhvht178e'  LIMIT 1; args=(u'qnvgccn93jx2ewwqoq9e5thkhvht178e',)
[ 2016-12-06 00:55:21 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-06 01:55:21' WHERE `django_session`.`session_key` = 'qnvgccn93jx2ewwqoq9e5thkhvht178e' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-06 01:55:21', u'qnvgccn93jx2ewwqoq9e5thkhvht178e')
[ 2016-12-06 00:55:21 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('qnvgccn93jx2ewwqoq9e5thkhvht178e', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-06 01:55:21'); args=(u'qnvgccn93jx2ewwqoq9e5thkhvht178e', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-06 01:55:21')
[ 2016-12-06 00:55:21 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'qnvgccn93jx2ewwqoq9e5thkhvht178e'  AND `django_session`.`expire_date` > '2016-12-06 00:55:21' ); args=('qnvgccn93jx2ewwqoq9e5thkhvht178e', u'2016-12-06 00:55:21')
[ 2016-12-06 00:55:21 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-06 00:55:21' ; args=(u'2016-12-06 00:55:21',)
[ 2016-12-06 00:55:21 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-06 00:55:23 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'qnvgccn93jx2ewwqoq9e5thkhvht178e'  AND `django_session`.`expire_date` > '2016-12-06 00:55:23' ); args=('qnvgccn93jx2ewwqoq9e5thkhvht178e', u'2016-12-06 00:55:23')
[ 2016-12-06 00:55:23 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-06 00:55:23 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-06 00:55:25 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'qnvgccn93jx2ewwqoq9e5thkhvht178e'  AND `django_session`.`expire_date` > '2016-12-06 00:55:25' ); args=('qnvgccn93jx2ewwqoq9e5thkhvht178e', u'2016-12-06 00:55:25')
[ 2016-12-06 00:55:25 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-06 00:55:25 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-06 00:55:27 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'qnvgccn93jx2ewwqoq9e5thkhvht178e'  AND `django_session`.`expire_date` > '2016-12-06 00:55:27' ); args=('qnvgccn93jx2ewwqoq9e5thkhvht178e', u'2016-12-06 00:55:27')
[ 2016-12-06 00:55:27 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 3 ; args=(3,)
[ 2016-12-06 00:56:08 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3'  AND `django_session`.`expire_date` > '2016-12-06 00:56:08' ); args=('rdfwjov40rsag05u4bblmh0yntfackz3', u'2016-12-06 00:56:08')
[ 2016-12-06 00:56:08 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 15 ; args=(15,)
[ 2016-12-06 00:56:15 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'qnvgccn93jx2ewwqoq9e5thkhvht178e'  AND `django_session`.`expire_date` > '2016-12-06 00:56:15' ); args=('qnvgccn93jx2ewwqoq9e5thkhvht178e', u'2016-12-06 00:56:15')
[ 2016-12-06 00:56:15 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 3 ; args=(3,)
[ 2016-12-06 00:56:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'qnvgccn93jx2ewwqoq9e5thkhvht178e'  AND `django_session`.`expire_date` > '2016-12-06 00:56:42' ); args=('qnvgccn93jx2ewwqoq9e5thkhvht178e', u'2016-12-06 00:56:42')
[ 2016-12-06 00:56:42 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-06 00:56:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-06 00:56:45 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'qnvgccn93jx2ewwqoq9e5thkhvht178e'  AND `django_session`.`expire_date` > '2016-12-06 00:56:45' ); args=('qnvgccn93jx2ewwqoq9e5thkhvht178e', u'2016-12-06 00:56:45')
[ 2016-12-06 00:56:45 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 3 ; args=(3,)
[ 2016-12-06 00:57:31 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'qnvgccn93jx2ewwqoq9e5thkhvht178e'  AND `django_session`.`expire_date` > '2016-12-06 00:57:31' ); args=('qnvgccn93jx2ewwqoq9e5thkhvht178e', u'2016-12-06 00:57:31')
[ 2016-12-06 00:57:31 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 3 ; args=(3,)
[ 2016-12-06 00:58:12 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3'  AND `django_session`.`expire_date` > '2016-12-06 00:58:12' ); args=('rdfwjov40rsag05u4bblmh0yntfackz3', u'2016-12-06 00:58:12')
[ 2016-12-06 00:58:12 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 14 ; args=(14,)
[ 2016-12-06 00:58:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3'  AND `django_session`.`expire_date` > '2016-12-06 00:58:18' ); args=('rdfwjov40rsag05u4bblmh0yntfackz3', u'2016-12-06 00:58:18')
[ 2016-12-06 00:58:18 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-06 00:58:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-06 00:58:20 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'rdfwjov40rsag05u4bblmh0yntfackz3'  AND `django_session`.`expire_date` > '2016-12-06 00:58:20' ); args=('rdfwjov40rsag05u4bblmh0yntfackz3', u'2016-12-06 00:58:20')
[ 2016-12-06 00:58:20 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 3 ; args=(3,)
[ 2016-12-06 00:58:59 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'qnvgccn93jx2ewwqoq9e5thkhvht178e'  AND `django_session`.`expire_date` > '2016-12-06 00:58:59' ); args=('qnvgccn93jx2ewwqoq9e5thkhvht178e', u'2016-12-06 00:58:59')
[ 2016-12-06 00:58:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 3 ; args=(3,)
[ 2016-12-06 00:59:14 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'qnvgccn93jx2ewwqoq9e5thkhvht178e'  AND `django_session`.`expire_date` > '2016-12-06 00:59:14' ); args=('qnvgccn93jx2ewwqoq9e5thkhvht178e', u'2016-12-06 00:59:14')
[ 2016-12-06 00:59:14 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 3 ; args=(3,)
[ 2016-12-06 00:59:14 ] util.py[line:79] execute DEBUG (0.001) UPDATE `per_code` SET `Per_code` = '001', `Per_name` = '修改项目' WHERE `per_code`.`id` = 3 ; args=('001', '\xe4\xbf\xae\xe6\x94\xb9\xe9\xa1\xb9\xe7\x9b\xae', 3)
[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:52: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  `profile` option.""",

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:118: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:128: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The IPython profile to use."""

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:142: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Whether to overwrite existing config files when copying""")

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:162: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Whether to create profile dir if it doesn't exist""")

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:173: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:178: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  usual traceback""")

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magic.py:307: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  "Automatically call line magics without requiring explicit % prefix")

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:132: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  multi_line_specials = CBool(True, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:362: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:367: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:392: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:395: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:414: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:415: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(False, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:427: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(250, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:439: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(300, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:453: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(600, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:471: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(700, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:495: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(900, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:510: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(1000, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:513: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="RegExp to identify potential function names.")

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:515: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="RegExp to exclude strings with this start from autocalling.")

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\alias.py:195: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_aliases = List(default_aliases(), config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\alias.py:196: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  user_aliases = List(default_value=[], config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:61: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  plain_text_only = Bool(False, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:313: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:319: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  singleton_printers = Dict(config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:323: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  type_printers = Dict(config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:327: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  deferred_printers = Dict(config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:594: DeprecationWarning: metadata {'config': False} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=False)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:600: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:607: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  pprint = Bool(True, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:610: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  verbose = Bool(False, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:613: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  max_width = Integer(79, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:616: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  newline = Unicode('\n', config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:621: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  float_precision = CUnicode('', config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:143: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:152: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:475: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Should the history database include output? (default: no)"

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:478: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Write to database every x commands (higher values save disk access & power).\n"

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:259: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  color_scheme = Unicode('Linux', config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:275: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Input prompt.  '\\#' will be transformed to the prompt number")

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:277: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Continuation prompt.")

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:279: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Output prompt. '\\#' will be transformed to the prompt number")

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:284: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:179: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:190: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:197: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:202: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:206: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The part of the banner to be printed before the profile"""

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:209: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The part of the banner to be printed after the profile"""

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:220: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:227: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:231: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Set the color scheme (NoColor, Linux, or LightBG)."

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:242: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  debug = CBool(False, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:256: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:259: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Don't call post-execute functions that have failed in the past."

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:273: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  ipython_dir= Unicode('', config=True) # Set to get_ipython_dir() in __init__

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:289: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:294: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:300: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:303: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:307: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:310: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Save multi-line entries as one entry in readline history"

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:314: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  will be displayed as regular output instead."""

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:320: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.in_template")

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:322: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.in2_template")

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:324: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.out_template")

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:326: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.justify")

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:349: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Show rewritten input, e.g. for autocall."

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:352: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  quiet = CBool(False, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:354: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  history_length = Integer(10000, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:360: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:365: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  readline_use = CBool(True, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:366: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  readline_remove_delims = Unicode('-/~', config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:383: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  ], config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:396: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  run interactively (displaying output from expressions).""")

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:400: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_in = SeparateUnicode('\n', config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:401: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_out = SeparateUnicode('', config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:402: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_out2 = SeparateUnicode('', config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:403: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  wildcards_case_sensitive = CBool(True, config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:405: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_value='Context', config=True)

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:290: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="auto editing of files with syntax errors.")

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:295: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  you can force a direct exit without any confirmation.""",

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:305: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Set the editor used by IPython (default to $EDITOR/vi/notepad)."

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:308: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="The shell program to be used for paging.")

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:320: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default.""",

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:323: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Enable auto setting the terminal title."

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:276: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:556: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:568: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:42 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:578: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:43 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:89: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """,

[ 2016-12-06 14:21:43 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:116: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:43 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:139: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="A list of dotted module names of IPython extensions to load."

[ 2016-12-06 14:21:43 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:142: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="dotted module name of an IPython extension to load."

[ 2016-12-06 14:21:43 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:148: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Reraise exceptions encountered loading IPython extensions?",

[ 2016-12-06 14:21:43 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:152: DeprecationWarning: metadata {'config': False} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_extensions = List(Unicode(), [u'storemagic'], config=False)

[ 2016-12-06 14:21:43 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:156: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  be hidden from tools like %who?"""

[ 2016-12-06 14:21:43 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""List of files to run at IPython startup."""

[ 2016-12-06 14:21:43 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:164: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  variable at IPython startup."""

[ 2016-12-06 14:21:43 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:167: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""A file to be run""")

[ 2016-12-06 14:21:43 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:170: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""lines of code to run at IPython startup."""

[ 2016-12-06 14:21:43 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:173: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Execute the given command string."

[ 2016-12-06 14:21:43 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:176: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Run the module as a script."

[ 2016-12-06 14:21:43 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:179: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Enable GUI event loop integration with any of {0}.".format(gui_keys)

[ 2016-12-06 14:21:43 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:184: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  the default matplotlib backend."""

[ 2016-12-06 14:21:43 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:190: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:43 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:197: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:43 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\extensions\storemagic.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:21:43 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:245: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Start IPython quickly by skipping the loading of config files."""

[ 2016-12-06 14:21:43 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:252: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Whether to display a banner upon starting IPython."

[ 2016-12-06 14:21:43 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:260: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  file or command."""

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:186: DeprecationWarning: TerminalIPythonApp._classes_default is deprecated: use @default decorator instead.
  def _classes_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:99: DeprecationWarning: BaseIPythonApplication._config_file_name_default is deprecated: use @default decorator instead.
  def _config_file_name_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:111: DeprecationWarning: BaseIPythonApplication._config_file_paths_default is deprecated: use @default decorator instead.
  def _config_file_paths_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:165: DeprecationWarning: BaseIPythonApplication._config_files_default is deprecated: use @default decorator instead.
  def _config_files_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:144: DeprecationWarning: BaseIPythonApplication._ipython_dir_default is deprecated: use @default decorator instead.
  def _ipython_dir_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:151: DeprecationWarning: BaseIPythonApplication._profile_dir_default is deprecated: use @default decorator instead.
  def _profile_dir_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:186: DeprecationWarning: TerminalIPythonApp._classes_default is deprecated: use @default decorator instead.
  def _classes_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:151: DeprecationWarning: BaseIPythonApplication._profile_dir_default is deprecated: use @default decorator instead.
  def _profile_dir_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:144: DeprecationWarning: BaseIPythonApplication._ipython_dir_default is deprecated: use @default decorator instead.
  def _ipython_dir_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:57: DeprecationWarning: ProfileDir._location_changed is deprecated: use @observe and @unobserve instead.
  def _location_changed(self, name, old, new):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:126: DeprecationWarning: ProfileDir._security_dir_changed is deprecated: use @observe and @unobserve instead.
  def _security_dir_changed(self, name, old, new):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:71: DeprecationWarning: ProfileDir._log_dir_changed is deprecated: use @observe and @unobserve instead.
  def _log_dir_changed(self, name, old, new):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:111: DeprecationWarning: ProfileDir._startup_dir_changed is deprecated: use @observe and @unobserve instead.
  def _startup_dir_changed(self, name, old, new):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:132: DeprecationWarning: ProfileDir._pid_dir_changed is deprecated: use @observe and @unobserve instead.
  def _pid_dir_changed(self, name, old, new):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:138: DeprecationWarning: ProfileDir._static_dir_changed is deprecated: use @observe and @unobserve instead.
  def _static_dir_changed(self, name, old, new):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:111: DeprecationWarning: BaseIPythonApplication._config_file_paths_default is deprecated: use @default decorator instead.
  def _config_file_paths_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:165: DeprecationWarning: BaseIPythonApplication._config_files_default is deprecated: use @default decorator instead.
  def _config_files_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:99: DeprecationWarning: BaseIPythonApplication._config_file_name_default is deprecated: use @default decorator instead.
  def _config_file_name_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:268: DeprecationWarning: InteractiveShell._exiter_default is deprecated: use @default decorator instead.
  def _exiter_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:525: DeprecationWarning: TerminalInteractiveShell._ipython_dir_changed is deprecated: use @observe and @unobserve instead.
  def _ipython_dir_changed(self, name, new):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:459: DeprecationWarning: HistoryManager._dir_hist_default is deprecated: use @default decorator instead.
  def _dir_hist_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:165: DeprecationWarning: HistoryManager._db_changed is deprecated: use @observe and @unobserve instead.
  def _db_changed(self, name, old, new):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:459: DeprecationWarning: HistoryManager._dir_hist_default is deprecated: use @default decorator instead.
  def _dir_hist_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:268: DeprecationWarning: InteractiveShell._exiter_default is deprecated: use @default decorator instead.
  def _exiter_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:296: DeprecationWarning: PromptManager._invisible_chars_default is deprecated: use @default decorator instead.
  def _invisible_chars_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:272: DeprecationWarning: PromptManager._lazy_evaluate_fields_default is deprecated: use @default decorator instead.
  def _lazy_evaluate_fields_default(self): return lazily_evaluate.copy()

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:272: DeprecationWarning: PromptManager._lazy_evaluate_fields_default is deprecated: use @default decorator instead.
  def _lazy_evaluate_fields_default(self): return lazily_evaluate.copy()

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:296: DeprecationWarning: PromptManager._invisible_chars_default is deprecated: use @default decorator instead.
  def _invisible_chars_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:1180] on_trait_change WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:313: DeprecationWarning: on_trait_change is deprecated: use observe instead
  'in2_template', 'out_template'])

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:81: DeprecationWarning: DisplayFormatter._active_types_default is deprecated: use @default decorator instead.
  def _active_types_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:98: DeprecationWarning: DisplayFormatter._formatters_default is deprecated: use @default decorator instead.
  def _formatters_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:92: DeprecationWarning: DisplayFormatter._ipython_display_formatter_default is deprecated: use @default decorator instead.
  def _ipython_display_formatter_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:84: DeprecationWarning: DisplayFormatter._active_types_changed is deprecated: use @observe and @unobserve instead.
  def _active_types_changed(self, name, old, new):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:98: DeprecationWarning: DisplayFormatter._formatters_default is deprecated: use @default decorator instead.
  def _formatters_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:677: DeprecationWarning: PlainTextFormatter._deferred_printers_default is deprecated: use @default decorator instead.
  def _deferred_printers_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:669: DeprecationWarning: PlainTextFormatter._singleton_printers_default is deprecated: use @default decorator instead.
  def _singleton_printers_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:672: DeprecationWarning: PlainTextFormatter._type_printers_default is deprecated: use @default decorator instead.
  def _type_printers_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:91: DeprecationWarning: ScriptMagics._script_magics_default is deprecated: use @default decorator instead.
  def _script_magics_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:91: DeprecationWarning: ScriptMagics._script_magics_default is deprecated: use @default decorator instead.
  def _script_magics_default(self):

[ 2016-12-06 14:21:43 ] traitlets.py[line:1180] on_trait_change WARNING E:\Python27\lib\site-packages\IPython\core\extensions.py:58: DeprecationWarning: on_trait_change is deprecated: use observe instead
  self._on_ipython_dir_changed, 'ipython_dir'

[ 2016-12-06 14:21:43 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\extensions\storemagic.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 14:22:56 ] util.py[line:79] execute DEBUG (0.008) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 10 ; args=(10,)
[ 2016-12-06 14:23:04 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 15 ; args=(15,)
[ 2016-12-06 14:23:36 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 16 ; args=(16,)
[ 2016-12-06 14:23:36 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:92: DeprecationWarning: DisplayFormatter._ipython_display_formatter_default is deprecated: use @default decorator instead.
  def _ipython_display_formatter_default(self):

[ 2016-12-06 14:23:36 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:669: DeprecationWarning: PlainTextFormatter._singleton_printers_default is deprecated: use @default decorator instead.
  def _singleton_printers_default(self):

[ 2016-12-06 14:23:36 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:672: DeprecationWarning: PlainTextFormatter._type_printers_default is deprecated: use @default decorator instead.
  def _type_printers_default(self):

[ 2016-12-06 14:23:36 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:677: DeprecationWarning: PlainTextFormatter._deferred_printers_default is deprecated: use @default decorator instead.
  def _deferred_printers_default(self):

[ 2016-12-06 14:23:52 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 16 ; args=(16,)
[ 2016-12-06 14:25:59 ] util.py[line:79] execute DEBUG (0.002) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 16 ; args=(16,)
[ 2016-12-06 14:26:05 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 16 ; args=(16,)
[ 2016-12-06 14:28:55 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 18 ; args=(18,)
[ 2016-12-06 14:29:22 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 18 ; args=(18,)
[ 2016-12-06 14:56:21 ] util.py[line:79] execute DEBUG (0.013) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-06 14:56:21 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-06 14:56:21 ] util.py[line:79] execute DEBUG (0.002) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 81, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 81, u'2016-11-25 20:26:56', 8)
[ 2016-12-06 14:56:21 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-06 14:56:21 ] util.py[line:79] execute DEBUG (0.003) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = 'sx0d5fol3p973fn05qsgcisjtvc9qg7g'  LIMIT 1; args=(u'sx0d5fol3p973fn05qsgcisjtvc9qg7g',)
[ 2016-12-06 14:56:21 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-06 15:56:21' WHERE `django_session`.`session_key` = 'sx0d5fol3p973fn05qsgcisjtvc9qg7g' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-06 15:56:21', u'sx0d5fol3p973fn05qsgcisjtvc9qg7g')
[ 2016-12-06 14:56:21 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('sx0d5fol3p973fn05qsgcisjtvc9qg7g', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-06 15:56:21'); args=(u'sx0d5fol3p973fn05qsgcisjtvc9qg7g', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-06 15:56:21')
[ 2016-12-06 14:56:21 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'sx0d5fol3p973fn05qsgcisjtvc9qg7g'  AND `django_session`.`expire_date` > '2016-12-06 14:56:21' ); args=('sx0d5fol3p973fn05qsgcisjtvc9qg7g', u'2016-12-06 14:56:21')
[ 2016-12-06 14:56:21 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-06 14:56:21' ; args=(u'2016-12-06 14:56:21',)
[ 2016-12-06 14:56:21 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-06 14:56:24 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'sx0d5fol3p973fn05qsgcisjtvc9qg7g'  AND `django_session`.`expire_date` > '2016-12-06 14:56:24' ); args=('sx0d5fol3p973fn05qsgcisjtvc9qg7g', u'2016-12-06 14:56:24')
[ 2016-12-06 14:56:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'sx0d5fol3p973fn05qsgcisjtvc9qg7g'  AND `django_session`.`expire_date` > '2016-12-06 14:56:32' ); args=('sx0d5fol3p973fn05qsgcisjtvc9qg7g', u'2016-12-06 14:56:32')
[ 2016-12-06 14:56:32 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `per_code` (`Per_code`, `Per_name`) VALUES ('009', '上传'); args=[u'009', u'\u4e0a\u4f20']
[ 2016-12-06 14:56:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'sx0d5fol3p973fn05qsgcisjtvc9qg7g'  AND `django_session`.`expire_date` > '2016-12-06 14:56:38' ); args=('sx0d5fol3p973fn05qsgcisjtvc9qg7g', u'2016-12-06 14:56:38')
[ 2016-12-06 14:56:38 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-06 14:56:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-06 14:56:46 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'sx0d5fol3p973fn05qsgcisjtvc9qg7g'  AND `django_session`.`expire_date` > '2016-12-06 14:56:46' ); args=('sx0d5fol3p973fn05qsgcisjtvc9qg7g', u'2016-12-06 14:56:46')
[ 2016-12-06 14:56:46 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 16 ; args=(16,)
[ 2016-12-06 14:56:46 ] util.py[line:79] execute DEBUG (0.000) DELETE FROM `per_code` WHERE `id` IN (16); args=(16,)
[ 2016-12-06 14:56:47 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'sx0d5fol3p973fn05qsgcisjtvc9qg7g'  AND `django_session`.`expire_date` > '2016-12-06 14:56:47' ); args=('sx0d5fol3p973fn05qsgcisjtvc9qg7g', u'2016-12-06 14:56:47')
[ 2016-12-06 14:56:47 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-06 14:56:47 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-06 14:56:55 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'sx0d5fol3p973fn05qsgcisjtvc9qg7g'  AND `django_session`.`expire_date` > '2016-12-06 14:56:55' ); args=('sx0d5fol3p973fn05qsgcisjtvc9qg7g', u'2016-12-06 14:56:55')
[ 2016-12-06 14:56:55 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 17 ; args=(17,)
[ 2016-12-06 14:56:55 ] util.py[line:79] execute DEBUG (0.000) DELETE FROM `per_code` WHERE `id` IN (17); args=(17,)
[ 2016-12-06 14:56:56 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'sx0d5fol3p973fn05qsgcisjtvc9qg7g'  AND `django_session`.`expire_date` > '2016-12-06 14:56:56' ); args=('sx0d5fol3p973fn05qsgcisjtvc9qg7g', u'2016-12-06 14:56:56')
[ 2016-12-06 14:56:56 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-06 14:56:56 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-06 14:57:00 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'sx0d5fol3p973fn05qsgcisjtvc9qg7g'  AND `django_session`.`expire_date` > '2016-12-06 14:57:00' ); args=('sx0d5fol3p973fn05qsgcisjtvc9qg7g', u'2016-12-06 14:57:00')
[ 2016-12-06 14:57:04 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'sx0d5fol3p973fn05qsgcisjtvc9qg7g'  AND `django_session`.`expire_date` > '2016-12-06 14:57:04' ); args=('sx0d5fol3p973fn05qsgcisjtvc9qg7g', u'2016-12-06 14:57:04')
[ 2016-12-06 14:57:04 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-06 14:57:04 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-06 14:57:06 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'sx0d5fol3p973fn05qsgcisjtvc9qg7g'  AND `django_session`.`expire_date` > '2016-12-06 14:57:06' ); args=('sx0d5fol3p973fn05qsgcisjtvc9qg7g', u'2016-12-06 14:57:06')
[ 2016-12-06 14:57:06 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 3 ; args=(3,)
[ 2016-12-06 14:57:16 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'sx0d5fol3p973fn05qsgcisjtvc9qg7g'  AND `django_session`.`expire_date` > '2016-12-06 14:57:16' ); args=('sx0d5fol3p973fn05qsgcisjtvc9qg7g', u'2016-12-06 14:57:16')
[ 2016-12-06 14:57:16 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-06 14:57:16 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-06 14:57:20 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'sx0d5fol3p973fn05qsgcisjtvc9qg7g'  AND `django_session`.`expire_date` > '2016-12-06 14:57:20' ); args=('sx0d5fol3p973fn05qsgcisjtvc9qg7g', u'2016-12-06 14:57:20')
[ 2016-12-06 14:57:20 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 26 ; args=(26,)
[ 2016-12-06 14:57:25 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'sx0d5fol3p973fn05qsgcisjtvc9qg7g'  AND `django_session`.`expire_date` > '2016-12-06 14:57:25' ); args=('sx0d5fol3p973fn05qsgcisjtvc9qg7g', u'2016-12-06 14:57:25')
[ 2016-12-06 14:57:25 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 26 ; args=(26,)
[ 2016-12-06 14:57:25 ] util.py[line:79] execute DEBUG (0.000) UPDATE `per_code` SET `Per_code` = '001', `Per_name` = '管理项目' WHERE `per_code`.`id` = 26 ; args=('001', '\xe7\xae\xa1\xe7\x90\x86\xe9\xa1\xb9\xe7\x9b\xae', 26)
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.002) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.002) SHOW TABLES; args=None
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.012) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'logentry'  AND `django_content_type`.`app_label` = 'admin' ); args=('logentry', u'admin')
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.004) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (1) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(1,)
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'admin'  ORDER BY `django_content_type`.`name` ASC; args=(u'admin',)
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'permission'  AND `django_content_type`.`app_label` = 'auth' ); args=('permission', u'auth')
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'group'  AND `django_content_type`.`app_label` = 'auth' ); args=('group', u'auth')
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user'  AND `django_content_type`.`app_label` = 'auth' ); args=('user', u'auth')
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (2, 3, 4) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(2, 3, 4)
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'auth'  ORDER BY `django_content_type`.`name` ASC; args=(u'auth',)
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'contenttype'  AND `django_content_type`.`app_label` = 'contenttypes' ); args=('contenttype', u'contenttypes')
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (5) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(5,)
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'contenttypes'  ORDER BY `django_content_type`.`name` ASC; args=(u'contenttypes',)
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'session'  AND `django_content_type`.`app_label` = 'sessions' ); args=('session', u'sessions')
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (6) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(6,)
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'sessions'  ORDER BY `django_content_type`.`name` ASC; args=(u'sessions',)
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'admin'  AND `django_content_type`.`app_label` = 'user' ); args=('admin', u'user')
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_per'  AND `django_content_type`.`app_label` = 'user' ); args=('user_per', u'user')
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'per_code'  AND `django_content_type`.`app_label` = 'user' ); args=('per_code', u'user')
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_chpass'  AND `django_content_type`.`app_label` = 'user' ); args=('user_chpass', u'user')
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (8, 12, 13, 14) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(8, 12, 13, 14)
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'user'  ORDER BY `django_content_type`.`name` ASC; args=(u'user',)
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'migrationhistory'  AND `django_content_type`.`app_label` = 'south' ); args=('migrationhistory', u'south')
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (9) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(9,)
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'south'  ORDER BY `django_content_type`.`name` ASC; args=(u'south',)
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.001) SET foreign_key_checks=0; args=None
[ 2016-12-06 15:14:44 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-06 15:16:38 ] util.py[line:79] execute DEBUG (0.010) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-06 15:16:38 ] util.py[line:79] execute DEBUG (0.001) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-06 15:16:38 ] util.py[line:79] execute DEBUG (0.021) CREATE TABLE ROLLBACK_TEST (X INT); args=None
[ 2016-12-06 15:16:38 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO ROLLBACK_TEST (X) VALUES (8); args=None
[ 2016-12-06 15:16:38 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(X) FROM ROLLBACK_TEST; args=None
[ 2016-12-06 15:16:38 ] util.py[line:79] execute DEBUG (0.002) DROP TABLE ROLLBACK_TEST; args=None
[ 2016-12-06 15:16:38 ] generic.py[line:279] execute DEBUG execute "SET FOREIGN_KEY_CHECKS=0;" with params "[]"
[ 2016-12-06 15:16:38 ] util.py[line:79] execute DEBUG (0.000) SET FOREIGN_KEY_CHECKS=0;; args=[]
[ 2016-12-06 15:16:38 ] util.py[line:79] execute DEBUG (0.006) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=None
[ 2016-12-06 15:16:38 ] util.py[line:79] execute DEBUG (0.000) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=None
[ 2016-12-06 15:16:38 ] util.py[line:79] execute DEBUG (0.002) DROP TABLE DDL_TRANSACTION_TEST; args=None
[ 2016-12-06 15:16:38 ] generic.py[line:279] execute DEBUG execute "SET FOREIGN_KEY_CHECKS=0;" with params "[]"
[ 2016-12-06 15:16:38 ] util.py[line:79] execute DEBUG (0.001) SET FOREIGN_KEY_CHECKS=0;; args=[]
[ 2016-12-06 15:16:38 ] generic.py[line:279] execute DEBUG execute "CREATE TABLE `admin` (`id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY, `username` varchar(50) NOT NULL UNIQUE, `password` varchar(32) NOT NULL, `email` varchar(75) NOT NULL, `vaild` integer NULL, `isadmin` integer NULL, `logincount` integer UNSIGNED NOT NULL, `lastlogin` datetime NOT NULL)" with params "[]"
[ 2016-12-06 15:16:38 ] util.py[line:79] execute DEBUG (0.001) CREATE TABLE `admin` (`id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY, `username` varchar(50) NOT NULL UNIQUE, `password` varchar(32) NOT NULL, `email` varchar(75) NOT NULL, `vaild` integer NULL, `isadmin` integer NULL, `logincount` integer UNSIGNED NOT NULL, `lastlogin` datetime NOT NULL); args=[]
[ 2016-12-06 15:16:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'admin'  AND `django_content_type`.`app_label` = 'user' ); args=('admin', u'user')
[ 2016-12-06 15:16:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_per'  AND `django_content_type`.`app_label` = 'user' ); args=('user_per', u'user')
[ 2016-12-06 15:16:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'per_code'  AND `django_content_type`.`app_label` = 'user' ); args=('per_code', u'user')
[ 2016-12-06 15:16:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user_chpass'  AND `django_content_type`.`app_label` = 'user' ); args=('user_chpass', u'user')
[ 2016-12-06 15:16:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (8, 12, 13, 14) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(8, 12, 13, 14)
[ 2016-12-06 15:16:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'user'  ORDER BY `django_content_type`.`name` ASC; args=(u'user',)
[ 2016-12-06 15:17:03 ] util.py[line:79] execute DEBUG (0.001) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-06 15:17:03 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE (`south_migrationhistory`.`app_name` = 'user'  AND `south_migrationhistory`.`migration` = '0001_initial' ); args=('user', '0001_initial')
[ 2016-12-06 15:17:03 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `south_migrationhistory` (`app_name`, `migration`, `applied`) VALUES ('user', '0001_initial', '2016-12-06 15:17:03'); args=['user', '0001_initial', u'2016-12-06 15:17:03']
[ 2016-12-06 15:18:39 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-06 15:18:39 ] util.py[line:79] execute DEBUG (0.001) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-06 15:18:39 ] util.py[line:79] execute DEBUG (0.032) CREATE TABLE ROLLBACK_TEST (X INT); args=None
[ 2016-12-06 15:18:39 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO ROLLBACK_TEST (X) VALUES (8); args=None
[ 2016-12-06 15:18:39 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(X) FROM ROLLBACK_TEST; args=None
[ 2016-12-06 15:18:39 ] util.py[line:79] execute DEBUG (0.001) DROP TABLE ROLLBACK_TEST; args=None
[ 2016-12-06 15:18:39 ] generic.py[line:279] execute DEBUG execute "SET FOREIGN_KEY_CHECKS=0;" with params "[]"
[ 2016-12-06 15:18:39 ] util.py[line:79] execute DEBUG (0.000) SET FOREIGN_KEY_CHECKS=0;; args=[]
[ 2016-12-06 15:18:39 ] util.py[line:79] execute DEBUG (0.004) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=None
[ 2016-12-06 15:18:39 ] util.py[line:79] execute DEBUG (0.000) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=None
[ 2016-12-06 15:18:39 ] util.py[line:79] execute DEBUG (0.002) DROP TABLE DDL_TRANSACTION_TEST; args=None
[ 2016-12-06 15:18:39 ] generic.py[line:279] execute DEBUG execute "SET FOREIGN_KEY_CHECKS=0;" with params "[]"
[ 2016-12-06 15:18:39 ] util.py[line:79] execute DEBUG (0.001) SET FOREIGN_KEY_CHECKS=0;; args=[]
[ 2016-12-06 15:18:39 ] generic.py[line:279] execute DEBUG execute "
            SELECT kc.`constraint_name`, kc.`column_name`, kc.`table_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`
            FROM information_schema.key_column_usage AS kc
            WHERE
                kc.table_schema = %s
        " with params "['autodeploy']"
[ 2016-12-06 15:18:39 ] util.py[line:79] execute DEBUG (0.065) 
            SELECT kc.`constraint_name`, kc.`column_name`, kc.`table_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`
            FROM information_schema.key_column_usage AS kc
            WHERE
                kc.table_schema = 'autodeploy'
        ; args=['autodeploy']
[ 2016-12-06 15:18:39 ] generic.py[line:279] execute DEBUG execute "
            SELECT c.constraint_name, c.table_name, c.constraint_type
            FROM information_schema.table_constraints AS c
            WHERE
                c.table_schema = %s
        " with params "['autodeploy']"
[ 2016-12-06 15:18:39 ] util.py[line:79] execute DEBUG (0.000) 
            SELECT c.constraint_name, c.table_name, c.constraint_type
            FROM information_schema.table_constraints AS c
            WHERE
                c.table_schema = 'autodeploy'
        ; args=['autodeploy']
[ 2016-12-06 15:18:39 ] generic.py[line:279] execute DEBUG execute "ALTER TABLE `user_per` ;" with params "[]"
[ 2016-12-06 15:18:39 ] util.py[line:79] execute DEBUG (0.000) ALTER TABLE `user_per` ;; args=[]
[ 2016-12-06 15:18:39 ] generic.py[line:279] execute DEBUG execute "ALTER TABLE `user_per` MODIFY `comment` varchar(255) NOT NULL;;" with params "[]"
[ 2016-12-06 15:18:39 ] util.py[line:79] execute DEBUG (0.000) ALTER TABLE `user_per` MODIFY `comment` varchar(255) NOT NULL;;; args=[]
[ 2016-12-06 15:19:01 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-06 15:19:01 ] util.py[line:79] execute DEBUG (0.000) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-06 15:19:01 ] util.py[line:79] execute DEBUG (0.016) CREATE TABLE ROLLBACK_TEST (X INT); args=None
[ 2016-12-06 15:19:01 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO ROLLBACK_TEST (X) VALUES (8); args=None
[ 2016-12-06 15:19:01 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(X) FROM ROLLBACK_TEST; args=None
[ 2016-12-06 15:19:01 ] util.py[line:79] execute DEBUG (0.001) DROP TABLE ROLLBACK_TEST; args=None
[ 2016-12-06 15:19:01 ] generic.py[line:279] execute DEBUG execute "SET FOREIGN_KEY_CHECKS=0;" with params "[]"
[ 2016-12-06 15:19:01 ] util.py[line:79] execute DEBUG (0.000) SET FOREIGN_KEY_CHECKS=0;; args=[]
[ 2016-12-06 15:19:01 ] util.py[line:79] execute DEBUG (0.003) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=None
[ 2016-12-06 15:19:01 ] util.py[line:79] execute DEBUG (0.000) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=None
[ 2016-12-06 15:19:01 ] util.py[line:79] execute DEBUG (0.002) DROP TABLE DDL_TRANSACTION_TEST; args=None
[ 2016-12-06 15:19:01 ] generic.py[line:279] execute DEBUG execute "SET FOREIGN_KEY_CHECKS=0;" with params "[]"
[ 2016-12-06 15:19:01 ] util.py[line:79] execute DEBUG (0.000) SET FOREIGN_KEY_CHECKS=0;; args=[]
[ 2016-12-06 15:19:01 ] generic.py[line:279] execute DEBUG execute "
            SELECT kc.`constraint_name`, kc.`column_name`, kc.`table_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`
            FROM information_schema.key_column_usage AS kc
            WHERE
                kc.table_schema = %s
        " with params "['autodeploy']"
[ 2016-12-06 15:19:01 ] util.py[line:79] execute DEBUG (0.001) 
            SELECT kc.`constraint_name`, kc.`column_name`, kc.`table_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`
            FROM information_schema.key_column_usage AS kc
            WHERE
                kc.table_schema = 'autodeploy'
        ; args=['autodeploy']
[ 2016-12-06 15:19:01 ] generic.py[line:279] execute DEBUG execute "
            SELECT c.constraint_name, c.table_name, c.constraint_type
            FROM information_schema.table_constraints AS c
            WHERE
                c.table_schema = %s
        " with params "['autodeploy']"
[ 2016-12-06 15:19:01 ] util.py[line:79] execute DEBUG (0.001) 
            SELECT c.constraint_name, c.table_name, c.constraint_type
            FROM information_schema.table_constraints AS c
            WHERE
                c.table_schema = 'autodeploy'
        ; args=['autodeploy']
[ 2016-12-06 15:19:01 ] generic.py[line:279] execute DEBUG execute "ALTER TABLE `user_per` ;" with params "[]"
[ 2016-12-06 15:19:01 ] util.py[line:79] execute DEBUG (0.000) ALTER TABLE `user_per` ;; args=[]
[ 2016-12-06 15:19:01 ] generic.py[line:279] execute DEBUG execute "ALTER TABLE `user_per` MODIFY `comment` varchar(255) NOT NULL;;" with params "[]"
[ 2016-12-06 15:19:01 ] util.py[line:79] execute DEBUG (0.000) ALTER TABLE `user_per` MODIFY `comment` varchar(255) NOT NULL;;; args=[]
[ 2016-12-06 15:19:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-06 15:19:44 ] util.py[line:79] execute DEBUG (0.001) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-06 15:19:44 ] util.py[line:79] execute DEBUG (0.021) CREATE TABLE ROLLBACK_TEST (X INT); args=None
[ 2016-12-06 15:19:44 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO ROLLBACK_TEST (X) VALUES (8); args=None
[ 2016-12-06 15:19:44 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(X) FROM ROLLBACK_TEST; args=None
[ 2016-12-06 15:19:44 ] util.py[line:79] execute DEBUG (0.003) DROP TABLE ROLLBACK_TEST; args=None
[ 2016-12-06 15:19:44 ] generic.py[line:279] execute DEBUG execute "SET FOREIGN_KEY_CHECKS=0;" with params "[]"
[ 2016-12-06 15:19:44 ] util.py[line:79] execute DEBUG (0.000) SET FOREIGN_KEY_CHECKS=0;; args=[]
[ 2016-12-06 15:19:44 ] util.py[line:79] execute DEBUG (0.005) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=None
[ 2016-12-06 15:19:44 ] util.py[line:79] execute DEBUG (0.000) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=None
[ 2016-12-06 15:19:44 ] util.py[line:79] execute DEBUG (0.002) DROP TABLE DDL_TRANSACTION_TEST; args=None
[ 2016-12-06 15:19:44 ] generic.py[line:279] execute DEBUG execute "SET FOREIGN_KEY_CHECKS=0;" with params "[]"
[ 2016-12-06 15:19:44 ] util.py[line:79] execute DEBUG (0.000) SET FOREIGN_KEY_CHECKS=0;; args=[]
[ 2016-12-06 15:19:44 ] generic.py[line:279] execute DEBUG execute "
            SELECT kc.`constraint_name`, kc.`column_name`, kc.`table_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`
            FROM information_schema.key_column_usage AS kc
            WHERE
                kc.table_schema = %s
        " with params "['autodeploy']"
[ 2016-12-06 15:19:44 ] util.py[line:79] execute DEBUG (0.001) 
            SELECT kc.`constraint_name`, kc.`column_name`, kc.`table_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`
            FROM information_schema.key_column_usage AS kc
            WHERE
                kc.table_schema = 'autodeploy'
        ; args=['autodeploy']
[ 2016-12-06 15:19:44 ] generic.py[line:279] execute DEBUG execute "
            SELECT c.constraint_name, c.table_name, c.constraint_type
            FROM information_schema.table_constraints AS c
            WHERE
                c.table_schema = %s
        " with params "['autodeploy']"
[ 2016-12-06 15:19:44 ] util.py[line:79] execute DEBUG (0.001) 
            SELECT c.constraint_name, c.table_name, c.constraint_type
            FROM information_schema.table_constraints AS c
            WHERE
                c.table_schema = 'autodeploy'
        ; args=['autodeploy']
[ 2016-12-06 15:19:44 ] generic.py[line:279] execute DEBUG execute "ALTER TABLE `user_per` ;" with params "[]"
[ 2016-12-06 15:19:44 ] util.py[line:79] execute DEBUG (0.000) ALTER TABLE `user_per` ;; args=[]
[ 2016-12-06 15:19:44 ] generic.py[line:279] execute DEBUG execute "ALTER TABLE `user_per` MODIFY `comment` varchar(255) NOT NULL;;" with params "[]"
[ 2016-12-06 15:19:44 ] util.py[line:79] execute DEBUG (0.000) ALTER TABLE `user_per` MODIFY `comment` varchar(255) NOT NULL;;; args=[]
[ 2016-12-06 15:21:05 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-06 15:21:05 ] util.py[line:79] execute DEBUG (0.000) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-06 15:21:06 ] util.py[line:79] execute DEBUG (0.029) CREATE TABLE ROLLBACK_TEST (X INT); args=None
[ 2016-12-06 15:21:06 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO ROLLBACK_TEST (X) VALUES (8); args=None
[ 2016-12-06 15:21:06 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(X) FROM ROLLBACK_TEST; args=None
[ 2016-12-06 15:21:06 ] util.py[line:79] execute DEBUG (0.005) DROP TABLE ROLLBACK_TEST; args=None
[ 2016-12-06 15:21:06 ] generic.py[line:279] execute DEBUG execute "SET FOREIGN_KEY_CHECKS=0;" with params "[]"
[ 2016-12-06 15:21:06 ] util.py[line:79] execute DEBUG (0.001) SET FOREIGN_KEY_CHECKS=0;; args=[]
[ 2016-12-06 15:21:06 ] util.py[line:79] execute DEBUG (0.010) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=None
[ 2016-12-06 15:21:06 ] util.py[line:79] execute DEBUG (0.000) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=None
[ 2016-12-06 15:21:06 ] util.py[line:79] execute DEBUG (0.003) DROP TABLE DDL_TRANSACTION_TEST; args=None
[ 2016-12-06 15:21:06 ] generic.py[line:279] execute DEBUG execute "SET FOREIGN_KEY_CHECKS=0;" with params "[]"
[ 2016-12-06 15:21:06 ] util.py[line:79] execute DEBUG (0.000) SET FOREIGN_KEY_CHECKS=0;; args=[]
[ 2016-12-06 15:21:06 ] generic.py[line:279] execute DEBUG execute "
            SELECT kc.`constraint_name`, kc.`column_name`, kc.`table_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`
            FROM information_schema.key_column_usage AS kc
            WHERE
                kc.table_schema = %s
        " with params "['autodeploy']"
[ 2016-12-06 15:21:06 ] util.py[line:79] execute DEBUG (0.002) 
            SELECT kc.`constraint_name`, kc.`column_name`, kc.`table_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`
            FROM information_schema.key_column_usage AS kc
            WHERE
                kc.table_schema = 'autodeploy'
        ; args=['autodeploy']
[ 2016-12-06 15:21:06 ] generic.py[line:279] execute DEBUG execute "
            SELECT c.constraint_name, c.table_name, c.constraint_type
            FROM information_schema.table_constraints AS c
            WHERE
                c.table_schema = %s
        " with params "['autodeploy']"
[ 2016-12-06 15:21:06 ] util.py[line:79] execute DEBUG (0.002) 
            SELECT c.constraint_name, c.table_name, c.constraint_type
            FROM information_schema.table_constraints AS c
            WHERE
                c.table_schema = 'autodeploy'
        ; args=['autodeploy']
[ 2016-12-06 15:21:06 ] generic.py[line:279] execute DEBUG execute "ALTER TABLE `user_per` ;" with params "[]"
[ 2016-12-06 15:21:06 ] util.py[line:79] execute DEBUG (0.001) ALTER TABLE `user_per` ;; args=[]
[ 2016-12-06 15:21:06 ] generic.py[line:279] execute DEBUG execute "ALTER TABLE `user_per` MODIFY `comment` varchar(255) NOT NULL;;" with params "[]"
[ 2016-12-06 15:21:06 ] util.py[line:79] execute DEBUG (0.001) ALTER TABLE `user_per` MODIFY `comment` varchar(255) NOT NULL;;; args=[]
[ 2016-12-06 15:21:25 ] util.py[line:79] execute DEBUG (0.000) SHOW TABLES; args=None
[ 2016-12-06 15:23:48 ] util.py[line:79] execute DEBUG (0.000) SHOW TABLES; args=None
[ 2016-12-06 15:24:10 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-06 15:24:10 ] util.py[line:79] execute DEBUG (0.001) SET foreign_key_checks=0; args=None
[ 2016-12-06 15:24:10 ] util.py[line:79] execute DEBUG (0.001) SET foreign_key_checks=1; args=None
[ 2016-12-06 15:25:27 ] util.py[line:79] execute DEBUG (0.001) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-06 15:25:28 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-06 15:25:28 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-06 15:26:07 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-06 15:26:07 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-06 15:26:07 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-06 15:26:15 ] util.py[line:79] execute DEBUG (0.000) SHOW TABLES; args=None
[ 2016-12-06 15:26:51 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-06 15:26:51 ] util.py[line:79] execute DEBUG (0.001) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-06 15:26:51 ] util.py[line:79] execute DEBUG (0.033) CREATE TABLE ROLLBACK_TEST (X INT); args=None
[ 2016-12-06 15:26:51 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO ROLLBACK_TEST (X) VALUES (8); args=None
[ 2016-12-06 15:26:51 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(X) FROM ROLLBACK_TEST; args=None
[ 2016-12-06 15:26:51 ] util.py[line:79] execute DEBUG (0.003) DROP TABLE ROLLBACK_TEST; args=None
[ 2016-12-06 15:26:51 ] generic.py[line:279] execute DEBUG execute "SET FOREIGN_KEY_CHECKS=0;" with params "[]"
[ 2016-12-06 15:26:51 ] util.py[line:79] execute DEBUG (0.000) SET FOREIGN_KEY_CHECKS=0;; args=[]
[ 2016-12-06 15:26:51 ] util.py[line:79] execute DEBUG (0.004) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=None
[ 2016-12-06 15:26:51 ] util.py[line:79] execute DEBUG (0.000) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=None
[ 2016-12-06 15:26:51 ] util.py[line:79] execute DEBUG (0.002) DROP TABLE DDL_TRANSACTION_TEST; args=None
[ 2016-12-06 15:26:51 ] generic.py[line:279] execute DEBUG execute "SET FOREIGN_KEY_CHECKS=0;" with params "[]"
[ 2016-12-06 15:26:51 ] util.py[line:79] execute DEBUG (0.000) SET FOREIGN_KEY_CHECKS=0;; args=[]
[ 2016-12-06 15:26:51 ] generic.py[line:279] execute DEBUG execute "ALTER TABLE `user_per` ADD COLUMN `ch` varchar(10) NULL;" with params "[]"
[ 2016-12-06 15:26:51 ] util.py[line:79] execute DEBUG (0.005) ALTER TABLE `user_per` ADD COLUMN `ch` varchar(10) NULL;; args=[]
[ 2016-12-06 15:26:51 ] generic.py[line:279] execute DEBUG execute "ALTER TABLE `user_per` ;" with params "[]"
[ 2016-12-06 15:26:51 ] util.py[line:79] execute DEBUG (0.000) ALTER TABLE `user_per` ;; args=[]
[ 2016-12-06 15:26:51 ] generic.py[line:279] execute DEBUG execute "ALTER TABLE `user_per` MODIFY `ch` varchar(10) NULL;;" with params "[]"
[ 2016-12-06 15:26:51 ] util.py[line:79] execute DEBUG (0.003) ALTER TABLE `user_per` MODIFY `ch` varchar(10) NULL;;; args=[]
[ 2016-12-06 15:26:51 ] generic.py[line:279] execute DEBUG execute "ALTER TABLE `user_per` ALTER COLUMN `ch` DROP DEFAULT;" with params "[]"
[ 2016-12-06 15:26:51 ] util.py[line:79] execute DEBUG (0.002) ALTER TABLE `user_per` ALTER COLUMN `ch` DROP DEFAULT;; args=[]
[ 2016-12-06 15:26:51 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE (`south_migrationhistory`.`app_name` = 'user'  AND `south_migrationhistory`.`migration` = '0002_auto__add_field_user_per_ch' ); args=('user', '0002_auto__add_field_user_per_ch')
[ 2016-12-06 15:26:51 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `south_migrationhistory` (`app_name`, `migration`, `applied`) VALUES ('user', '0002_auto__add_field_user_per_ch', '2016-12-06 15:26:51'); args=['user', '0002_auto__add_field_user_per_ch', u'2016-12-06 15:26:51']
[ 2016-12-06 15:26:51 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-06 15:26:51 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-06 15:27:33 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-06 15:27:33 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-06 15:27:33 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-06 15:28:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-06 15:28:19 ] util.py[line:79] execute DEBUG (0.001) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-06 15:28:19 ] util.py[line:79] execute DEBUG (0.032) CREATE TABLE ROLLBACK_TEST (X INT); args=None
[ 2016-12-06 15:28:19 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO ROLLBACK_TEST (X) VALUES (8); args=None
[ 2016-12-06 15:28:19 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(X) FROM ROLLBACK_TEST; args=None
[ 2016-12-06 15:28:19 ] util.py[line:79] execute DEBUG (0.001) DROP TABLE ROLLBACK_TEST; args=None
[ 2016-12-06 15:28:19 ] generic.py[line:279] execute DEBUG execute "SET FOREIGN_KEY_CHECKS=0;" with params "[]"
[ 2016-12-06 15:28:19 ] util.py[line:79] execute DEBUG (0.000) SET FOREIGN_KEY_CHECKS=0;; args=[]
[ 2016-12-06 15:28:19 ] util.py[line:79] execute DEBUG (0.004) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=None
[ 2016-12-06 15:28:19 ] util.py[line:79] execute DEBUG (0.000) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=None
[ 2016-12-06 15:28:19 ] util.py[line:79] execute DEBUG (0.001) DROP TABLE DDL_TRANSACTION_TEST; args=None
[ 2016-12-06 15:28:19 ] generic.py[line:279] execute DEBUG execute "SET FOREIGN_KEY_CHECKS=0;" with params "[]"
[ 2016-12-06 15:28:19 ] util.py[line:79] execute DEBUG (0.000) SET FOREIGN_KEY_CHECKS=0;; args=[]
[ 2016-12-06 15:28:19 ] generic.py[line:279] execute DEBUG execute "
            SELECT kc.`constraint_name`, kc.`column_name`, kc.`table_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`
            FROM information_schema.key_column_usage AS kc
            WHERE
                kc.table_schema = %s
        " with params "['autodeploy']"
[ 2016-12-06 15:28:19 ] util.py[line:79] execute DEBUG (0.000) 
            SELECT kc.`constraint_name`, kc.`column_name`, kc.`table_name`,
                kc.`referenced_table_name`, kc.`referenced_column_name`
            FROM information_schema.key_column_usage AS kc
            WHERE
                kc.table_schema = 'autodeploy'
        ; args=['autodeploy']
[ 2016-12-06 15:28:19 ] generic.py[line:279] execute DEBUG execute "
            SELECT c.constraint_name, c.table_name, c.constraint_type
            FROM information_schema.table_constraints AS c
            WHERE
                c.table_schema = %s
        " with params "['autodeploy']"
[ 2016-12-06 15:28:19 ] util.py[line:79] execute DEBUG (0.000) 
            SELECT c.constraint_name, c.table_name, c.constraint_type
            FROM information_schema.table_constraints AS c
            WHERE
                c.table_schema = 'autodeploy'
        ; args=['autodeploy']
[ 2016-12-06 15:28:19 ] generic.py[line:279] execute DEBUG execute "ALTER TABLE `user_per` DROP COLUMN `ch` CASCADE;" with params "[]"
[ 2016-12-06 15:28:19 ] util.py[line:79] execute DEBUG (0.008) ALTER TABLE `user_per` DROP COLUMN `ch` CASCADE;; args=[]
[ 2016-12-06 15:28:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE (`south_migrationhistory`.`app_name` = 'user'  AND `south_migrationhistory`.`migration` = '0003_auto__del_field_user_per_ch' ); args=('user', '0003_auto__del_field_user_per_ch')
[ 2016-12-06 15:28:19 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `south_migrationhistory` (`app_name`, `migration`, `applied`) VALUES ('user', '0003_auto__del_field_user_per_ch', '2016-12-06 15:28:19'); args=['user', '0003_auto__del_field_user_per_ch', u'2016-12-06 15:28:19']
[ 2016-12-06 15:28:20 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-06 15:28:20 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:52: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  `profile` option.""",

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:118: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:128: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The IPython profile to use."""

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:142: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Whether to overwrite existing config files when copying""")

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:162: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Whether to create profile dir if it doesn't exist""")

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:173: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:178: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  usual traceback""")

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magic.py:307: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  "Automatically call line magics without requiring explicit % prefix")

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:132: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  multi_line_specials = CBool(True, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:362: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:367: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:392: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:395: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:414: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:415: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(False, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:427: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(250, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:439: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(300, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:453: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(600, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:471: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(700, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:495: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(900, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:510: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(1000, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:513: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="RegExp to identify potential function names.")

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:515: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="RegExp to exclude strings with this start from autocalling.")

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\alias.py:195: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_aliases = List(default_aliases(), config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\alias.py:196: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  user_aliases = List(default_value=[], config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:61: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  plain_text_only = Bool(False, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:313: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:319: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  singleton_printers = Dict(config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:323: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  type_printers = Dict(config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:327: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  deferred_printers = Dict(config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:594: DeprecationWarning: metadata {'config': False} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=False)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:600: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:607: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  pprint = Bool(True, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:610: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  verbose = Bool(False, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:613: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  max_width = Integer(79, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:616: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  newline = Unicode('\n', config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:621: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  float_precision = CUnicode('', config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:143: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:152: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:475: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Should the history database include output? (default: no)"

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:478: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Write to database every x commands (higher values save disk access & power).\n"

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:259: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  color_scheme = Unicode('Linux', config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:275: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Input prompt.  '\\#' will be transformed to the prompt number")

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:277: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Continuation prompt.")

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:279: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Output prompt. '\\#' will be transformed to the prompt number")

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:284: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:179: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:190: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:197: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:202: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:206: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The part of the banner to be printed before the profile"""

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:209: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The part of the banner to be printed after the profile"""

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:220: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:227: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:231: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Set the color scheme (NoColor, Linux, or LightBG)."

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:242: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  debug = CBool(False, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:256: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:259: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Don't call post-execute functions that have failed in the past."

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:273: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  ipython_dir= Unicode('', config=True) # Set to get_ipython_dir() in __init__

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:289: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:294: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:300: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:303: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:307: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:310: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Save multi-line entries as one entry in readline history"

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:314: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  will be displayed as regular output instead."""

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:320: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.in_template")

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:322: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.in2_template")

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:324: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.out_template")

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:326: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.justify")

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:349: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Show rewritten input, e.g. for autocall."

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:352: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  quiet = CBool(False, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:354: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  history_length = Integer(10000, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:360: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:365: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  readline_use = CBool(True, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:366: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  readline_remove_delims = Unicode('-/~', config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:383: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  ], config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:396: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  run interactively (displaying output from expressions).""")

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:400: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_in = SeparateUnicode('\n', config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:401: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_out = SeparateUnicode('', config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:402: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_out2 = SeparateUnicode('', config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:403: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  wildcards_case_sensitive = CBool(True, config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:405: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_value='Context', config=True)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:290: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="auto editing of files with syntax errors.")

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:295: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  you can force a direct exit without any confirmation.""",

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:305: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Set the editor used by IPython (default to $EDITOR/vi/notepad)."

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:308: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="The shell program to be used for paging.")

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:320: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default.""",

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:323: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Enable auto setting the terminal title."

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:276: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:556: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:568: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:578: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:89: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """,

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:116: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:139: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="A list of dotted module names of IPython extensions to load."

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:142: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="dotted module name of an IPython extension to load."

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:148: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Reraise exceptions encountered loading IPython extensions?",

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:152: DeprecationWarning: metadata {'config': False} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_extensions = List(Unicode(), [u'storemagic'], config=False)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:156: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  be hidden from tools like %who?"""

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""List of files to run at IPython startup."""

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:164: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  variable at IPython startup."""

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:167: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""A file to be run""")

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:170: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""lines of code to run at IPython startup."""

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:173: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Execute the given command string."

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:176: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Run the module as a script."

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:179: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Enable GUI event loop integration with any of {0}.".format(gui_keys)

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:184: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  the default matplotlib backend."""

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:190: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:197: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\extensions\storemagic.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:245: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Start IPython quickly by skipping the loading of config files."""

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:252: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Whether to display a banner upon starting IPython."

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:260: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  file or command."""

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:186: DeprecationWarning: TerminalIPythonApp._classes_default is deprecated: use @default decorator instead.
  def _classes_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:99: DeprecationWarning: BaseIPythonApplication._config_file_name_default is deprecated: use @default decorator instead.
  def _config_file_name_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:111: DeprecationWarning: BaseIPythonApplication._config_file_paths_default is deprecated: use @default decorator instead.
  def _config_file_paths_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:165: DeprecationWarning: BaseIPythonApplication._config_files_default is deprecated: use @default decorator instead.
  def _config_files_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:144: DeprecationWarning: BaseIPythonApplication._ipython_dir_default is deprecated: use @default decorator instead.
  def _ipython_dir_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:151: DeprecationWarning: BaseIPythonApplication._profile_dir_default is deprecated: use @default decorator instead.
  def _profile_dir_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:186: DeprecationWarning: TerminalIPythonApp._classes_default is deprecated: use @default decorator instead.
  def _classes_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:151: DeprecationWarning: BaseIPythonApplication._profile_dir_default is deprecated: use @default decorator instead.
  def _profile_dir_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:144: DeprecationWarning: BaseIPythonApplication._ipython_dir_default is deprecated: use @default decorator instead.
  def _ipython_dir_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:57: DeprecationWarning: ProfileDir._location_changed is deprecated: use @observe and @unobserve instead.
  def _location_changed(self, name, old, new):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:126: DeprecationWarning: ProfileDir._security_dir_changed is deprecated: use @observe and @unobserve instead.
  def _security_dir_changed(self, name, old, new):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:71: DeprecationWarning: ProfileDir._log_dir_changed is deprecated: use @observe and @unobserve instead.
  def _log_dir_changed(self, name, old, new):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:111: DeprecationWarning: ProfileDir._startup_dir_changed is deprecated: use @observe and @unobserve instead.
  def _startup_dir_changed(self, name, old, new):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:132: DeprecationWarning: ProfileDir._pid_dir_changed is deprecated: use @observe and @unobserve instead.
  def _pid_dir_changed(self, name, old, new):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:138: DeprecationWarning: ProfileDir._static_dir_changed is deprecated: use @observe and @unobserve instead.
  def _static_dir_changed(self, name, old, new):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:111: DeprecationWarning: BaseIPythonApplication._config_file_paths_default is deprecated: use @default decorator instead.
  def _config_file_paths_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:165: DeprecationWarning: BaseIPythonApplication._config_files_default is deprecated: use @default decorator instead.
  def _config_files_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:99: DeprecationWarning: BaseIPythonApplication._config_file_name_default is deprecated: use @default decorator instead.
  def _config_file_name_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:268: DeprecationWarning: InteractiveShell._exiter_default is deprecated: use @default decorator instead.
  def _exiter_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:525: DeprecationWarning: TerminalInteractiveShell._ipython_dir_changed is deprecated: use @observe and @unobserve instead.
  def _ipython_dir_changed(self, name, new):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:459: DeprecationWarning: HistoryManager._dir_hist_default is deprecated: use @default decorator instead.
  def _dir_hist_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:165: DeprecationWarning: HistoryManager._db_changed is deprecated: use @observe and @unobserve instead.
  def _db_changed(self, name, old, new):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:459: DeprecationWarning: HistoryManager._dir_hist_default is deprecated: use @default decorator instead.
  def _dir_hist_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:268: DeprecationWarning: InteractiveShell._exiter_default is deprecated: use @default decorator instead.
  def _exiter_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:296: DeprecationWarning: PromptManager._invisible_chars_default is deprecated: use @default decorator instead.
  def _invisible_chars_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:272: DeprecationWarning: PromptManager._lazy_evaluate_fields_default is deprecated: use @default decorator instead.
  def _lazy_evaluate_fields_default(self): return lazily_evaluate.copy()

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:272: DeprecationWarning: PromptManager._lazy_evaluate_fields_default is deprecated: use @default decorator instead.
  def _lazy_evaluate_fields_default(self): return lazily_evaluate.copy()

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:296: DeprecationWarning: PromptManager._invisible_chars_default is deprecated: use @default decorator instead.
  def _invisible_chars_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:1180] on_trait_change WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:313: DeprecationWarning: on_trait_change is deprecated: use observe instead
  'in2_template', 'out_template'])

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:81: DeprecationWarning: DisplayFormatter._active_types_default is deprecated: use @default decorator instead.
  def _active_types_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:98: DeprecationWarning: DisplayFormatter._formatters_default is deprecated: use @default decorator instead.
  def _formatters_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:92: DeprecationWarning: DisplayFormatter._ipython_display_formatter_default is deprecated: use @default decorator instead.
  def _ipython_display_formatter_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:84: DeprecationWarning: DisplayFormatter._active_types_changed is deprecated: use @observe and @unobserve instead.
  def _active_types_changed(self, name, old, new):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:98: DeprecationWarning: DisplayFormatter._formatters_default is deprecated: use @default decorator instead.
  def _formatters_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:677: DeprecationWarning: PlainTextFormatter._deferred_printers_default is deprecated: use @default decorator instead.
  def _deferred_printers_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:669: DeprecationWarning: PlainTextFormatter._singleton_printers_default is deprecated: use @default decorator instead.
  def _singleton_printers_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:672: DeprecationWarning: PlainTextFormatter._type_printers_default is deprecated: use @default decorator instead.
  def _type_printers_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:91: DeprecationWarning: ScriptMagics._script_magics_default is deprecated: use @default decorator instead.
  def _script_magics_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:91: DeprecationWarning: ScriptMagics._script_magics_default is deprecated: use @default decorator instead.
  def _script_magics_default(self):

[ 2016-12-06 15:44:24 ] traitlets.py[line:1180] on_trait_change WARNING E:\Python27\lib\site-packages\IPython\core\extensions.py:58: DeprecationWarning: on_trait_change is deprecated: use observe instead
  self._on_ipython_dir_changed, 'ipython_dir'

[ 2016-12-06 15:44:24 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\extensions\storemagic.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-06 15:53:04 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:92: DeprecationWarning: DisplayFormatter._ipython_display_formatter_default is deprecated: use @default decorator instead.
  def _ipython_display_formatter_default(self):

[ 2016-12-06 15:53:04 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:669: DeprecationWarning: PlainTextFormatter._singleton_printers_default is deprecated: use @default decorator instead.
  def _singleton_printers_default(self):

[ 2016-12-06 15:53:04 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:672: DeprecationWarning: PlainTextFormatter._type_printers_default is deprecated: use @default decorator instead.
  def _type_printers_default(self):

[ 2016-12-06 15:53:04 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:677: DeprecationWarning: PlainTextFormatter._deferred_printers_default is deprecated: use @default decorator instead.
  def _deferred_printers_default(self):

[ 2016-12-06 15:53:04 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username` FROM `admin` LIMIT 21; args=()
[ 2016-12-06 15:53:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username` FROM `admin` LIMIT 21; args=()
[ 2016-12-06 15:59:50 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-06 15:59:50 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-06 15:59:50 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 82, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 82, u'2016-11-25 20:26:56', 8)
[ 2016-12-06 15:59:50 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-06 15:59:50 ] util.py[line:79] execute DEBUG (0.001) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = 'zutzd17pikcy9x4vk6812nybo53oqah9'  LIMIT 1; args=(u'zutzd17pikcy9x4vk6812nybo53oqah9',)
[ 2016-12-06 15:59:50 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-06 16:59:50' WHERE `django_session`.`session_key` = 'zutzd17pikcy9x4vk6812nybo53oqah9' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-06 16:59:50', u'zutzd17pikcy9x4vk6812nybo53oqah9')
[ 2016-12-06 15:59:50 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('zutzd17pikcy9x4vk6812nybo53oqah9', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-06 16:59:50'); args=(u'zutzd17pikcy9x4vk6812nybo53oqah9', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-06 16:59:50')
[ 2016-12-06 15:59:50 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'zutzd17pikcy9x4vk6812nybo53oqah9'  AND `django_session`.`expire_date` > '2016-12-06 15:59:50' ); args=('zutzd17pikcy9x4vk6812nybo53oqah9', u'2016-12-06 15:59:50')
[ 2016-12-06 15:59:50 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-06 15:59:50' ; args=(u'2016-12-06 15:59:50',)
[ 2016-12-06 15:59:50 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-06 15:59:53 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'zutzd17pikcy9x4vk6812nybo53oqah9'  AND `django_session`.`expire_date` > '2016-12-06 15:59:53' ); args=('zutzd17pikcy9x4vk6812nybo53oqah9', u'2016-12-06 15:59:53')
[ 2016-12-06 16:00:47 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'zutzd17pikcy9x4vk6812nybo53oqah9'  AND `django_session`.`expire_date` > '2016-12-06 16:00:47' ); args=('zutzd17pikcy9x4vk6812nybo53oqah9', u'2016-12-06 16:00:47')
[ 2016-12-06 16:00:47 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-06 16:00:47 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-06 16:00:50 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'zutzd17pikcy9x4vk6812nybo53oqah9'  AND `django_session`.`expire_date` > '2016-12-06 16:00:50' ); args=('zutzd17pikcy9x4vk6812nybo53oqah9', u'2016-12-06 16:00:50')
[ 2016-12-06 16:01:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'zutzd17pikcy9x4vk6812nybo53oqah9'  AND `django_session`.`expire_date` > '2016-12-06 16:01:18' ); args=('zutzd17pikcy9x4vk6812nybo53oqah9', u'2016-12-06 16:01:18')
[ 2016-12-06 16:01:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username` FROM `admin` LIMIT 21; args=()
[ 2016-12-06 16:01:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 21; args=()
[ 2016-12-06 16:01:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 21; args=()
[ 2016-12-06 16:01:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username` FROM `admin` LIMIT 21; args=()
[ 2016-12-06 16:01:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 21; args=()
[ 2016-12-06 16:01:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username` FROM `admin` LIMIT 21; args=()
[ 2016-12-06 16:01:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 21; args=()
[ 2016-12-06 16:01:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username` FROM `admin` LIMIT 21; args=()
[ 2016-12-06 16:01:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 21; args=()
[ 2016-12-06 16:01:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username` FROM `admin` LIMIT 21; args=()
[ 2016-12-06 16:01:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 21; args=()
[ 2016-12-06 16:01:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username` FROM `admin` LIMIT 21; args=()
[ 2016-12-06 16:02:05 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'zutzd17pikcy9x4vk6812nybo53oqah9'  AND `django_session`.`expire_date` > '2016-12-06 16:02:05' ); args=('zutzd17pikcy9x4vk6812nybo53oqah9', u'2016-12-06 16:02:05')
[ 2016-12-06 16:02:05 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username` FROM `admin`; args=()
[ 2016-12-06 16:02:05 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-06 16:03:30 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'zutzd17pikcy9x4vk6812nybo53oqah9'  AND `django_session`.`expire_date` > '2016-12-06 16:03:30' ); args=('zutzd17pikcy9x4vk6812nybo53oqah9', u'2016-12-06 16:03:30')
[ 2016-12-06 16:03:30 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username` FROM `admin`; args=()
[ 2016-12-06 16:03:30 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-06 16:03:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'zutzd17pikcy9x4vk6812nybo53oqah9'  AND `django_session`.`expire_date` > '2016-12-06 16:03:44' ); args=('zutzd17pikcy9x4vk6812nybo53oqah9', u'2016-12-06 16:03:44')
[ 2016-12-06 16:03:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username` FROM `admin`; args=()
[ 2016-12-06 16:03:44 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-06 16:03:46 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'zutzd17pikcy9x4vk6812nybo53oqah9'  AND `django_session`.`expire_date` > '2016-12-06 16:03:46' ); args=('zutzd17pikcy9x4vk6812nybo53oqah9', u'2016-12-06 16:03:46')
[ 2016-12-06 16:03:48 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'zutzd17pikcy9x4vk6812nybo53oqah9'  AND `django_session`.`expire_date` > '2016-12-06 16:03:48' ); args=('zutzd17pikcy9x4vk6812nybo53oqah9', u'2016-12-06 16:03:48')
[ 2016-12-06 16:03:48 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username` FROM `admin`; args=()
[ 2016-12-06 16:03:48 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-06 16:04:24 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'zutzd17pikcy9x4vk6812nybo53oqah9'  AND `django_session`.`expire_date` > '2016-12-06 16:04:24' ); args=('zutzd17pikcy9x4vk6812nybo53oqah9', u'2016-12-06 16:04:24')
[ 2016-12-06 16:04:24 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username` FROM `admin`; args=()
[ 2016-12-06 16:04:24 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-06 16:07:06 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'zutzd17pikcy9x4vk6812nybo53oqah9'  AND `django_session`.`expire_date` > '2016-12-06 16:07:06' ); args=('zutzd17pikcy9x4vk6812nybo53oqah9', u'2016-12-06 16:07:06')
[ 2016-12-06 16:07:06 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`id`, `admin`.`username` FROM `admin`; args=()
[ 2016-12-06 16:07:06 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 11:28:14 ] prodution   : ERROR    连接172.19.20.116数据库错误
[ 2016-12-07 11:28:14 ] prodution   : ERROR    数据库172.19.20.116连接失败
[ 2016-12-07 11:31:40 ] util.py[line:79] execute DEBUG (0.012) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-07 11:31:40 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-07 11:31:40 ] util.py[line:79] execute DEBUG (0.001) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 83, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 83, u'2016-11-25 20:26:56', 8)
[ 2016-12-07 11:31:40 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-07 11:31:40 ] util.py[line:79] execute DEBUG (0.006) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = '8tto1rymyzzgdjxu00s4s6clmqrvdvwk'  LIMIT 1; args=(u'8tto1rymyzzgdjxu00s4s6clmqrvdvwk',)
[ 2016-12-07 11:31:40 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-07 12:31:40' WHERE `django_session`.`session_key` = '8tto1rymyzzgdjxu00s4s6clmqrvdvwk' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-07 12:31:40', u'8tto1rymyzzgdjxu00s4s6clmqrvdvwk')
[ 2016-12-07 11:31:40 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('8tto1rymyzzgdjxu00s4s6clmqrvdvwk', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-07 12:31:40'); args=(u'8tto1rymyzzgdjxu00s4s6clmqrvdvwk', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-07 12:31:40')
[ 2016-12-07 11:31:40 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '8tto1rymyzzgdjxu00s4s6clmqrvdvwk'  AND `django_session`.`expire_date` > '2016-12-07 11:31:40' ); args=('8tto1rymyzzgdjxu00s4s6clmqrvdvwk', u'2016-12-07 11:31:40')
[ 2016-12-07 11:31:40 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-07 11:31:40' ; args=(u'2016-12-07 11:31:40',)
[ 2016-12-07 11:31:40 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-07 11:31:48 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '8tto1rymyzzgdjxu00s4s6clmqrvdvwk'  AND `django_session`.`expire_date` > '2016-12-07 11:31:48' ); args=('8tto1rymyzzgdjxu00s4s6clmqrvdvwk', u'2016-12-07 11:31:48')
[ 2016-12-07 11:31:48 ] util.py[line:79] execute DEBUG (0.004) SELECT `admin`.`id`, `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 11:31:48 ] util.py[line:79] execute DEBUG (0.010) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 11:31:55 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '8tto1rymyzzgdjxu00s4s6clmqrvdvwk'  AND `django_session`.`expire_date` > '2016-12-07 11:31:55' ); args=('8tto1rymyzzgdjxu00s4s6clmqrvdvwk', u'2016-12-07 11:31:55')
[ 2016-12-07 11:31:55 ] util.py[line:79] execute DEBUG (0.009) INSERT INTO `user_per` (`Per_user`, `Per_code`, `comment`) VALUES ('8', '001', ''); args=[u'8', u'001', u'']
[ 2016-12-07 11:34:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '8tto1rymyzzgdjxu00s4s6clmqrvdvwk'  AND `django_session`.`expire_date` > '2016-12-07 11:34:18' ); args=('8tto1rymyzzgdjxu00s4s6clmqrvdvwk', u'2016-12-07 11:34:18')
[ 2016-12-07 11:34:18 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_per` (`Per_user`, `Per_code`, `comment`) VALUES ('8', '001', ''); args=[u'8', u'001', u'']
[ 2016-12-07 11:34:29 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '8tto1rymyzzgdjxu00s4s6clmqrvdvwk'  AND `django_session`.`expire_date` > '2016-12-07 11:34:29' ); args=('8tto1rymyzzgdjxu00s4s6clmqrvdvwk', u'2016-12-07 11:34:29')
[ 2016-12-07 11:34:29 ] util.py[line:79] execute DEBUG (0.003) SELECT `admin`.`id`, `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 11:34:29 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 11:34:36 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '8tto1rymyzzgdjxu00s4s6clmqrvdvwk'  AND `django_session`.`expire_date` > '2016-12-07 11:34:36' ); args=('8tto1rymyzzgdjxu00s4s6clmqrvdvwk', u'2016-12-07 11:34:36')
[ 2016-12-07 11:34:36 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_per` (`Per_user`, `Per_code`, `comment`) VALUES ('chenyh', '001', ''); args=[u'chenyh', u'001', u'']
[ 2016-12-07 11:37:24 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '8tto1rymyzzgdjxu00s4s6clmqrvdvwk'  AND `django_session`.`expire_date` > '2016-12-07 11:37:24' ); args=('8tto1rymyzzgdjxu00s4s6clmqrvdvwk', u'2016-12-07 11:37:24')
[ 2016-12-07 11:37:24 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-07 11:37:24 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-07 11:37:27 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '8tto1rymyzzgdjxu00s4s6clmqrvdvwk'  AND `django_session`.`expire_date` > '2016-12-07 11:37:27' ); args=('8tto1rymyzzgdjxu00s4s6clmqrvdvwk', u'2016-12-07 11:37:27')
[ 2016-12-07 11:37:27 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 11:37:27 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 11:37:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '8tto1rymyzzgdjxu00s4s6clmqrvdvwk'  AND `django_session`.`expire_date` > '2016-12-07 11:37:32' ); args=('8tto1rymyzzgdjxu00s4s6clmqrvdvwk', u'2016-12-07 11:37:32')
[ 2016-12-07 11:37:32 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_per` (`Per_user`, `Per_code`, `comment`) VALUES ('chenyh', '001', 'aa'); args=[u'chenyh', u'001', u'aa']
[ 2016-12-07 11:37:32 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 11:37:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 11:37:39 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '8tto1rymyzzgdjxu00s4s6clmqrvdvwk'  AND `django_session`.`expire_date` > '2016-12-07 11:37:39' ); args=('8tto1rymyzzgdjxu00s4s6clmqrvdvwk', u'2016-12-07 11:37:39')
[ 2016-12-07 11:37:39 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_per` (`Per_user`, `Per_code`, `comment`) VALUES ('ertr', '001', 'ssss'); args=[u'ertr', u'001', u'ssss']
[ 2016-12-07 11:37:39 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 11:37:39 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 11:38:16 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '8tto1rymyzzgdjxu00s4s6clmqrvdvwk'  AND `django_session`.`expire_date` > '2016-12-07 11:38:16' ); args=('8tto1rymyzzgdjxu00s4s6clmqrvdvwk', u'2016-12-07 11:38:16')
[ 2016-12-07 11:38:19 ] util.py[line:79] execute DEBUG (0.002) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '8tto1rymyzzgdjxu00s4s6clmqrvdvwk'  AND `django_session`.`expire_date` > '2016-12-07 11:38:19' ); args=('8tto1rymyzzgdjxu00s4s6clmqrvdvwk', u'2016-12-07 11:38:19')
[ 2016-12-07 11:38:19 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-07 11:38:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-07 11:38:42 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '8tto1rymyzzgdjxu00s4s6clmqrvdvwk'  AND `django_session`.`expire_date` > '2016-12-07 11:38:42' ); args=('8tto1rymyzzgdjxu00s4s6clmqrvdvwk', u'2016-12-07 11:38:42')
[ 2016-12-07 11:38:42 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 11:38:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 11:45:51 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '8tto1rymyzzgdjxu00s4s6clmqrvdvwk'  AND `django_session`.`expire_date` > '2016-12-07 11:45:51' ); args=('8tto1rymyzzgdjxu00s4s6clmqrvdvwk', u'2016-12-07 11:45:51')
[ 2016-12-07 11:45:55 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '8tto1rymyzzgdjxu00s4s6clmqrvdvwk'  AND `django_session`.`expire_date` > '2016-12-07 11:45:55' ); args=('8tto1rymyzzgdjxu00s4s6clmqrvdvwk', u'2016-12-07 11:45:55')
[ 2016-12-07 11:46:23 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '8tto1rymyzzgdjxu00s4s6clmqrvdvwk'  AND `django_session`.`expire_date` > '2016-12-07 11:46:23' ); args=('8tto1rymyzzgdjxu00s4s6clmqrvdvwk', u'2016-12-07 11:46:23')
[ 2016-12-07 11:46:23 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-07 11:46:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-07 11:46:27 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '8tto1rymyzzgdjxu00s4s6clmqrvdvwk'  AND `django_session`.`expire_date` > '2016-12-07 11:46:27' ); args=('8tto1rymyzzgdjxu00s4s6clmqrvdvwk', u'2016-12-07 11:46:27')
[ 2016-12-07 11:46:27 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-07 11:46:27 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-07 12:53:05 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-07 12:53:05 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-07 12:53:05 ] util.py[line:79] execute DEBUG (0.001) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 84, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 84, u'2016-11-25 20:26:56', 8)
[ 2016-12-07 12:53:05 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-07 12:53:05 ] util.py[line:79] execute DEBUG (0.000) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  LIMIT 1; args=(u'gom01214up7lnx79ie0f8txaqvjk3lay',)
[ 2016-12-07 12:53:05 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-07 13:53:05' WHERE `django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-07 13:53:05', u'gom01214up7lnx79ie0f8txaqvjk3lay')
[ 2016-12-07 12:53:05 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('gom01214up7lnx79ie0f8txaqvjk3lay', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-07 13:53:05'); args=(u'gom01214up7lnx79ie0f8txaqvjk3lay', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-07 13:53:05')
[ 2016-12-07 12:53:05 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 12:53:05' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 12:53:05')
[ 2016-12-07 12:53:05 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-07 12:53:05' ; args=(u'2016-12-07 12:53:05',)
[ 2016-12-07 12:53:05 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-07 12:53:07 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 12:53:07' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 12:53:07')
[ 2016-12-07 12:53:07 ] util.py[line:79] execute DEBUG (0.001) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 12:55:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 12:55:42' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 12:55:42')
[ 2016-12-07 12:55:42 ] util.py[line:79] execute DEBUG (0.001) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 12:56:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 12:56:11' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 12:56:11')
[ 2016-12-07 12:56:11 ] util.py[line:79] execute DEBUG (0.000) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code  where Per_user = 'chenyh'; args=None
[ 2016-12-07 12:58:35 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 12:58:35' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 12:58:35')
[ 2016-12-07 12:58:35 ] util.py[line:79] execute DEBUG (0.001) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code  where Per_user = 'chenyh'; args=None
[ 2016-12-07 12:58:45 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 12:58:45' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 12:58:45')
[ 2016-12-07 12:58:45 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 12:58:45 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 12:58:47 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 12:58:47' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 12:58:47')
[ 2016-12-07 12:58:47 ] util.py[line:79] execute DEBUG (0.001) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code  where Per_user = 'chenyh'; args=None
[ 2016-12-07 13:17:51 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 13:17:51' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 13:17:51')
[ 2016-12-07 13:17:51 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 1 ; args=(1,)
[ 2016-12-07 13:17:51 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 13:21:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 13:21:18' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 13:21:18')
[ 2016-12-07 13:21:18 ] util.py[line:79] execute DEBUG (0.000) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 13:21:20 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 13:21:20' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 13:21:20')
[ 2016-12-07 13:21:20 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 1 ; args=(1,)
[ 2016-12-07 13:21:20 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 13:23:03 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 13:23:03' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 13:23:03')
[ 2016-12-07 13:23:03 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 1 ; args=(1,)
[ 2016-12-07 13:23:04 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 13:23:17 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 13:23:17' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 13:23:17')
[ 2016-12-07 13:23:17 ] util.py[line:79] execute DEBUG (0.001) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 13:23:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 13:23:19' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 13:23:19')
[ 2016-12-07 13:23:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 2 ; args=(2,)
[ 2016-12-07 13:23:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 13:24:27 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 13:24:27' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 13:24:27')
[ 2016-12-07 13:24:27 ] util.py[line:79] execute DEBUG (0.000) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 13:24:29 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 13:24:28' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 13:24:28')
[ 2016-12-07 13:24:29 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 2 ; args=(2,)
[ 2016-12-07 13:24:29 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 13:24:53 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-07 13:24:53 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-07 13:24:53 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 85, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 85, u'2016-11-25 20:26:56', 8)
[ 2016-12-07 13:24:53 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-07 13:24:53 ] util.py[line:79] execute DEBUG (0.001) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  LIMIT 1; args=(u'bdm8t7ifwdfevxq1jttnuqul77mnf008',)
[ 2016-12-07 13:24:53 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-07 14:24:53' WHERE `django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-07 14:24:53', u'bdm8t7ifwdfevxq1jttnuqul77mnf008')
[ 2016-12-07 13:24:53 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('bdm8t7ifwdfevxq1jttnuqul77mnf008', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-07 14:24:53'); args=(u'bdm8t7ifwdfevxq1jttnuqul77mnf008', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-07 14:24:53')
[ 2016-12-07 13:24:53 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:24:53' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:24:53')
[ 2016-12-07 13:24:53 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-07 13:24:53' ; args=(u'2016-12-07 13:24:53',)
[ 2016-12-07 13:24:53 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-07 13:24:56 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:24:56' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:24:56')
[ 2016-12-07 13:24:56 ] util.py[line:79] execute DEBUG (0.001) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 13:24:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:24:59' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:24:59')
[ 2016-12-07 13:24:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 2 ; args=(2,)
[ 2016-12-07 13:24:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 13:27:05 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 13:27:05' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 13:27:05')
[ 2016-12-07 13:27:05 ] util.py[line:79] execute DEBUG (0.000) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 13:27:07 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 13:27:07' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 13:27:07')
[ 2016-12-07 13:27:07 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 2 ; args=(2,)
[ 2016-12-07 13:27:07 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 13:27:16 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 13:27:16' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 13:27:16')
[ 2016-12-07 13:27:16 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 2 ; args=(2,)
[ 2016-12-07 13:27:16 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 13:27:20 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 13:27:20' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 13:27:20')
[ 2016-12-07 13:27:20 ] util.py[line:79] execute DEBUG (0.001) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 13:27:21 ] util.py[line:79] execute DEBUG (0.006) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 13:27:21' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 13:27:21')
[ 2016-12-07 13:27:21 ] util.py[line:79] execute DEBUG (0.002) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 1 ; args=(1,)
[ 2016-12-07 13:27:21 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 13:28:20 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:28:20' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:28:20')
[ 2016-12-07 13:28:22 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:28:22' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:28:22')
[ 2016-12-07 13:28:22 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 13:28:22 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 13:28:26 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:28:26' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:28:26')
[ 2016-12-07 13:28:26 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-07 13:28:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-07 13:28:28 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:28:28' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:28:28')
[ 2016-12-07 13:28:28 ] util.py[line:79] execute DEBUG (0.001) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 13:28:31 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:28:31' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:28:31')
[ 2016-12-07 13:28:31 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 7 ; args=(7,)
[ 2016-12-07 13:28:31 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 13:29:09 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:29:09' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:29:09')
[ 2016-12-07 13:29:09 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 7 ; args=(7,)
[ 2016-12-07 13:29:09 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 13:29:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:29:11' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:29:11')
[ 2016-12-07 13:29:11 ] util.py[line:79] execute DEBUG (0.001) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 13:29:12 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:29:12' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:29:12')
[ 2016-12-07 13:29:12 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 7 ; args=(7,)
[ 2016-12-07 13:29:12 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 13:29:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:29:42' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:29:42')
[ 2016-12-07 13:29:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 7 ; args=(7,)
[ 2016-12-07 13:29:42 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 13:29:43 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:29:43' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:29:43')
[ 2016-12-07 13:29:43 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 7 ; args=(7,)
[ 2016-12-07 13:29:43 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 13:29:48 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:29:48' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:29:48')
[ 2016-12-07 13:29:48 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 7 ; args=(7,)
[ 2016-12-07 13:29:48 ] util.py[line:79] execute DEBUG (0.000) UPDATE `user_per` SET `Per_user` = 'chenyh', `Per_code` = '010', `comment` = ' aa' WHERE `user_per`.`id` = 7 ; args=('chenyh', '010', ' aa', 7)
[ 2016-12-07 13:29:48 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 13:30:05 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:30:05' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:30:05')
[ 2016-12-07 13:30:05 ] util.py[line:79] execute DEBUG (0.001) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 13:30:08 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:30:08' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:30:08')
[ 2016-12-07 13:30:08 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 1 ; args=(1,)
[ 2016-12-07 13:30:08 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 13:30:13 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:30:13' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:30:13')
[ 2016-12-07 13:30:13 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 13:30:13 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 13:30:26 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:30:26' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:30:26')
[ 2016-12-07 13:30:26 ] util.py[line:79] execute DEBUG (0.000) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code  where Per_user = 'ertr'; args=None
[ 2016-12-07 13:30:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:30:32' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:30:32')
[ 2016-12-07 13:30:32 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-07 13:30:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-07 13:30:40 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:30:40' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:30:40')
[ 2016-12-07 13:30:40 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-07 13:30:40 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-07 13:31:40 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 13:31:40' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 13:31:40')
[ 2016-12-07 13:31:40 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 1 ; args=(1,)
[ 2016-12-07 13:31:40 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 13:31:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 13:31:44' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 13:31:44')
[ 2016-12-07 13:31:44 ] util.py[line:79] execute DEBUG (0.001) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 13:31:46 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'gom01214up7lnx79ie0f8txaqvjk3lay'  AND `django_session`.`expire_date` > '2016-12-07 13:31:46' ); args=('gom01214up7lnx79ie0f8txaqvjk3lay', u'2016-12-07 13:31:46')
[ 2016-12-07 13:31:46 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 13:32:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:32:37' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:32:37')
[ 2016-12-07 13:32:37 ] util.py[line:79] execute DEBUG (0.000) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 13:32:39 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:32:39' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:32:39')
[ 2016-12-07 13:32:39 ] util.py[line:79] execute DEBUG (0.001) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 13:32:40 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:32:40' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:32:40')
[ 2016-12-07 13:32:40 ] util.py[line:79] execute DEBUG (0.000) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 13:32:42 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:32:42' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:32:42')
[ 2016-12-07 13:32:42 ] util.py[line:79] execute DEBUG (0.001) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 13:32:44 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:32:44' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:32:44')
[ 2016-12-07 13:32:44 ] util.py[line:79] execute DEBUG (0.001) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 13:32:48 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:32:48' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:32:48')
[ 2016-12-07 13:32:48 ] util.py[line:79] execute DEBUG (0.000) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 13:32:49 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:32:49' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:32:49')
[ 2016-12-07 13:32:49 ] util.py[line:79] execute DEBUG (0.000) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 13:33:30 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:33:30' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:33:30')
[ 2016-12-07 13:35:26 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:35:26' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:35:26')
[ 2016-12-07 13:35:29 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:35:29' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:35:29')
[ 2016-12-07 13:35:29 ] util.py[line:79] execute DEBUG (0.000) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 13:35:33 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:35:33' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:35:33')
[ 2016-12-07 13:35:33 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 8 ; args=(8,)
[ 2016-12-07 13:35:33 ] util.py[line:79] execute DEBUG (0.001) DELETE FROM `user_per` WHERE `id` IN (8); args=(8,)
[ 2016-12-07 13:35:46 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:35:46' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:35:46')
[ 2016-12-07 13:35:46 ] util.py[line:79] execute DEBUG (0.001) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 1 ; args=(1,)
[ 2016-12-07 13:35:46 ] util.py[line:79] execute DEBUG (0.001) DELETE FROM `user_per` WHERE `id` IN (1); args=(1,)
[ 2016-12-07 13:35:46 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 2 ; args=(2,)
[ 2016-12-07 13:35:46 ] util.py[line:79] execute DEBUG (0.000) DELETE FROM `user_per` WHERE `id` IN (2); args=(2,)
[ 2016-12-07 13:35:46 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 7 ; args=(7,)
[ 2016-12-07 13:35:46 ] util.py[line:79] execute DEBUG (0.000) DELETE FROM `user_per` WHERE `id` IN (7); args=(7,)
[ 2016-12-07 13:35:47 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:35:47' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:35:47')
[ 2016-12-07 13:35:47 ] util.py[line:79] execute DEBUG (0.001) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 13:35:56 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:35:56' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:35:56')
[ 2016-12-07 13:35:56 ] util.py[line:79] execute DEBUG (0.000) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 13:36:05 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:36:05' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:36:05')
[ 2016-12-07 13:36:05 ] util.py[line:79] execute DEBUG (0.000) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 13:38:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:38:32' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:38:32')
[ 2016-12-07 13:38:32 ] util.py[line:79] execute DEBUG (0.001) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 13:38:34 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 13:38:34' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 13:38:34')
[ 2016-12-07 13:38:34 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-07 13:38:34' ; args=(u'2016-12-07 13:38:34',)
[ 2016-12-07 13:38:34 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-07 14:18:07 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 14:18:07' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 14:18:07')
[ 2016-12-07 14:18:07 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-07 14:18:07 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-07 14:18:54 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 14:18:54' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 14:18:54')
[ 2016-12-07 14:18:54 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-07 14:18:54 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10 OFFSET 10; args=()
[ 2016-12-07 14:20:04 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 14:20:04' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 14:20:04')
[ 2016-12-07 14:20:06 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 14:20:06' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 14:20:06')
[ 2016-12-07 14:20:06 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 14:20:06 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 14:20:08 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'bdm8t7ifwdfevxq1jttnuqul77mnf008'  AND `django_session`.`expire_date` > '2016-12-07 14:20:08' ); args=('bdm8t7ifwdfevxq1jttnuqul77mnf008', u'2016-12-07 14:20:08')
[ 2016-12-07 14:20:08 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-07 14:20:08 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-07 14:26:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-07 14:26:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-07 14:26:38 ] util.py[line:79] execute DEBUG (0.001) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 86, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 86, u'2016-11-25 20:26:56', 8)
[ 2016-12-07 14:26:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-07 14:26:38 ] util.py[line:79] execute DEBUG (0.000) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  LIMIT 1; args=(u'6wms6kjty9dvyvsg5ef1yimjdak6vyrv',)
[ 2016-12-07 14:26:38 ] util.py[line:79] execute DEBUG (0.001) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-07 15:26:38' WHERE `django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-07 15:26:38', u'6wms6kjty9dvyvsg5ef1yimjdak6vyrv')
[ 2016-12-07 14:26:38 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-07 15:26:38'); args=(u'6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-07 15:26:38')
[ 2016-12-07 14:26:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:26:38' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:26:38')
[ 2016-12-07 14:26:38 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-07 14:26:38' ; args=(u'2016-12-07 14:26:38',)
[ 2016-12-07 14:26:38 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-07 14:26:40 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:26:40' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:26:40')
[ 2016-12-07 14:26:40 ] util.py[line:79] execute DEBUG (0.000) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 14:27:26 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:27:26' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:27:26')
[ 2016-12-07 14:27:26 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-07 14:27:26' ; args=(u'2016-12-07 14:27:26',)
[ 2016-12-07 14:27:26 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-07 14:27:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:27:28' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:27:28')
[ 2016-12-07 14:27:28 ] util.py[line:79] execute DEBUG (0.000) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 14:27:29 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:27:29' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:27:29')
[ 2016-12-07 14:27:29 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 14:27:29 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 14:27:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:27:37' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:27:37')
[ 2016-12-07 14:29:07 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:29:07' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:29:07')
[ 2016-12-07 14:30:35 ] urls.py[line:4] <module> WARNING E:\python\git-autodeploy\user\views.py:600: SyntaxWarning: name 'message' is used prior to global declaration
  global message

[ 2016-12-07 14:30:35 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:30:35' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:30:35')
[ 2016-12-07 14:30:36 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:30:36' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:30:36')
[ 2016-12-07 14:30:36 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 14:30:36 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 14:31:04 ] urls.py[line:4] <module> WARNING E:\python\git-autodeploy\user\views.py:600: SyntaxWarning: name 'message' is used prior to global declaration
  global message

[ 2016-12-07 14:31:04 ] urls.py[line:4] <module> WARNING E:\python\git-autodeploy\user\views.py:612: SyntaxWarning: name 'message' is assigned to before global declaration
  global message

[ 2016-12-07 14:31:04 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:31:04' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:31:04')
[ 2016-12-07 14:31:07 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:31:07' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:31:07')
[ 2016-12-07 14:31:07 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 14:31:07 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 14:33:41 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:33:41' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:33:41')
[ 2016-12-07 14:33:53 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:33:53' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:33:53')
[ 2016-12-07 14:33:53 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `per_code` (`Per_code`, `Per_name`) VALUES ('001', '项目构建'); args=[u'001', u'\u9879\u76ee\u6784\u5efa']
[ 2016-12-07 14:34:03 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:34:03' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:34:03')
[ 2016-12-07 14:34:03 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `per_code` (`Per_code`, `Per_name`) VALUES ('002', '项目部署'); args=[u'002', u'\u9879\u76ee\u90e8\u7f72']
[ 2016-12-07 14:34:14 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:34:14' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:34:14')
[ 2016-12-07 14:34:14 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-07 14:34:14 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-07 14:34:22 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:34:22' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:34:22')
[ 2016-12-07 14:34:22 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` WHERE `per_code`.`id` = 36 ; args=(36,)
[ 2016-12-07 14:34:31 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:34:31' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:34:31')
[ 2016-12-07 14:34:31 ] util.py[line:79] execute DEBUG (0.000) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 14:34:33 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:34:33' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:34:33')
[ 2016-12-07 14:34:33 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 14:34:33 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 14:35:08 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:35:08' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:35:08')
[ 2016-12-07 14:35:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:35:11' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:35:11')
[ 2016-12-07 14:35:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 14:35:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 14:35:17 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:35:17' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:35:17')
[ 2016-12-07 14:35:17 ] util.py[line:79] execute DEBUG (0.001) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 14:35:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:35:18' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:35:18')
[ 2016-12-07 14:35:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 14:35:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 14:35:21 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:35:21' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:35:21')
[ 2016-12-07 14:35:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:35:23' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:35:23')
[ 2016-12-07 14:35:23 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 14:35:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 14:35:34 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:35:34' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:35:34')
[ 2016-12-07 14:35:56 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:35:56' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:35:56')
[ 2016-12-07 14:35:56 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 14:35:56 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 14:36:07 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:36:07' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:36:07')
[ 2016-12-07 14:36:07 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 14:36:07 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 14:36:12 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:36:12' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:36:12')
[ 2016-12-07 14:36:12 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', `expire_date` = '2016-12-07 15:36:12' WHERE `django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv' ; args=(u'MWM1ZjlmZmE1ZTkyYmQ2N2QzZGQyNTE3YmU1YzNiZjRlZTEyMjQwODp7Il9zZXNzaW9uX2V4cGlyeSI6MzYwMH0=', u'2016-12-07 15:36:12', '6wms6kjty9dvyvsg5ef1yimjdak6vyrv')
[ 2016-12-07 14:36:12 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:36:12' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:36:12')
[ 2016-12-07 14:36:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-07 14:36:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-07 14:36:18 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 87, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 87, u'2016-11-25 20:26:56', 8)
[ 2016-12-07 14:36:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-07 14:36:18 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:36:18' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:36:18')
[ 2016-12-07 14:36:18 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-07 15:36:18' WHERE `django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-07 15:36:18', '6wms6kjty9dvyvsg5ef1yimjdak6vyrv')
[ 2016-12-07 14:36:18 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:36:18' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:36:18')
[ 2016-12-07 14:36:18 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-07 14:36:18' ; args=(u'2016-12-07 14:36:18',)
[ 2016-12-07 14:36:18 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-07 14:36:21 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:36:21' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:36:21')
[ 2016-12-07 14:36:21 ] util.py[line:79] execute DEBUG (0.000) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 14:36:22 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:36:22' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:36:22')
[ 2016-12-07 14:36:22 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 14:36:22 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 14:36:36 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:36:36' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:36:36')
[ 2016-12-07 14:36:36 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:36:36' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:36:36')
[ 2016-12-07 14:36:36 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-07 14:36:36' ; args=(u'2016-12-07 14:36:36',)
[ 2016-12-07 14:36:36 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-07 14:36:40 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:36:40' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:36:40')
[ 2016-12-07 14:36:41 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:36:41' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:36:41')
[ 2016-12-07 14:36:50 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:36:50' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:36:50')
[ 2016-12-07 14:36:51 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:36:51' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:36:51')
[ 2016-12-07 14:36:51 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:36:51' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:36:51')
[ 2016-12-07 14:36:51 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-07 14:36:51' ; args=(u'2016-12-07 14:36:51',)
[ 2016-12-07 14:36:51 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-07 14:36:53 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:36:53' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:36:53')
[ 2016-12-07 14:36:53 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:36:53' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:36:53')
[ 2016-12-07 14:36:53 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-07 14:36:53' ; args=(u'2016-12-07 14:36:53',)
[ 2016-12-07 14:36:53 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-07 14:36:54 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:36:54' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:36:54')
[ 2016-12-07 14:36:54 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:36:54' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:36:54')
[ 2016-12-07 14:36:54 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-07 14:36:54' ; args=(u'2016-12-07 14:36:54',)
[ 2016-12-07 14:36:54 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-07 14:36:54 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:36:54' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:36:54')
[ 2016-12-07 14:36:54 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:36:54' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:36:54')
[ 2016-12-07 14:36:54 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-07 14:36:54' ; args=(u'2016-12-07 14:36:54',)
[ 2016-12-07 14:36:54 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-07 14:40:53 ] urls.py[line:4] <module> WARNING E:\python\git-autodeploy\user\views.py:602: SyntaxWarning: name 'message' is used prior to global declaration
  global message

[ 2016-12-07 14:40:53 ] urls.py[line:4] <module> WARNING E:\python\git-autodeploy\user\views.py:614: SyntaxWarning: name 'message' is assigned to before global declaration
  global message

[ 2016-12-07 14:40:53 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:40:53' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:40:53')
[ 2016-12-07 14:48:09 ] urls.py[line:4] <module> WARNING E:\python\git-autodeploy\user\views.py:614: SyntaxWarning: name 'message' is used prior to global declaration
  global message

[ 2016-12-07 14:48:09 ] urls.py[line:4] <module> WARNING E:\python\git-autodeploy\user\views.py:626: SyntaxWarning: name 'message' is assigned to before global declaration
  global message

[ 2016-12-07 14:48:09 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:48:09' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:48:09')
[ 2016-12-07 14:48:09 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:48:09' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:48:09')
[ 2016-12-07 14:48:09 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-07 14:48:09' ; args=(u'2016-12-07 14:48:09',)
[ 2016-12-07 14:48:09 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-07 14:48:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:48:11' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:48:11')
[ 2016-12-07 14:50:11 ] urls.py[line:4] <module> WARNING E:\python\git-autodeploy\user\views.py:618: SyntaxWarning: name 'message' is used prior to global declaration
  global message

[ 2016-12-07 14:50:11 ] urls.py[line:4] <module> WARNING E:\python\git-autodeploy\user\views.py:630: SyntaxWarning: name 'message' is assigned to before global declaration
  global message

[ 2016-12-07 14:50:11 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:50:11' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:50:11')
[ 2016-12-07 14:50:37 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:50:37' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:50:37')
[ 2016-12-07 14:50:39 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:50:39' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:50:39')
[ 2016-12-07 14:50:39 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-07 14:50:39 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-07 14:50:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:50:43' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:50:43')
[ 2016-12-07 14:50:46 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:50:46' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:50:46')
[ 2016-12-07 14:50:46 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 14:50:46 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 14:50:48 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:50:48' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:50:48')
[ 2016-12-07 14:50:51 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:50:51' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:50:51')
[ 2016-12-07 14:50:51 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 14:50:51 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 14:50:53 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:50:53' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:50:53')
[ 2016-12-07 14:50:57 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:50:57' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:50:57')
[ 2016-12-07 14:51:02 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:51:02' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:51:02')
[ 2016-12-07 14:51:02 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-07 14:51:02 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` LIMIT 10; args=()
[ 2016-12-07 14:51:04 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:51:04' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:51:04')
[ 2016-12-07 14:51:14 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:51:14' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:51:14')
[ 2016-12-07 14:51:17 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:51:17' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:51:17')
[ 2016-12-07 14:51:17 ] util.py[line:79] execute DEBUG (0.003) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 14:51:17 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 14:51:24 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:51:24' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:51:24')
[ 2016-12-07 14:51:24 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-07 14:51:24 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-07 14:51:26 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:51:26' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:51:26')
[ 2016-12-07 14:51:31 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:51:31' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:51:31')
[ 2016-12-07 14:51:43 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:51:43' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:51:43')
[ 2016-12-07 14:51:43 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-07 14:51:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-07 14:51:50 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:51:50' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:51:50')
[ 2016-12-07 14:51:50 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-07 14:51:50 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-07 14:51:53 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:51:53' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:51:53')
[ 2016-12-07 14:51:56 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:51:56' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:51:56')
[ 2016-12-07 14:51:56 ] util.py[line:79] execute DEBUG (0.001) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 14:52:05 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:52:05' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:52:05')
[ 2016-12-07 14:52:05 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 14:52:05 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 14:52:09 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:52:09' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:52:09')
[ 2016-12-07 14:52:09 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 14:52:09 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 14:52:20 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:52:20' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:52:20')
[ 2016-12-07 14:52:25 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:52:25' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:52:25')
[ 2016-12-07 14:52:25 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 14:52:25 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 14:54:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:54:38' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:54:38')
[ 2016-12-07 14:54:38 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 14:54:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 14:54:43 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:54:43' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:54:43')
[ 2016-12-07 14:58:31 ] urls.py[line:4] <module> WARNING E:/python/git-autodeploy\user\views.py:618: SyntaxWarning: name 'message' is used prior to global declaration
  global message

[ 2016-12-07 14:58:31 ] urls.py[line:4] <module> WARNING E:/python/git-autodeploy\user\views.py:630: SyntaxWarning: name 'message' is assigned to before global declaration
  global message

[ 2016-12-07 14:58:31 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:58:31' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:58:31')
[ 2016-12-07 14:58:31 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 14:58:31 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 14:58:36 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 14:58:36' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 14:58:36')
[ 2016-12-07 15:01:32 ] urls.py[line:4] <module> WARNING E:/python/git-autodeploy\user\views.py:618: SyntaxWarning: name 'message' is used prior to global declaration
  global message

[ 2016-12-07 15:01:32 ] urls.py[line:4] <module> WARNING E:/python/git-autodeploy\user\views.py:630: SyntaxWarning: name 'message' is assigned to before global declaration
  global message

[ 2016-12-07 15:01:32 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:01:32' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:01:32')
[ 2016-12-07 15:01:32 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 15:01:32 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 15:05:14 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:05:14' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:05:14')
[ 2016-12-07 15:05:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:05:19' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:05:19')
[ 2016-12-07 15:05:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 15:05:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 15:05:34 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:05:34' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:05:34')
[ 2016-12-07 15:05:41 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:05:41' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:05:41')
[ 2016-12-07 15:05:41 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `per_code` (`Per_code`, `Per_name`) VALUES ('003', '上传文件'); args=[u'003', u'\u4e0a\u4f20\u6587\u4ef6']
[ 2016-12-07 15:06:52 ] urls.py[line:4] <module> WARNING E:/python/git-autodeploy\user\views.py:618: SyntaxWarning: name 'message' is used prior to global declaration
  global message

[ 2016-12-07 15:06:52 ] urls.py[line:4] <module> WARNING E:/python/git-autodeploy\user\views.py:630: SyntaxWarning: name 'message' is assigned to before global declaration
  global message

[ 2016-12-07 15:06:52 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:06:52' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:06:52')
[ 2016-12-07 15:06:52 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `per_code`; args=()
[ 2016-12-07 15:06:52 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`id`, `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 10; args=()
[ 2016-12-07 15:06:58 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:06:58' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:06:58')
[ 2016-12-07 15:06:58 ] util.py[line:79] execute DEBUG (0.001) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 15:07:00 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:07:00' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:07:00')
[ 2016-12-07 15:07:00 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 15:07:00 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 15:07:04 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:07:04' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:07:04')
[ 2016-12-07 15:07:04 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 15:07:04 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 15:07:11 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:07:11' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:07:11')
[ 2016-12-07 15:07:28 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_per` (`Per_user`, `Per_code`, `comment`) VALUES ('a123456', '001', ''); args=[u'a123456', u'001', u'']
[ 2016-12-07 15:07:28 ] util.py[line:79] execute DEBUG (0.006) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 15:07:28 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 15:07:50 ] urls.py[line:4] <module> WARNING E:\python\git-autodeploy\user\views.py:618: SyntaxWarning: name 'message' is used prior to global declaration
  global message

[ 2016-12-07 15:07:50 ] urls.py[line:4] <module> WARNING E:\python\git-autodeploy\user\views.py:630: SyntaxWarning: name 'message' is assigned to before global declaration
  global message

[ 2016-12-07 15:07:51 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:07:51' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:07:51')
[ 2016-12-07 15:07:51 ] util.py[line:79] execute DEBUG (0.000) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 15:07:57 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:07:57' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:07:57')
[ 2016-12-07 15:07:57 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 15:07:57 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 15:08:10 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:08:10' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:08:10')
[ 2016-12-07 15:08:10 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_per` (`Per_user`, `Per_code`, `comment`) VALUES ('chenyh', '002', '部署'); args=[u'chenyh', u'002', u'\u90e8\u7f72']
[ 2016-12-07 15:08:10 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 15:08:10 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 15:09:31 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:09:31' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:09:31')
[ 2016-12-07 15:09:31 ] util.py[line:79] execute DEBUG (0.003) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 15:09:31 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 15:09:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:09:38' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:09:38')
[ 2016-12-07 15:09:46 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_per` (`Per_user`, `Per_code`, `comment`) VALUES ('a123456', '002', 'aa'); args=[u'a123456', u'002', u'aa']
[ 2016-12-07 15:10:05 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`username` FROM `admin` LIMIT 21; args=()
[ 2016-12-07 15:10:05 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`username` FROM `admin` LIMIT 21; args=()
[ 2016-12-07 15:10:06 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 21; args=()
[ 2016-12-07 15:10:06 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`username` FROM `admin` LIMIT 21; args=()
[ 2016-12-07 15:10:06 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code` LIMIT 21; args=()
[ 2016-12-07 15:10:06 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`username` FROM `admin` LIMIT 21; args=()
[ 2016-12-07 15:10:17 ] util.py[line:79] execute DEBUG (0.003) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 15:10:17 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 15:13:46 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:13:46' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:13:46')
[ 2016-12-07 15:13:46 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 15:13:46 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 15:13:52 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:13:52' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:13:52')
[ 2016-12-07 15:13:52 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `user_per` (`Per_user`, `Per_code`, `comment`) VALUES ('a123456', '002', ''); args=[u'a123456', u'002', u'']
[ 2016-12-07 15:13:52 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 15:13:52 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 15:14:15 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:14:15' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:14:15')
[ 2016-12-07 15:14:15 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_per` (`Per_user`, `Per_code`, `comment`) VALUES ('a123456', '001', ''); args=[u'a123456', u'001', u'']
[ 2016-12-07 15:14:15 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 15:14:15 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 15:15:23 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:15:23' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:15:23')
[ 2016-12-07 15:15:23 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_per` (`Per_user`, `Per_code`, `comment`) VALUES ('a123456', '001', ''); args=[u'a123456', u'001', u'']
[ 2016-12-07 15:15:23 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 15:15:23 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 15:15:27 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:15:27' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:15:27')
[ 2016-12-07 15:15:27 ] util.py[line:79] execute DEBUG (0.001) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 15:15:45 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:15:45' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:15:45')
[ 2016-12-07 15:15:45 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 12 ; args=(12,)
[ 2016-12-07 15:15:45 ] util.py[line:79] execute DEBUG (0.000) DELETE FROM `user_per` WHERE `id` IN (12); args=(12,)
[ 2016-12-07 15:15:45 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 13 ; args=(13,)
[ 2016-12-07 15:15:45 ] util.py[line:79] execute DEBUG (0.001) DELETE FROM `user_per` WHERE `id` IN (13); args=(13,)
[ 2016-12-07 15:15:45 ] util.py[line:79] execute DEBUG (0.000) SELECT `user_per`.`id`, `user_per`.`Per_user`, `user_per`.`Per_code`, `user_per`.`comment` FROM `user_per` WHERE `user_per`.`id` = 14 ; args=(14,)
[ 2016-12-07 15:15:45 ] util.py[line:79] execute DEBUG (0.000) DELETE FROM `user_per` WHERE `id` IN (14); args=(14,)
[ 2016-12-07 15:15:46 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:15:46' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:15:46')
[ 2016-12-07 15:15:46 ] util.py[line:79] execute DEBUG (0.000) select a.id , a.Per_user,b.Per_name ,a.comment from user_per a left join per_code b on a.Per_code = b.Per_code; args=None
[ 2016-12-07 15:18:12 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:18:12' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:18:12')
[ 2016-12-07 15:18:12 ] util.py[line:79] execute DEBUG (0.002) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 15:18:12 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 15:18:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:18:19' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:18:19')
[ 2016-12-07 15:18:19 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_per` (`Per_user`, `Per_code`, `comment`) VALUES ('chenyh', '002', ''); args=[u'chenyh', u'002', u'']
[ 2016-12-07 15:18:19 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 15:18:19 ] util.py[line:79] execute DEBUG (0.000) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 15:18:31 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = '6wms6kjty9dvyvsg5ef1yimjdak6vyrv'  AND `django_session`.`expire_date` > '2016-12-07 15:18:31' ); args=('6wms6kjty9dvyvsg5ef1yimjdak6vyrv', u'2016-12-07 15:18:31')
[ 2016-12-07 15:18:31 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `user_per` (`Per_user`, `Per_code`, `comment`) VALUES ('chenyh', '001', ''); args=[u'chenyh', u'001', u'']
[ 2016-12-07 15:18:31 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`username` FROM `admin`; args=()
[ 2016-12-07 15:18:31 ] util.py[line:79] execute DEBUG (0.001) SELECT `per_code`.`Per_code`, `per_code`.`Per_name` FROM `per_code`; args=()
[ 2016-12-07 15:51:09 ] util.py[line:79] execute DEBUG (0.000) SHOW TABLES; args=None
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.001) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.000) SHOW TABLES; args=None
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.024) CREATE TABLE `project` (
    `id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `Pro_name` varchar(20) NOT NULL,
    `Pro_desc` varchar(200) NOT NULL,
    `svn_ip` varchar(255) NOT NULL,
    `buildtype` varchar(30) NOT NULL
)
;; args=None
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.004) CREATE TABLE `project_build` (
    `id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `Pro_id_id` integer NOT NULL,
    `builddate` datetime NOT NULL,
    `success` bool NOT NULL,
    `file` varchar(30) NOT NULL
)
;; args=None
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.012) ALTER TABLE `project_build` ADD CONSTRAINT `Pro_id_id_refs_id_e4e3a831` FOREIGN KEY (`Pro_id_id`) REFERENCES `project` (`id`);; args=None
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.004) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'logentry'  AND `django_content_type`.`app_label` = 'admin' ); args=('logentry', u'admin')
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.003) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (1) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(1,)
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'admin'  ORDER BY `django_content_type`.`name` ASC; args=(u'admin',)
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'permission'  AND `django_content_type`.`app_label` = 'auth' ); args=('permission', u'auth')
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'group'  AND `django_content_type`.`app_label` = 'auth' ); args=('group', u'auth')
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user'  AND `django_content_type`.`app_label` = 'auth' ); args=('user', u'auth')
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (2, 3, 4) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(2, 3, 4)
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'auth'  ORDER BY `django_content_type`.`name` ASC; args=(u'auth',)
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'contenttype'  AND `django_content_type`.`app_label` = 'contenttypes' ); args=('contenttype', u'contenttypes')
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (5) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(5,)
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'contenttypes'  ORDER BY `django_content_type`.`name` ASC; args=(u'contenttypes',)
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'session'  AND `django_content_type`.`app_label` = 'sessions' ); args=('session', u'sessions')
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (6) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(6,)
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'sessions'  ORDER BY `django_content_type`.`name` ASC; args=(u'sessions',)
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'migrationhistory'  AND `django_content_type`.`app_label` = 'south' ); args=('migrationhistory', u'south')
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (9) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(9,)
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'south'  ORDER BY `django_content_type`.`name` ASC; args=(u'south',)
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'project'  AND `django_content_type`.`app_label` = 'project' ); args=('project', u'project')
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `django_content_type` (`name`, `app_label`, `model`) VALUES ('项目表', 'project', 'project'); args=[u'\u9879\u76ee\u8868', u'project', 'project']
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'project_build'  AND `django_content_type`.`app_label` = 'project' ); args=('project_build', u'project')
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `django_content_type` (`name`, `app_label`, `model`) VALUES ('项目构建表', 'project', 'project_build'); args=[u'\u9879\u76ee\u6784\u5efa\u8868', u'project', 'project_build']
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (16, 15) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(16, 15)
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `auth_permission` (`name`, `content_type_id`, `codename`) VALUES ('Can add 项目表', 15, 'add_project'), ('Can change 项目表', 15, 'change_project'), ('Can delete 项目表', 15, 'delete_project'), ('Can add 项目构建表', 16, 'add_project_build'), ('Can change 项目构建表', 16, 'change_project_build'), ('Can delete 项目构建表', 16, 'delete_project_build'); args=(u'Can add \u9879\u76ee\u8868', 15, u'add_project', u'Can change \u9879\u76ee\u8868', 15, u'change_project', u'Can delete \u9879\u76ee\u8868', 15, u'delete_project', u'Can add \u9879\u76ee\u6784\u5efa\u8868', 16, u'add_project_build', u'Can change \u9879\u76ee\u6784\u5efa\u8868', 16, u'change_project_build', u'Can delete \u9879\u76ee\u6784\u5efa\u8868', 16, u'delete_project_build')
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'project'  ORDER BY `django_content_type`.`name` ASC; args=(u'project',)
[ 2016-12-07 15:52:10 ] util.py[line:79] execute DEBUG (0.012) CREATE INDEX `project_build_af7dff25` ON `project_build` (`Pro_id_id`);; args=None
[ 2016-12-07 15:52:11 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-07 15:52:11 ] util.py[line:79] execute DEBUG (0.001) SET foreign_key_checks=1; args=None
[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:52: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  `profile` option.""",

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:118: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:128: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The IPython profile to use."""

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:142: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Whether to overwrite existing config files when copying""")

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:162: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Whether to create profile dir if it doesn't exist""")

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:173: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\application.py:178: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  usual traceback""")

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magic.py:307: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  "Automatically call line magics without requiring explicit % prefix")

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:132: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  multi_line_specials = CBool(True, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:362: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:367: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:392: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:395: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:414: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(100, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:415: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(False, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:427: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(250, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:439: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(300, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:453: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(600, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:471: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(700, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:495: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(900, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:510: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  priority = Integer(1000, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:513: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="RegExp to identify potential function names.")

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prefilter.py:515: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="RegExp to exclude strings with this start from autocalling.")

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\alias.py:195: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_aliases = List(default_aliases(), config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\alias.py:196: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  user_aliases = List(default_value=[], config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:61: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  plain_text_only = Bool(False, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:313: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:319: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  singleton_printers = Dict(config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:323: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  type_printers = Dict(config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:327: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  deferred_printers = Dict(config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:594: DeprecationWarning: metadata {'config': False} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  enabled = Bool(True, config=False)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:600: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:607: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  pprint = Bool(True, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:610: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  verbose = Bool(False, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:613: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  max_width = Integer(79, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:616: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  newline = Unicode('\n', config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:621: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  float_precision = CUnicode('', config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:143: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:152: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:475: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Should the history database include output? (default: no)"

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\history.py:478: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Write to database every x commands (higher values save disk access & power).\n"

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:259: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  color_scheme = Unicode('Linux', config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:275: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Input prompt.  '\\#' will be transformed to the prompt number")

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:277: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Continuation prompt.")

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:279: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Output prompt. '\\#' will be transformed to the prompt number")

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:284: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:179: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:190: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:197: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:202: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:206: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The part of the banner to be printed before the profile"""

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:209: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""The part of the banner to be printed after the profile"""

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:220: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:227: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:231: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Set the color scheme (NoColor, Linux, or LightBG)."

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:242: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  debug = CBool(False, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:256: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:259: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Don't call post-execute functions that have failed in the past."

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:273: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  ipython_dir= Unicode('', config=True) # Set to get_ipython_dir() in __init__

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:289: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:294: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:300: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:303: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:307: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:310: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Save multi-line entries as one entry in readline history"

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:314: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  will be displayed as regular output instead."""

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:320: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.in_template")

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:322: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.in2_template")

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:324: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.out_template")

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:326: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Deprecated, will be removed in IPython 5.0, use PromptManager.justify")

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:349: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Show rewritten input, e.g. for autocall."

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:352: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  quiet = CBool(False, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:354: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  history_length = Integer(10000, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:360: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:365: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  readline_use = CBool(True, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:366: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  readline_remove_delims = Unicode('-/~', config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:383: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  ], config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:396: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  run interactively (displaying output from expressions).""")

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:400: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_in = SeparateUnicode('\n', config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:401: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_out = SeparateUnicode('', config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:402: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  separate_out2 = SeparateUnicode('', config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:403: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  wildcards_case_sensitive = CBool(True, config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:405: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_value='Context', config=True)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:290: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="auto editing of files with syntax errors.")

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:295: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  you can force a direct exit without any confirmation.""",

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:305: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Set the editor used by IPython (default to $EDITOR/vi/notepad)."

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:308: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="The shell program to be used for paging.")

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:320: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default.""",

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\interactiveshell.py:323: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Enable auto setting the terminal title."

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:276: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:556: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:568: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\completer.py:578: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:89: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """,

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:116: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:139: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="A list of dotted module names of IPython extensions to load."

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:142: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="dotted module name of an IPython extension to load."

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:148: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Reraise exceptions encountered loading IPython extensions?",

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:152: DeprecationWarning: metadata {'config': False} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  default_extensions = List(Unicode(), [u'storemagic'], config=False)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:156: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  be hidden from tools like %who?"""

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:160: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""List of files to run at IPython startup."""

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:164: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  variable at IPython startup."""

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:167: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""A file to be run""")

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:170: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""lines of code to run at IPython startup."""

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:173: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Execute the given command string."

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:176: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Run the module as a script."

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:179: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Enable GUI event loop integration with any of {0}.".format(gui_keys)

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:184: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  the default matplotlib backend."""

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:190: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\core\shellapp.py:197: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\extensions\storemagic.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:245: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="""Start IPython quickly by skipping the loading of config files."""

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:252: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  help="Whether to display a banner upon starting IPython."

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:260: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  file or command."""

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:186: DeprecationWarning: TerminalIPythonApp._classes_default is deprecated: use @default decorator instead.
  def _classes_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:99: DeprecationWarning: BaseIPythonApplication._config_file_name_default is deprecated: use @default decorator instead.
  def _config_file_name_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:111: DeprecationWarning: BaseIPythonApplication._config_file_paths_default is deprecated: use @default decorator instead.
  def _config_file_paths_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:165: DeprecationWarning: BaseIPythonApplication._config_files_default is deprecated: use @default decorator instead.
  def _config_files_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:144: DeprecationWarning: BaseIPythonApplication._ipython_dir_default is deprecated: use @default decorator instead.
  def _ipython_dir_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:151: DeprecationWarning: BaseIPythonApplication._profile_dir_default is deprecated: use @default decorator instead.
  def _profile_dir_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\terminal\ipapp.py:186: DeprecationWarning: TerminalIPythonApp._classes_default is deprecated: use @default decorator instead.
  def _classes_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:151: DeprecationWarning: BaseIPythonApplication._profile_dir_default is deprecated: use @default decorator instead.
  def _profile_dir_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:144: DeprecationWarning: BaseIPythonApplication._ipython_dir_default is deprecated: use @default decorator instead.
  def _ipython_dir_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:57: DeprecationWarning: ProfileDir._location_changed is deprecated: use @observe and @unobserve instead.
  def _location_changed(self, name, old, new):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:126: DeprecationWarning: ProfileDir._security_dir_changed is deprecated: use @observe and @unobserve instead.
  def _security_dir_changed(self, name, old, new):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:71: DeprecationWarning: ProfileDir._log_dir_changed is deprecated: use @observe and @unobserve instead.
  def _log_dir_changed(self, name, old, new):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:111: DeprecationWarning: ProfileDir._startup_dir_changed is deprecated: use @observe and @unobserve instead.
  def _startup_dir_changed(self, name, old, new):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:132: DeprecationWarning: ProfileDir._pid_dir_changed is deprecated: use @observe and @unobserve instead.
  def _pid_dir_changed(self, name, old, new):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\profiledir.py:138: DeprecationWarning: ProfileDir._static_dir_changed is deprecated: use @observe and @unobserve instead.
  def _static_dir_changed(self, name, old, new):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:111: DeprecationWarning: BaseIPythonApplication._config_file_paths_default is deprecated: use @default decorator instead.
  def _config_file_paths_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:165: DeprecationWarning: BaseIPythonApplication._config_files_default is deprecated: use @default decorator instead.
  def _config_files_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\application.py:99: DeprecationWarning: BaseIPythonApplication._config_file_name_default is deprecated: use @default decorator instead.
  def _config_file_name_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:268: DeprecationWarning: InteractiveShell._exiter_default is deprecated: use @default decorator instead.
  def _exiter_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:525: DeprecationWarning: TerminalInteractiveShell._ipython_dir_changed is deprecated: use @observe and @unobserve instead.
  def _ipython_dir_changed(self, name, new):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:459: DeprecationWarning: HistoryManager._dir_hist_default is deprecated: use @default decorator instead.
  def _dir_hist_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:165: DeprecationWarning: HistoryManager._db_changed is deprecated: use @observe and @unobserve instead.
  def _db_changed(self, name, old, new):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\history.py:459: DeprecationWarning: HistoryManager._dir_hist_default is deprecated: use @default decorator instead.
  def _dir_hist_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\interactiveshell.py:268: DeprecationWarning: InteractiveShell._exiter_default is deprecated: use @default decorator instead.
  def _exiter_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:296: DeprecationWarning: PromptManager._invisible_chars_default is deprecated: use @default decorator instead.
  def _invisible_chars_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:272: DeprecationWarning: PromptManager._lazy_evaluate_fields_default is deprecated: use @default decorator instead.
  def _lazy_evaluate_fields_default(self): return lazily_evaluate.copy()

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:272: DeprecationWarning: PromptManager._lazy_evaluate_fields_default is deprecated: use @default decorator instead.
  def _lazy_evaluate_fields_default(self): return lazily_evaluate.copy()

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:296: DeprecationWarning: PromptManager._invisible_chars_default is deprecated: use @default decorator instead.
  def _invisible_chars_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:1180] on_trait_change WARNING E:\Python27\lib\site-packages\IPython\core\prompts.py:313: DeprecationWarning: on_trait_change is deprecated: use observe instead
  'in2_template', 'out_template'])

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:81: DeprecationWarning: DisplayFormatter._active_types_default is deprecated: use @default decorator instead.
  def _active_types_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:98: DeprecationWarning: DisplayFormatter._formatters_default is deprecated: use @default decorator instead.
  def _formatters_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:92: DeprecationWarning: DisplayFormatter._ipython_display_formatter_default is deprecated: use @default decorator instead.
  def _ipython_display_formatter_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:84: DeprecationWarning: DisplayFormatter._active_types_changed is deprecated: use @observe and @unobserve instead.
  def _active_types_changed(self, name, old, new):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:98: DeprecationWarning: DisplayFormatter._formatters_default is deprecated: use @default decorator instead.
  def _formatters_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:677: DeprecationWarning: PlainTextFormatter._deferred_printers_default is deprecated: use @default decorator instead.
  def _deferred_printers_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:669: DeprecationWarning: PlainTextFormatter._singleton_printers_default is deprecated: use @default decorator instead.
  def _singleton_printers_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:672: DeprecationWarning: PlainTextFormatter._type_printers_default is deprecated: use @default decorator instead.
  def _type_printers_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:91: DeprecationWarning: ScriptMagics._script_magics_default is deprecated: use @default decorator instead.
  def _script_magics_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\magics\script.py:91: DeprecationWarning: ScriptMagics._script_magics_default is deprecated: use @default decorator instead.
  def _script_magics_default(self):

[ 2016-12-07 15:53:00 ] traitlets.py[line:1180] on_trait_change WARNING E:\Python27\lib\site-packages\IPython\core\extensions.py:58: DeprecationWarning: on_trait_change is deprecated: use observe instead
  self._on_ipython_dir_changed, 'ipython_dir'

[ 2016-12-07 15:53:00 ] traitlets.py[line:421] __init__ WARNING E:\Python27\lib\site-packages\IPython\extensions\storemagic.py:80: DeprecationWarning: metadata {'config': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')
  """

[ 2016-12-07 15:56:29 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `project` (`Pro_name`, `Pro_desc`, `svn_ip`, `buildtype`) VALUES ('prg', 'prg项目', 'svn://111.111.11.11/svn', 'war'); args=['prg', 'prg\xe9\xa1\xb9\xe7\x9b\xae', 'svn://111.111.11.11/svn', 'war']
[ 2016-12-07 16:21:56 ] util.py[line:79] execute DEBUG (0.001) SELECT `project`.`id`, `project`.`Pro_name`, `project`.`Pro_desc`, `project`.`svn_ip`, `project`.`buildtype` FROM `project` WHERE `project`.`id` = 1 ; args=(1,)
[ 2016-12-07 16:22:02 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `project_build` (`Pro_id_id`, `builddate`, `success`, `file`) VALUES (1, '2016-10-10 10:10:10', 1, '/etc/aa.war'); args=[1, u'2016-10-10 10:10:10', True, '/etc/aa.war']
[ 2016-12-07 16:22:02 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:92: DeprecationWarning: DisplayFormatter._ipython_display_formatter_default is deprecated: use @default decorator instead.
  def _ipython_display_formatter_default(self):

[ 2016-12-07 16:22:02 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:669: DeprecationWarning: PlainTextFormatter._singleton_printers_default is deprecated: use @default decorator instead.
  def _singleton_printers_default(self):

[ 2016-12-07 16:22:03 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:672: DeprecationWarning: PlainTextFormatter._type_printers_default is deprecated: use @default decorator instead.
  def _type_printers_default(self):

[ 2016-12-07 16:22:03 ] traitlets.py[line:114] _deprecated_method WARNING E:\Python27\lib\site-packages\IPython\core\formatters.py:677: DeprecationWarning: PlainTextFormatter._deferred_printers_default is deprecated: use @default decorator instead.
  def _deferred_printers_default(self):

[ 2016-12-07 16:28:54 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `project_build` (`Pro_id_id`, `builddate`, `success`, `file`) VALUES (1, '2016-10-10 10:10:11', 0, '/etc/aa.war'); args=[1, u'2016-10-10 10:10:11', False, '/etc/aa.war']
[ 2016-12-07 17:35:59 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-07 17:35:59 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-07 17:35:59 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-07 17:35:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-07 17:35:59 ] util.py[line:79] execute DEBUG (0.000) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 88, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 88, u'2016-11-25 20:26:56', 8)
[ 2016-12-07 17:35:59 ] util.py[line:79] execute DEBUG (0.001) UPDATE `admin` SET `username` = 'chenyh', `password` = '25d55ad283aa400af464c76d713c07ad', `email` = 'chenyanghong@enjoyfin.com', `vaild` = 1, `isadmin` = 1, `logincount` = 88, `lastlogin` = '2016-11-25 20:26:56' WHERE `admin`.`id` = 8 ; args=(u'chenyh', u'25d55ad283aa400af464c76d713c07ad', u'chenyanghong@enjoyfin.com', 1, 1, 88, u'2016-11-25 20:26:56', 8)
[ 2016-12-07 17:35:59 ] util.py[line:79] execute DEBUG (0.001) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-07 17:35:59 ] util.py[line:79] execute DEBUG (0.001) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = 'hyiknf8u5ryqydgkans8ypxwq2hatbed'  LIMIT 1; args=(u'hyiknf8u5ryqydgkans8ypxwq2hatbed',)
[ 2016-12-07 17:35:59 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-07 18:35:59' WHERE `django_session`.`session_key` = 'hyiknf8u5ryqydgkans8ypxwq2hatbed' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-07 18:35:59', u'hyiknf8u5ryqydgkans8ypxwq2hatbed')
[ 2016-12-07 17:35:59 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('hyiknf8u5ryqydgkans8ypxwq2hatbed', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-07 18:35:59'); args=(u'hyiknf8u5ryqydgkans8ypxwq2hatbed', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-07 18:35:59')
[ 2016-12-07 17:35:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `admin`.`id`, `admin`.`username`, `admin`.`password`, `admin`.`email`, `admin`.`vaild`, `admin`.`isadmin`, `admin`.`logincount`, `admin`.`lastlogin` FROM `admin` WHERE `admin`.`username` = 'chenyh' ; args=('chenyh',)
[ 2016-12-07 17:35:59 ] util.py[line:79] execute DEBUG (0.001) SELECT (1) AS `a` FROM `django_session` WHERE `django_session`.`session_key` = 'kudoa4xapsvuetbap0gclfh4fkdi659c'  LIMIT 1; args=(u'kudoa4xapsvuetbap0gclfh4fkdi659c',)
[ 2016-12-07 17:35:59 ] util.py[line:79] execute DEBUG (0.000) UPDATE `django_session` SET `session_data` = 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', `expire_date` = '2016-12-07 18:35:59' WHERE `django_session`.`session_key` = 'kudoa4xapsvuetbap0gclfh4fkdi659c' ; args=(u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-07 18:35:59', u'kudoa4xapsvuetbap0gclfh4fkdi659c')
[ 2016-12-07 17:35:59 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO `django_session` (`session_key`, `session_data`, `expire_date`) VALUES ('kudoa4xapsvuetbap0gclfh4fkdi659c', 'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', '2016-12-07 18:35:59'); args=(u'kudoa4xapsvuetbap0gclfh4fkdi659c', u'Y2VlYjZjYzVkNTAwNGU1OTk2MjAwYmI5NTkxNTkzOTc0MDkwZDM5NDp7InVzZXJuYW1lIjoiY2hlbnloIiwiaXNhZG1pbiI6MSwiX3Nlc3Npb25fZXhwaXJ5IjozNjAwfQ==', u'2016-12-07 18:35:59')
[ 2016-12-07 17:35:59 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'kudoa4xapsvuetbap0gclfh4fkdi659c'  AND `django_session`.`expire_date` > '2016-12-07 17:35:59' ); args=('kudoa4xapsvuetbap0gclfh4fkdi659c', u'2016-12-07 17:35:59')
[ 2016-12-07 17:35:59 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(*) FROM `django_session` WHERE `django_session`.`expire_date` >= '2016-12-07 17:35:59' ; args=(u'2016-12-07 17:35:59',)
[ 2016-12-07 17:35:59 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(*) FROM `admin`; args=()
[ 2016-12-07 17:36:31 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`session_key` = 'kudoa4xapsvuetbap0gclfh4fkdi659c'  AND `django_session`.`expire_date` > '2016-12-07 17:36:31' ); args=('kudoa4xapsvuetbap0gclfh4fkdi659c', u'2016-12-07 17:36:31')
[ 2016-12-07 17:38:29 ] util.py[line:79] execute DEBUG (0.008) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-07 17:38:29 ] util.py[line:79] execute DEBUG (0.001) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE (`south_migrationhistory`.`app_name` = 'project'  AND `south_migrationhistory`.`migration` = '0001_initial' ); args=('project', '0001_initial')
[ 2016-12-07 17:38:29 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO `south_migrationhistory` (`app_name`, `migration`, `applied`) VALUES ('project', '0001_initial', '2016-12-07 17:38:29'); args=['project', '0001_initial', u'2016-12-07 17:38:29']
[ 2016-12-07 17:39:00 ] util.py[line:79] execute DEBUG (0.001) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-07 17:39:01 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-07 17:39:01 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-07 17:39:01 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-07 17:39:01 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-07 17:39:01 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-07 17:39:25 ] util.py[line:79] execute DEBUG (0.001) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-07 17:39:25 ] util.py[line:79] execute DEBUG (0.001) SET foreign_key_checks=0; args=None
[ 2016-12-07 17:39:25 ] util.py[line:79] execute DEBUG (0.001) SET foreign_key_checks=1; args=None
[ 2016-12-07 17:40:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-07 17:40:38 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-07 17:40:38 ] util.py[line:79] execute DEBUG (0.001) SET foreign_key_checks=1; args=None
[ 2016-12-07 17:40:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-07 17:40:38 ] util.py[line:79] execute DEBUG (0.000) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-07 17:40:38 ] util.py[line:79] execute DEBUG (0.022) CREATE TABLE ROLLBACK_TEST (X INT); args=None
[ 2016-12-07 17:40:38 ] util.py[line:79] execute DEBUG (0.001) INSERT INTO ROLLBACK_TEST (X) VALUES (8); args=None
[ 2016-12-07 17:40:38 ] util.py[line:79] execute DEBUG (0.001) SELECT COUNT(X) FROM ROLLBACK_TEST; args=None
[ 2016-12-07 17:40:38 ] util.py[line:79] execute DEBUG (0.002) DROP TABLE ROLLBACK_TEST; args=None
[ 2016-12-07 17:40:38 ] generic.py[line:279] execute DEBUG execute "SET FOREIGN_KEY_CHECKS=0;" with params "[]"
[ 2016-12-07 17:40:38 ] util.py[line:79] execute DEBUG (0.001) SET FOREIGN_KEY_CHECKS=0;; args=[]
[ 2016-12-07 17:40:38 ] util.py[line:79] execute DEBUG (0.004) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=None
[ 2016-12-07 17:40:38 ] util.py[line:79] execute DEBUG (0.000) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=None
[ 2016-12-07 17:40:38 ] util.py[line:79] execute DEBUG (0.001) DROP TABLE DDL_TRANSACTION_TEST; args=None
[ 2016-12-07 17:40:38 ] generic.py[line:279] execute DEBUG execute "SET FOREIGN_KEY_CHECKS=0;" with params "[]"
[ 2016-12-07 17:40:38 ] util.py[line:79] execute DEBUG (0.000) SET FOREIGN_KEY_CHECKS=0;; args=[]
[ 2016-12-07 17:40:38 ] generic.py[line:279] execute DEBUG execute "CREATE TABLE `project` (`id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY, `Pro_name` varchar(20) NOT NULL, `Pro_desc` varchar(200) NOT NULL, `svn_ip` varchar(255) NOT NULL, `buildtype` varchar(30) NOT NULL, `username` varchar(50) NOT NULL)" with params "[]"
[ 2016-12-07 17:40:38 ] util.py[line:79] execute DEBUG (0.001) CREATE TABLE `project` (`id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY, `Pro_name` varchar(20) NOT NULL, `Pro_desc` varchar(200) NOT NULL, `svn_ip` varchar(255) NOT NULL, `buildtype` varchar(30) NOT NULL, `username` varchar(50) NOT NULL); args=[]
[ 2016-12-07 17:40:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'project'  AND `django_content_type`.`app_label` = 'project' ); args=('project', u'project')
[ 2016-12-07 17:40:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'project_build'  AND `django_content_type`.`app_label` = 'project' ); args=('project_build', u'project')
[ 2016-12-07 17:40:38 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (16, 15) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(16, 15)
[ 2016-12-07 17:40:38 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'project'  ORDER BY `django_content_type`.`name` ASC; args=(u'project',)
[ 2016-12-07 17:41:43 ] util.py[line:79] execute DEBUG (0.001) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-07 17:41:43 ] util.py[line:79] execute DEBUG (0.001) SHOW TABLES; args=None
[ 2016-12-07 17:41:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'logentry'  AND `django_content_type`.`app_label` = 'admin' ); args=('logentry', u'admin')
[ 2016-12-07 17:41:43 ] util.py[line:79] execute DEBUG (0.001) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (1) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(1,)
[ 2016-12-07 17:41:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'admin'  ORDER BY `django_content_type`.`name` ASC; args=(u'admin',)
[ 2016-12-07 17:41:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'permission'  AND `django_content_type`.`app_label` = 'auth' ); args=('permission', u'auth')
[ 2016-12-07 17:41:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'group'  AND `django_content_type`.`app_label` = 'auth' ); args=('group', u'auth')
[ 2016-12-07 17:41:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'user'  AND `django_content_type`.`app_label` = 'auth' ); args=('user', u'auth')
[ 2016-12-07 17:41:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (2, 3, 4) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(2, 3, 4)
[ 2016-12-07 17:41:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'auth'  ORDER BY `django_content_type`.`name` ASC; args=(u'auth',)
[ 2016-12-07 17:41:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'contenttype'  AND `django_content_type`.`app_label` = 'contenttypes' ); args=('contenttype', u'contenttypes')
[ 2016-12-07 17:41:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (5) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(5,)
[ 2016-12-07 17:41:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'contenttypes'  ORDER BY `django_content_type`.`name` ASC; args=(u'contenttypes',)
[ 2016-12-07 17:41:43 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'session'  AND `django_content_type`.`app_label` = 'sessions' ); args=('session', u'sessions')
[ 2016-12-07 17:41:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (6) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(6,)
[ 2016-12-07 17:41:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'sessions'  ORDER BY `django_content_type`.`name` ASC; args=(u'sessions',)
[ 2016-12-07 17:41:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'migrationhistory'  AND `django_content_type`.`app_label` = 'south' ); args=('migrationhistory', u'south')
[ 2016-12-07 17:41:43 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (9) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(9,)
[ 2016-12-07 17:41:43 ] util.py[line:79] execute DEBUG (0.001) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'south'  ORDER BY `django_content_type`.`name` ASC; args=(u'south',)
[ 2016-12-07 17:41:43 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-07 17:41:43 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-07 17:41:48 ] util.py[line:79] execute DEBUG (0.001) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-07 17:41:48 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-07 17:41:48 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-07 17:41:48 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-07 17:41:48 ] util.py[line:79] execute DEBUG (0.001) SHOW variables WHERE Variable_Name='default_storage_engine';; args=None
[ 2016-12-07 17:41:48 ] util.py[line:79] execute DEBUG (0.022) CREATE TABLE ROLLBACK_TEST (X INT); args=None
[ 2016-12-07 17:41:48 ] util.py[line:79] execute DEBUG (0.000) INSERT INTO ROLLBACK_TEST (X) VALUES (8); args=None
[ 2016-12-07 17:41:48 ] util.py[line:79] execute DEBUG (0.000) SELECT COUNT(X) FROM ROLLBACK_TEST; args=None
[ 2016-12-07 17:41:48 ] util.py[line:79] execute DEBUG (0.001) DROP TABLE ROLLBACK_TEST; args=None
[ 2016-12-07 17:41:48 ] generic.py[line:279] execute DEBUG execute "SET FOREIGN_KEY_CHECKS=0;" with params "[]"
[ 2016-12-07 17:41:48 ] util.py[line:79] execute DEBUG (0.000) SET FOREIGN_KEY_CHECKS=0;; args=[]
[ 2016-12-07 17:41:48 ] util.py[line:79] execute DEBUG (0.004) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=None
[ 2016-12-07 17:41:48 ] util.py[line:79] execute DEBUG (0.000) CREATE TABLE DDL_TRANSACTION_TEST (X INT); args=None
[ 2016-12-07 17:41:48 ] util.py[line:79] execute DEBUG (0.001) DROP TABLE DDL_TRANSACTION_TEST; args=None
[ 2016-12-07 17:41:48 ] generic.py[line:279] execute DEBUG execute "SET FOREIGN_KEY_CHECKS=0;" with params "[]"
[ 2016-12-07 17:41:48 ] util.py[line:79] execute DEBUG (0.000) SET FOREIGN_KEY_CHECKS=0;; args=[]
[ 2016-12-07 17:41:48 ] generic.py[line:279] execute DEBUG execute "CREATE TABLE `project` (`id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY, `Pro_name` varchar(20) NOT NULL, `Pro_desc` varchar(200) NOT NULL, `svn_ip` varchar(255) NOT NULL, `buildtype` varchar(30) NOT NULL, `username` varchar(50) NOT NULL)" with params "[]"
[ 2016-12-07 17:41:48 ] util.py[line:79] execute DEBUG (0.000) CREATE TABLE `project` (`id` integer AUTO_INCREMENT NOT NULL PRIMARY KEY, `Pro_name` varchar(20) NOT NULL, `Pro_desc` varchar(200) NOT NULL, `svn_ip` varchar(255) NOT NULL, `buildtype` varchar(30) NOT NULL, `username` varchar(50) NOT NULL); args=[]
[ 2016-12-07 17:41:48 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'project'  AND `django_content_type`.`app_label` = 'project' ); args=('project', u'project')
[ 2016-12-07 17:41:48 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE (`django_content_type`.`model` = 'project_build'  AND `django_content_type`.`app_label` = 'project' ); args=('project_build', u'project')
[ 2016-12-07 17:41:48 ] util.py[line:79] execute DEBUG (0.000) SELECT `auth_permission`.`content_type_id`, `auth_permission`.`codename` FROM `auth_permission` INNER JOIN `django_content_type` ON ( `auth_permission`.`content_type_id` = `django_content_type`.`id` ) WHERE `auth_permission`.`content_type_id` IN (16, 15) ORDER BY `django_content_type`.`app_label` ASC, `django_content_type`.`model` ASC, `auth_permission`.`codename` ASC; args=(16, 15)
[ 2016-12-07 17:41:48 ] util.py[line:79] execute DEBUG (0.000) SELECT `django_content_type`.`id`, `django_content_type`.`name`, `django_content_type`.`app_label`, `django_content_type`.`model` FROM `django_content_type` WHERE `django_content_type`.`app_label` = 'project'  ORDER BY `django_content_type`.`name` ASC; args=(u'project',)
[ 2016-12-07 17:48:52 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-07 17:48:52 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-07 17:48:52 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-07 17:48:52 ] util.py[line:79] execute DEBUG (0.001) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-07 17:48:52 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-07 17:48:52 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-07 17:50:40 ] util.py[line:79] execute DEBUG (0.000) SHOW TABLES; args=None
[ 2016-12-07 17:51:17 ] util.py[line:79] execute DEBUG (0.001) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-07 17:51:18 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-07 17:51:18 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-07 17:52:00 ] util.py[line:79] execute DEBUG (0.000) SELECT `south_migrationhistory`.`id`, `south_migrationhistory`.`app_name`, `south_migrationhistory`.`migration`, `south_migrationhistory`.`applied` FROM `south_migrationhistory` WHERE `south_migrationhistory`.`applied` IS NOT NULL ORDER BY `south_migrationhistory`.`applied` ASC; args=()
[ 2016-12-07 17:52:00 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=0; args=None
[ 2016-12-07 17:52:00 ] util.py[line:79] execute DEBUG (0.000) SET foreign_key_checks=1; args=None
[ 2016-12-07 17:52:22 ] util.py[line:79] execute DEBUG (0.000) SHOW TABLES; args=None
